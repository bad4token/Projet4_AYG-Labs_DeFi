{"version":3,"sources":["../node_modules/@uniswap/widgets/dist/locales lazy /^/.//.*/.js$/ groupOptions: {} namespace object","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","assets/logoH.png","components/ResponsiveAppBar.jsx","components/Dashboard.jsx","components/Token.jsx","components/Uniswap.js","components/Swap.jsx","components/Stake.jsx","components/StakeManageAYG.jsx","components/StakeManageLP.jsx","components/Pool.jsx","components/PoolAdd.jsx","components/PoolManage.jsx","components/NFT.jsx","components/NFTmint.jsx","components/NFTstaking.jsx","components/Footer.jsx","components/SmartsContracts.jsx","components/About.jsx","components/Team.jsx","App.jsx","index.js","contexts/EthContext/EthContext.js","components/TokenManageAYG.jsx","components/TokenManageNAYG.jsx","contexts/EthContext/useEth.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","EthProvider","children","useReducer","dispatch","init","useCallback","artifactAyg","artifactNayg","artifactNftayg","artifactStaking","artifactStakingNFT","artifactVault","artifactLPToken","artifactPoolSwap","Web3","givenProvider","eth","requestAccounts","net","getId","abiAyg","abi","abiNayg","abiNftayg","abiStaking","abiStakingNFT","abiVault","abiLPToken","abiPoolSwap","addressAyg","Erc20_Ayg","networks","address","contractAyg","Contract","addressNayg","Erc20_Nayg","contractNayg","addressNftayg","Erc721_Nftayg","contractNftayg","addressStaking","Staking","contractStaking","addressStakingNFT","StakingNFT","contractStakingNFT","addressVault","EthVaultMintAyg","contractVault","addressLPToken","LPToken","contractLPToken","addressPoolSwap","PoolSwapStake","contractPoolSwap","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","window","ethereum","on","removeListener","EthContext","Provider","value","pages","settings","ResponsiveAppBar","props","navigate","useNavigate","React","useState","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","Fragment","AppBar","position","color","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","display","xs","md","IconButton","size","onClick","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","page","MenuItem","Typography","textAlign","src","Logo","alt","height","Button","log","dataset","buttonKey","my","Tooltip","title","p","Avatar","mt","setting","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","text","secondary","Dashboard","component","width","maxHeight","Grid","item","DrawLinkAHrefExplorer","url","addr","href","target","rel","Token","useEth","_address","addr_AYG","name_AYG","setName_AYG","decimals_AYG","setDecimals_AYG","setSymbol_AYG","totalsupply_AYG","setTotalSupply_AYG","addr_NAYG","name_NAYG","setName_NAYG","decimals_NAYG","setDecimals_NAYG","totalsupply_NAYG","setTotalSupply_NAYG","fetchData","updateAYG","updateNAYG","faucetAYG","methods","faucet","send","from","results","MintSupply","returnValues","amount","catch","totalSupply","call","Math","round","name","decimals","symbol","symbol_AYG","faucetNAYG","getFaucet","symbol_NAYG","className","pt","pb","variant","align","gutterBottom","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Chip","avatar","label","fontSize","infuraId","process","INFURA_ID","jsonRpcEndpoint","jsonRpcProvider","providers","JsonRpcProvider","provider","ethers","Web3Provider","accent","Uniswap","account","setAccount","detectEthereumProvider","ethereumProvider","request","method","maxwidth","marginTop","marginBottom","JsonRpcEndpoint","Swap","inputVault","setInputVault","inputAygSwap","setInputAygSwap","inputNaygSwap","setInputNaygSwap","estAygSwap","setEstAygSwap","estNaygSwap","setEstNaygSwap","tradingFees","setTradingFees","tradingFeesN","setTradingFeesN","ethPrice","setEthPrice","aygPrice","setAygPrice","setNaygPrice","setKonstant","web2","x","Number","parseFloat","toFixed","update","handlePriceFeed","preventDefault","getLatestPriceEth","utils","fromWei","getLatestPriceLinkProxy","naygPrice","getLatestPriceBnbProxy","konstant","handleSwapAYG","approve","toWei","swapPoolAyg","handleSwapNAYG","swapPoolNayg","handleVaultMint","vaultDeposit","toString","handleVaultBurn","vaultWithdraw","receipt","container","justifyContent","Card","TextField","onChange","createData","token1","token2","apy","totalStaked","link","click","rows","DrawIcoToken","CODE","toUpperCase","Stake","FormControlLabel","control","Switch","labelPlacement","minWidth","row","border","Item","TabPanel","index","other","role","hidden","a11yProps","StakeManage","alignment","inputValue","setInputValue","inputValue2","setInputValue2","totalSupplyAYG","setTotalSupplyAYG","yourSupplyAYG","setYourSupplyAYG","yourEarnedAYG","setYourEarnedAYG","poolUsdValue","setPoolUsdValue","moveStakingAYG","setDataStakingAYG","moveUnstakingAYG","setDataUnstakingAYG","graphStakingAYG","setDataGraphAYG","yourAprAYG","setYourAprAyg","setValue","newValue","interval","setInterval","clearInterval","handleStake","stake","handleUnstake","withdraw","getRewardAYG","getReward","exit","balanceOf","earned","getMyStakingApr","yourAprAgy","getPastEvents","fromBlock","toBlock","supplyTotal","result","push","blockNumber","user","supply","reward","ToggleButtonGroup","exclusive","ToggleButton","startIcon","ResponsiveContainer","aspect","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Legend","Bar","stackId","fill","borderBottom","borderColor","Tabs","Tab","StakeManageLP","inputStake","setInputStake","inputStakeId","setInputStakeId","handleStakeLP","handleUnstakeLP","unstake","poolValue","volume24","apr","Pool","alert","Stack","direction","PoolAdd","handleDepositPool","naygAmount","depositPool","handleWithdrawPool","withdrawPool","NFTmint","fullWidth","addr_NFTAYG","setTotalSupply","mintButton","setMintButton","mintStatus","setMintStatus","updateData","mint1","mint2","mint3","GlobalStyles","styles","ul","margin","listStyle","CssBaseline","alignItems","sm","CardContent","grey","mb","CardActions","disabled","DrawBoxUnstakedNFT","doStakingNFT","tokenId","getAttribute","tokenIds","setRowStakedNFT","setRowUnstakedNFT","CardMedia","image","flexDirection","flex","description","pl","DrawBoxStakedNFT","earnedReward","setEarnedReward","earnedBonus","setEarnedBonus","earnedTotal","setEarnedTotal","doUnstakingNFT","Unstake","claimRewards","claim","updateRewards","getRewardAmount","getBonusAmount","endIcon","NFTstaking","rewardsPerHour","setRewardsPerHour","tokenUnstakedByOwner","setTokenUnstakedByOwner","rowUnstakedNFT","rowStakedNFT","getData","getUnstakedNFT","i","tokenOfOwnerByIndex","tokenURI","getDataFromTokenURI","getStakedNFT","tokenStakedByOwner","getDataFromTokenURI2","length","fetch","response","json","responseJson","newNFT","createNFT","Copyright","Link","Date","getFullYear","footers","links","Footer","borderTop","divider","py","footer","flexWrap","ml","DrawLinkAHref","SmartsContracts","About","Team","configureChains","chain","mainnet","kovan","localhost","polygon","optimism","arbitrum","alchemyProvider","alchemyId","ALCHEMY_ID","publicProvider","chains","connectors","getDefaultWallets","appName","wagmiClient","createClient","autoConnect","App","client","path","element","TokenManageAYG","TokenManageNAYG","StakeManageAYG","PoolManage","NFT","rootElement","document","getElementById","createRoot","render","createContext","setAddr_AYG","amountFaucet_AYG","setAmountFaucet_AYG","moveTokenAYG","setDataMoveAYG","graphTokenAYG","nbMoveAYG","setNbMoveAYG","setFaucetAYG","eval","setFaucet","amountFaucet","methode","transactionHash","date","to","setAddr_NAYG","setSymbol_NAYG","amountFaucet_NAYG","setAmountFaucet_NAYG","moveTokenNAYG","setDataMoveNAYG","graphTokenNAYG","setDataGraphNAYG","nbMoveNAYG","setNbMoveNAYG","setFaucetNAYG","useContext"],"mappings":"mIAAA,IAAIA,EAAM,CACT,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,cAAe,CACd,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,IAED,aAAc,CACb,KACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,KACzBG,EAAOC,QAAUf,G,sICxJXgB,EACE,OAGFC,EAAe,CACnBC,SAAU,KACVC,KAAM,KACNC,SAAU,KACVC,UAAW,KACXC,SAAU,MAGNC,EAAU,SAACC,EAAOC,GACtB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,GAAQD,IACDV,EACH,OAAO,2BAAKQ,GAAUG,GAEtB,MAAM,IAAInB,MAAM,kC,+EC6GPoB,MAlHf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAA0BC,qBAAWP,EAASN,GAA9C,mBAAOO,EAAP,KAAcO,EAAd,KAEMC,EAAOC,sBAAW,iDACtB,WAAOC,EAAaC,EAAcC,EAAgBC,EAAiBC,EAAoBC,EAAeC,EAAiBC,GAAvH,yIACMP,EADN,wBAEUf,EAAO,IAAIuB,IAAKA,IAAKC,eAAiB,uBAFhD,SAG2BxB,EAAKyB,IAAIC,kBAHpC,cAGUzB,EAHV,gBAI4BD,EAAKyB,IAAIE,IAAIC,QAJzC,OAIU1B,EAJV,OAMU2B,EAASd,EAAYe,IACrBC,EAAUf,EAAac,IACvBE,EAAYf,EAAea,IAC3BG,EAAaf,EAAgBY,IAC7BI,EAAgBf,EAAmBW,IACnCK,EAAWf,EAAcU,IACzBM,EAAaf,EAAgBS,IAC7BO,EAAcf,EAAiBQ,IAWrC,IACEQ,EAAaC,EAAUC,SAAStC,GAAWuC,QAC3CC,EAAc,IAAI1C,EAAKyB,IAAIkB,SAASd,EAAQS,GAE5CM,EAAcC,EAAWL,SAAStC,GAAWuC,QAC7CK,EAAe,IAAI9C,EAAKyB,IAAIkB,SAASZ,EAASa,GAE9CG,EAAgBC,EAAcR,SAAStC,GAAWuC,QAClDQ,EAAiB,IAAIjD,EAAKyB,IAAIkB,SAASX,EAAWe,GAElDG,EAAiBC,EAAQX,SAAStC,GAAWuC,QAC7CW,EAAkB,IAAIpD,EAAKyB,IAAIkB,SAASV,EAAYiB,GAEpDG,EAAoBC,EAAWd,SAAStC,GAAWuC,QACnDc,EAAqB,IAAIvD,EAAKyB,IAAIkB,SAAST,EAAemB,GAE1DG,EAAeC,EAAgBjB,SAAStC,GAAWuC,QACnDiB,EAAgB,IAAI1D,EAAKyB,IAAIkB,SAASR,EAAUqB,GAEhDG,EAAiBC,EAAQpB,SAAStC,GAAWuC,QAC7CoB,EAAkB,IAAI7D,EAAKyB,IAAIkB,SAASP,EAAYuB,GAEpDG,EAAkBC,EAAcvB,SAAStC,GAAWuC,QACpDuB,EAAmB,IAAIhE,EAAKyB,IAAIkB,SAASN,EAAayB,GACpD,MAAOG,GACPC,QAAQC,MAAMF,GAGlBrD,EAAS,CACPL,KAAMV,EACNW,KAAM,CAAER,OAAMC,WAAUC,YAChBa,cAAa2B,cAAaJ,aAC1BtB,eAAc8B,eAAcF,cAC5B3B,iBAAgBgC,iBAAgBF,gBAChC7B,kBAAiBkC,kBAAiBF,iBAClC/B,qBAAoBoC,qBAAoBF,oBACxCjC,gBAAesC,gBAAeF,eAC9BnC,kBAAiBwC,kBAAiBF,iBAClCrC,mBAAkB0C,mBAAkBF,qBA9DlD,4CADsB,oEAmEnB,IAkCL,OAhCAM,qBAAU,WACR,IAAMC,EAAO,iDAAG,4GACd,IACQtD,EAAcuD,EAAQ,KACtBtD,EAAesD,EAAQ,KACvBrD,EAAiBqD,EAAQ,KACzBpD,EAAkBoD,EAAQ,KAC1BnD,EAAqBmD,EAAQ,KAC7BlD,EAAgBkD,EAAQ,KACxBjD,EAAkBiD,EAAQ,KAC1BhD,EAAmBgD,EAAQ,KACjCzD,EAAKE,EAAaC,EAAcC,EAAgBC,EAAiBC,EAAoBC,EAAeC,EAAiBC,GACrH,MAAO2C,GACPC,QAAQC,MAAMF,GAZF,2CAAH,qDAgBbI,MACC,CAACxD,IAEJuD,qBAAU,WACR,IAAMG,EAAS,CAAC,eAAgB,mBAC1BC,EAAe,WACnB3D,EAAKR,EAAMN,WAIb,OADAwE,EAAOE,SAAQ,SAAArF,GAAC,OAAIsF,OAAOC,SAASC,GAAGxF,EAAGoF,MACnC,WACLD,EAAOE,SAAQ,SAAArF,GAAC,OAAIsF,OAAOC,SAASE,eAAezF,EAAGoF,SAEvD,CAAC3D,EAAMR,EAAMN,WAGd,cAAC+E,EAAA,EAAWC,SAAZ,CAAqBC,MAAO,CAC1B3E,QACAO,YAFF,SAIGF,K,sJC1HQ,MAA0B,kC,0BCoBnCuE,EAAQ,CAAC,YAAa,QAAS,aAAc,QAAS,OAAQ,OAC9DC,EAAW,CAAC,aAAc,UAgIjBC,EA9HU,SAACC,GAExB,IAAMC,EAAWC,cAGjB,EAAsCC,IAAMC,SAAS,MAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCH,IAAMC,SAAS,MAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KAKMC,EAAqB,WACzBH,EAAe,OAMXI,EAAsB,WAC1BF,EAAgB,OAMlB,OACE,cAAC,IAAMG,SAAP,UAEE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAhC,SACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UAEE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,EAAGC,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdC,QA9Bc,SAACC,GACzBtB,EAAesB,EAAMC,gBA8BXf,MAAM,UANR,SAQE,cAAC,IAAD,MAEF,cAACgB,EAAA,EAAD,CACE1H,GAAG,cACH2H,SAAU1B,EACV2B,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,QAEdG,KAAMC,QAAQjC,GACdkC,QAAS9B,EACTW,GAAI,CACFE,QAAS,CAAEC,GAAI,QAASC,GAAI,SAfhC,SAkBG3B,EAAMrG,KAAI,SAACgJ,GAAD,OACT,cAACC,EAAA,EAAD,CAAqBd,QAASlB,EAA9B,SACE,cAACiC,EAAA,EAAD,CAAYC,UAAU,SAAtB,SAAgCH,KADnBA,QAKnB,qBAAKI,IAAKC,EAAMC,IAAI,aAAaC,OAAO,YAG1C,eAAC5B,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,EAAGC,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACE,qBAAKoB,IAAKC,EAAMC,IAAI,aAAaC,OAAO,SACvClD,EAAMrG,KAAI,SAACgJ,GAAD,OACT,cAACQ,EAAA,EAAD,CAEErB,QAAS,SAAC3H,GACR8E,QAAQmE,IAAIjJ,EAAE6H,cAAcqB,QAAQC,WACpClD,EAAS,IAAIjG,EAAE6H,cAAcqB,QAAQC,YAGvC,kBAAiBX,EACjBpB,GAAI,CAAEgC,GAAI,EAAGtC,MAAO,QAASQ,QAAS,SARxC,SAUGkB,GATIA,SAaT,cAACQ,EAAA,EAAD,CAAQtB,KAAK,SAAb,SACE,cAAC,IAAD,MAEJ,eAACP,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,UACE,cAACgC,EAAA,EAAD,CAASC,MAAM,gBAAgB3B,QA5Ed,SAACC,GAC1BpB,EAAgBoB,EAAMC,gBA2E8CT,GAAI,CAAEmC,EAAG,GAArE,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAAC1B,EAAA,EAAD,CACEV,GAAI,CAAEqC,GAAI,QACVrJ,GAAG,cACH2H,SAAUxB,EACVyB,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdG,KAAMC,QAAQ/B,GACdgC,QAAS7B,EAdX,SAgBGZ,EAAStG,KAAI,SAACkK,GAAD,OACZ,cAACjB,EAAA,EAAD,CAAwBd,QAASjB,EAAjC,SACE,cAACgC,EAAA,EAAD,CAAYC,UAAU,SAAtB,SAAgCe,KADnBA,qB,0BC9HlBC,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eA8CbC,MA1Cf,WACE,IAAMtE,EAAWC,cAEjB,OACE,eAACa,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,uBACA,cAACG,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,KACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,OAE3BsB,IAAI,cACJF,IAAI,qBACJjB,QAAS,SAAC3H,GACRiG,EAAS,mBAIb,uBACA,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,qBACJF,IAAI,8BACJjB,QAAS,SAAC3H,GACRiG,EAAS,iB,+GC3BR0D,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAG5B,SAASO,GAAsB7E,GAC7B,IAAM8E,EAAG,6CAAyC9E,EAAM+E,MACxD,OAAO,mBAAGC,KAAMF,EAAKG,OAAO,SAASC,IAAI,aAAlC,SAAgDlF,EAAM+E,OA+QhDI,OA5Qf,WAEE,MAA2DC,cAAnDnK,MAASqC,EAAjB,EAAiBA,YAAaI,EAA9B,EAA8BA,aAAc7C,EAA5C,EAA4CA,SAE9CiE,QAAQmE,IAAIvF,EAAa2H,UAEvB,MAAgCjF,mBAAS9C,EAAY+H,UAArD,mBAAOC,EAAP,KACA,GADA,KACgClF,mBAAS,IAAzC,mBAAOmF,EAAP,KAAiBC,EAAjB,KACA,EAAwCpF,mBAAS,GAAjD,mBAAOqF,EAAP,KAAqBC,EAArB,KACA,EAAoCtF,mBAAS,GAA7C,mBAAmBuF,GAAnB,WACA,EAA8CvF,mBAAS,GAAvD,mBAAOwF,EAAP,KAAwBC,EAAxB,KAGA,EAAkCzF,mBAAS1C,EAAa2H,UAAxD,mBAAOS,EAAP,KACA,GADA,KACkC1F,mBAAS,IAA3C,mBAAO2F,EAAP,KAAkBC,EAAlB,KACA,EAA0C5F,mBAAS,GAAnD,mBAAO6F,EAAP,KAAsBC,EAAtB,KACA,EAAsC9F,mBAAS,GAA/C,mBACA,GADA,UACgDA,mBAAS,IAAzD,mBAAO+F,EAAP,KAAyBC,EAAzB,KAEApH,qBAAU,WACR,GAAG1B,GAAeI,EAAa,CAAC,IACjB2I,EADgB,iDAC/B,wFACI,IACEC,KACAC,KACA,MAAM1H,GACJC,QAAQC,MAAMF,GALtB,2CAD+B,qDAS/BwH,OAEC,IAGD,IAAMG,EAAS,iDAAG,wFAChBlJ,EAAYmJ,QAAQC,OAAO7L,EAAS,IAAI8L,KAAK,CAACC,KAAM/L,EAAS,KAC1Dd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZ/H,QAAQmE,IAAI4D,EAAQ1H,OAAO2H,WAAWC,aAAaC,QACnDV,QAEDW,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MARA,2CAAH,qDAWTyH,GAAS,iDAAG,wFAChBhJ,EAAYmJ,QAAQS,cAAcC,KAAK,CAAEP,KAAM/L,EAAS,KACrDd,MAAK,SAAC6L,GACLA,GAAkC,KAAD,IAAC,GAAI,IACtCA,EAAkBwB,KAAKC,MAAwB,IAAlBzB,GAAyB,IACtDC,EAAmBD,GACnB9G,QAAQmE,IAAI,qBAAqB2C,MAElCqB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,EAAYmJ,QAAQa,OAAOH,KAAK,CAAEP,KAAM/L,EAAS,KAC9Cd,MAAK,SAACwL,GACLC,EAAYD,GACZzG,QAAQmE,IAAI,cAAcsC,MAE3B0B,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,EAAYmJ,QAAQc,WAAWJ,KAAK,CAAEP,KAAM/L,EAAS,KAClDd,MAAK,SAAC0L,GACLC,EAAgBD,GAChB3G,QAAQmE,IAAI,kBAAkBwC,MAE/BwB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,EAAYmJ,QAAQe,SAASL,KAAK,CAAEP,KAAM/L,EAAS,KAChDd,MAAK,SAAC0N,GACL9B,EAAc8B,GACd3I,QAAQmE,IAAI,gBAAgBwE,MAE7BR,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MApCA,2CAAH,qDA2CT6I,GAAU,iDAAG,wFACjBhK,EAAa+I,QAAQkB,UAAU9M,EAAS,IAAI8L,KAAK,CAACC,KAAM/L,EAAS,KAC9Dd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZ/H,QAAQmE,IAAI4D,EAAQ1H,OAAO2H,WAAWC,aAAaC,QACnDT,QAEDU,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MARC,2CAAH,qDAWV0H,GAAU,iDAAG,wFACjB7I,EAAa+I,QAAQS,cAAcC,KAAK,CAAEP,KAAM/L,EAAS,KACtDd,MAAK,SAACoM,GACLA,GAAoC,KAAD,IAAC,GAAI,IACxCA,EAAmBiB,KAAKC,MAAyB,IAAnBlB,GAA0B,IACxDC,EAAoBD,GACpBrH,QAAQmE,IAAI,sBAAsBkD,MAEnCc,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,EAAa+I,QAAQa,OAAOH,KAAK,CAAEP,KAAM/L,EAAS,KAC/Cd,MAAK,SAACgM,GACLC,EAAaD,GACbjH,QAAQmE,IAAI,eAAe8C,MAE5BkB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,EAAa+I,QAAQc,WAAWJ,KAAK,CAAEP,KAAM/L,EAAS,KACnDd,MAAK,SAACkM,GACLC,EAAiBD,GACjBnH,QAAQmE,IAAI,mBAAmBgD,MAEhCgB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,EAAa+I,QAAQe,SAASL,KAAK,CAAEP,KAAM/L,EAAS,KACjDd,MAAK,SAAC6N,GACLjC,EAAciC,GACd9I,QAAQmE,IAAI,iBAAiB2E,MAE9BX,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MApCC,2CAAH,qDA2CZoB,GAAWC,cAEjB,OACE,sBAAK2H,UAAU,QAAf,UAEE,eAAC9G,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,mBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,sBAMF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAAKwD,UAAU,OAAnC,SACE,cAACrD,EAAA,EAAD,UACE,cAACgH,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACE,eAACwE,GAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,0BAGJ,eAACC,GAAA,EAAD,WAEI,eAACF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,cAACC,EAAA,EAAD,CAAMC,OAAQ,cAACnF,EAAA,EAAD,CAAQV,IAAI,MAAMF,IAAI,kBAAoBgG,MAAM,MAAMZ,QAAQ,eAE9E,cAACO,GAAA,EAAD,UAAYhD,IACZ,cAACgD,GAAA,EAAD,UAAY9C,IACZ,cAAC8C,GAAA,EAAD,UAAY3C,IACZ,cAAC2C,GAAA,EAAD,UACE,cAAC1D,GAAD,CACEE,KAAMO,MAGV,cAACiD,GAAA,EAAD,UACE,cAAC9G,EAAA,EAAD,CACE,aAAW,OACXC,KAAK,QACLC,QAAS,SAAC3H,GACRiG,GAAS,qBAJb,SAOE,cAAC,KAAD,CACE4I,SAAS,gBAIf,cAACN,GAAA,EAAD,UACE,cAAC9G,EAAA,EAAD,CACE,aAAW,OACXC,KAAK,QACLC,QAAS6E,EAHX,SAKE,cAAC,KAAD,CACEqC,SAAS,mBAMjB,eAACP,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,cAACC,EAAA,EAAD,CAAMC,OAAQ,cAACnF,EAAA,EAAD,CAAQV,IAAI,OAAOF,IAAI,mBAAqBgG,MAAM,OAAOZ,QAAQ,eAEjF,cAACO,GAAA,EAAD,UAAYxC,IACZ,cAACwC,GAAA,EAAD,UAAYtC,IACZ,cAACsC,GAAA,EAAD,UAAYpC,IACZ,cAACoC,GAAA,EAAD,UACE,cAAC1D,GAAD,CACEE,KAAMe,MAGV,cAACyC,GAAA,EAAD,UACE,cAAC9G,EAAA,EAAD,CACE,aAAW,OACXC,KAAK,QACLC,QAAS,SAAC3H,GACRiG,GAAS,sBAJb,SAOE,cAAC,KAAD,CACE4I,SAAS,gBAIf,cAACN,GAAA,EAAD,UACE,cAAC9G,EAAA,EAAD,CACE,aAAW,OACXC,KAAK,QACLC,QAAS+F,GAHX,SAKE,cAAC,KAAD,CACEmB,SAAS,mC,4FCxR7BC,I,QAAWC,0JAAYC,WACvBC,GAAe,uCAAmCH,IAClDI,GAAkB,IAAIC,aAAUC,gBAAgBH,IAChDI,GAAW,IAAIC,KAAOH,UAAUI,aAAaL,IAE7CrF,GAAe,CACnB2F,OAAQ,WAGK,SAASC,KAEtB,MAA8BrJ,mBAAS,CACrC/C,QAAS,GACTgM,SAAUA,KAFZ,mBAAOK,EAAP,KAAgBC,EAAhB,KAFgC,sDAQhC,kHACiCC,OADjC,YACQC,EADR,wCAI2BvK,OAAOC,SAASuK,QAAQ,CAC7CC,OAAQ,wBALd,OAIUlP,EAJV,OAQUwC,EAAUxC,EAAS,GACzB8O,EAAW,CACTtM,QAASA,EACTgM,SAAUQ,IAXhB,4CARgC,sBAwBhC,OACE,eAAC9I,EAAA,EAAD,CAAWiJ,SAAS,KAApB,UACE,cAAC7I,EAAA,EAAD,CAAK8I,UAAW,EAAGC,aAAc,EAAjC,SACE,cAAClH,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QA3Bf,2CA2B1B,qCAEF,cAACR,EAAA,EAAD,UACE,qBAAK0G,UAAU,UAAf,SACE,cAAC,KAAD,CACAwB,SAAUK,EAAQL,SAClBc,gBAAiBlB,GACjBpF,MAAOA,YCmLFuG,OA3Nf,WAEE,MAA6GhF,cAArGnK,MAASqC,EAAjB,EAAiBA,YAAaI,EAA9B,EAA8BA,aAAcY,EAA5C,EAA4CA,cAAeM,EAA3D,EAA2DA,iBAAkBF,EAA7E,EAA6EA,gBAAiB7D,EAA9F,EAA8FA,SAC9F,EAAoCuF,mBAAS,IAA7C,mBACA,GADA,UACqCA,sBAArC,mBAAOiK,EAAP,KAAmBC,EAAnB,KACA,EAAwClK,mBAAS,IAAjD,mBAAOmK,EAAP,KAAqBC,EAArB,KACA,EAA0CpK,mBAAS,IAAnD,mBAAOqK,EAAP,KAAsBC,EAAtB,KACA,EAAoCtK,qBAApC,mBAAOuK,EAAP,KAAmBC,EAAnB,KACA,EAAsCxK,qBAAtC,mBAAOyK,EAAP,KAAoBC,EAApB,KACA,EAAsC1K,qBAAtC,mBAAO2K,EAAP,KAAoBC,EAApB,KACA,EAAwC5K,qBAAxC,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAAiC9K,qBAAjC,mBAAO+K,EAAP,KAAiBC,EAAjB,KACA,EAAiChL,qBAAjC,oBAAOiL,GAAP,MAAiBC,GAAjB,MACA,GAAkClL,qBAAlC,qBAAkBmL,IAAlB,aACA,GAAgCnL,qBAAhC,qBAAiBoL,IAAjB,aAgBA,SAASC,GAAKC,GACZ,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,GAdtC7M,qBAAU,WACR,GAAG1B,EAAY,CAAC,IACD+I,EADA,iDACf,wFACE,IACEyF,KACA,MAAMjN,GACJC,QAAQC,MAAMF,GAJpB,2CADe,qDAQfwH,OAEC,IAMH,IASM0F,GAAe,iDAAG,WAAMnK,GAAN,kGACtBA,EAAMoK,iBADgB,kBAGG1N,EAAcmI,QAAQwF,oBAAoB9E,KAAK,CAACP,KAAM/L,EAAS,KAHlE,cAGdsQ,EAHc,OAIpBC,EAAYK,GAAKtP,IAAK+P,MAAMC,QAAQhB,KAJhB,SAKIvM,EAAiB6H,QAAQ2F,0BAA0BjF,KAAK,CAACP,KAAM/L,EAAS,KAL5E,cAKdwR,EALc,OAMpBd,GAAaE,GAAKtP,IAAK+P,MAAMC,QAAQE,KANjB,UAOGzN,EAAiB6H,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KAP1E,QAOdwQ,EAPc,OAQpBC,GAAYG,GAAKtP,IAAK+P,MAAMC,QAAQd,KAC9BkB,EAAWd,GAAMJ,EAAWgB,GAClCb,GAAYe,GAEZ3B,EAAca,GADRd,EAAaJ,EAAegC,IAElCvB,EAAeS,GAAkB,IAAbd,IAEpBG,EAAeW,GADTZ,EAAcJ,EAAgB8B,IAEpCrB,EAAgBO,GAAmB,IAAdZ,IAhBD,kDAkBpB/L,QAAQmE,IAAR,MAlBoB,0DAAH,sDAyBfuJ,GAAa,iDAAG,wGACdlP,EAAYmJ,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAMnC,IAAe5D,KAAK,CAACC,KAAM/L,EAAS,KADpF,uBAEd+D,EAAiB6H,QAAQkG,YAAYxQ,IAAK+P,MAAMQ,MAAMnC,IAAe5D,KAAK,CAACC,KAAM/L,EAAS,KAF5E,2CAAH,qDAKb+R,GAAc,iDAAG,wGACflP,EAAa+I,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAMjC,IAAgB9D,KAAK,CAACC,KAAM/L,EAAS,KADrF,uBAEf+D,EAAiB6H,QAAQoG,aAAa1Q,IAAK+P,MAAMQ,MAAMjC,IAAgB9D,KAAK,CAACC,KAAM/L,EAAS,KAF7E,2CAAH,qDAYhBiS,GAAe,iDAAG,WAAMlL,GAAN,wFACtBA,EAAMoK,iBADgB,SAGdhF,EAAS7K,IAAK+P,MAAMQ,MAAMrC,GAHZ,SAId/L,EAAcmI,QAAQsG,aAAa/F,EAAOgG,YAAYrG,KAAK,CAACC,KAAM/L,EAAS,GAAI+E,MAAOoH,IAJxE,uDAMpBlI,QAAQmE,IAAR,MANoB,yDAAH,sDAUfgK,GAAe,iDAAG,WAAMrL,GAAN,0FACtBA,EAAMoK,iBADgB,SAGdhF,EAAS7K,IAAK+P,MAAMQ,MAAMrC,GAHZ,SAIE/L,EAAcmI,QAAQyG,cAAclG,EAAOgG,YAAYrG,KAAK,CAACC,KAAM/L,EAAS,KAJ9E,OAIdsS,EAJc,OAKpBrO,QAAQmE,IAAIkK,GALQ,gDAOpBrO,QAAQmE,IAAR,MAPoB,yDAAH,sDAyBb6I,GAAM,iDAAG,2HAGUlN,EAAiB6H,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KAHjF,cAGPwQ,EAHO,gBAIWzM,EAAiB6H,QAAQ2F,0BAA0BjF,KAAK,CAACP,KAAM/L,EAAS,KAJnF,OAIPwR,EAJO,OAKbf,GAAYG,GAAMtP,IAAK+P,MAAMC,QAAQd,KACrCE,GAAaE,GAAKtP,IAAK+P,MAAMC,QAAQE,KAC/BE,EAAWd,GAAMJ,EAAWgB,GAClCb,GAAYe,GARC,kDAUTzN,QAAQmE,IAAR,MAVS,kEAAH,qDAgBZ,OAEE,cAAC,IAAMtC,SAAP,UACE,eAACI,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKC,MAAM,SAASnH,MAAM,eAAeoH,cAAY,EAAxF,0BAGA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,oDACA,cAAC9B,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,uDACA,uBACA,eAACG,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAI6L,WAAS,EAAChJ,QAAS,EAAGiJ,eAAe,SAAxD,UACE,cAAC1I,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC+L,GAAA,EAAD,CAAM1I,MAAI,EAACrD,GAAI,EAAG0I,UAAW,EAA7B,UACE,uBACA,cAACvH,EAAA,EAAD,CAAYsF,QAAQ,KAApB,uBACA,cAACtF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,qDACA,uBACA,cAAC+I,GAAA,EAAD,CAAW3E,MAAM,SAASZ,QAAQ,SAASpI,MAAOyK,EAAYmD,SAxEnD,SAAA5L,GACvB0I,EAAc1I,EAAMqD,OAAOrF,UAwEf,uBACA,uBACA,cAACoD,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASmL,GAAlD,sBACA,qCACA,cAAC9J,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASsL,GAAlD,sBACA,uBACA,uBACA,eAACvK,EAAA,EAAD,4BAA2ByI,EAA3B,QACA,eAACzI,EAAA,EAAD,4BAA2B2I,GAA3B,QACA,uBACA,eAAC3I,EAAA,EAAD,6CAA2C,6CAC3C,uBACA,eAACA,EAAA,EAAD,uCAAsC+I,GAAKN,EAAWE,GAAU,GAAhE,UACA,eAAC3I,EAAA,EAAD,4CAA2C+I,GAAKJ,GAAWF,EAAU,GAArE,UACA,uBACA,cAACnI,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASoK,GAAlD,yCACA,uBACA,4BAGJ,cAACpH,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC+L,GAAA,EAAD,WACE,uBACE,cAAC5K,EAAA,EAAD,CAAYsF,QAAQ,KAApB,+BACA,uBACA,cAACuF,GAAA,EAAD,CAAW3E,MAAM,mBAAmBZ,QAAQ,SAASpI,MAAO2K,EAAciD,SAjJjE,SAAA5L,GACrB4I,EAAgB5I,EAAMqD,OAAOrF,UAiJjB,uBACA,uBACA,eAAC8C,EAAA,EAAD,2BAA2B+I,GAAKd,EAAaI,GAA7C,WACA,eAACrI,EAAA,EAAD,2BAA2BqI,EAA3B,WACA,uBACA,cAAC/H,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAWrG,QAASoK,GAAjD,0BACA,qCACA,cAAC/I,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAWrG,QAAS6K,GAAjD,wBACA,uBACA,uBACA,cAACe,GAAA,EAAD,CAAW3E,MAAM,oBAAoBZ,QAAQ,SAASpI,MAAO6K,EAAe+C,SAxJlE,SAAA5L,GACtB8I,EAAiB9I,EAAMqD,OAAOrF,UAwJlB,uBACA,uBACA,eAAC8C,EAAA,EAAD,2BAA2B+I,GAAKZ,EAAcI,GAA9C,UACA,eAACvI,EAAA,EAAD,2BAA2BuI,EAA3B,UACA,uBACA,cAACjI,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAWrG,QAASoK,GAAjD,0BACA,qCACA,cAAC/I,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASiL,GAAlD,yBACA,uBACA,4BAGN,eAACjI,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,UACE,eAAC+L,GAAA,EAAD,CAAM1I,MAAI,EAACrD,GAAI,EAAG0I,UAAW,EAA7B,UACE,uBACA,cAACvH,EAAA,EAAD,CAAYsF,QAAQ,KAApB,8BACA,cAACyB,GAAD,IACA,0BAEF,mC,sBCtMZ,SAASgE,GAAWC,EAAQC,EAAQC,EAAKC,EAAaC,EAAMC,GAC1D,MAAO,CAAEL,SAAQC,SAAQC,MAAKC,cAAaC,OAAMC,SAGnD,IAAMC,GAAO,CACXP,GAAW,MAAO,MAAO,EAAG,EAAG,mBAAoB,aACnDA,GAAW,WAAY,MAAO,EAAG,EAAG,kBAAmB,mBAGzD,SAASQ,GAAT,GAAsC,IAAdnL,EAAa,EAAbA,IAAK5I,EAAQ,EAARA,KACrB8K,EAAK,OAAD,OAAS9K,EAAT,QACJgU,EAAOhU,EAAKiU,cAElB,OAAO,cAACzF,EAAA,EAAD,CACLC,OAAQ,cAACnF,EAAA,EAAD,CAAQV,IAAKA,EAAKF,IAAKoC,IAC/B4D,MAAOsF,EACPlG,QAAQ,aAsFGoG,OAlFf,WACE,IAAMnO,EAAWC,cAEjB,OACE,eAAC,WAAD,WAEE,eAACa,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,mBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,sCAKF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAAKwD,UAAU,OAAnC,SACE,eAACrD,EAAA,EAAD,WACE,cAACkN,GAAA,EAAD,CACEzO,MAAM,SACN0O,QAAS,cAACC,GAAA,EAAD,CAAQzN,MAAM,YACvB8H,MAAM,cACN4F,eAAe,WAEjB,uBACA,uBACA,cAACrG,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACE,eAACwE,GAAA,EAAD,CAAOhH,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,cAACpG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,+BACA,cAACA,GAAA,EAAD,SAGJ,cAACC,GAAA,EAAD,UACCwF,GAAKxU,KAAI,SAACkV,GAAD,OACN,eAACpG,GAAA,EAAD,CACElH,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IADtD,UAGE,cAACpG,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,cAACwF,GAAD,CAAcnL,IAAK4L,EAAIhB,OAAQxT,KAAMwU,EAAIhB,WAE3C,cAACnF,GAAA,EAAD,gBACA,cAACA,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,cAACwF,GAAD,CAAcnL,IAAK4L,EAAIf,OAAQzT,KAAMwU,EAAIf,WAE3C,cAACpF,GAAA,EAAD,gBACA,cAACA,GAAA,EAAD,kBACA,cAACA,GAAA,EAAD,gBACA,cAACA,GAAA,EAAD,UACE,cAACvF,EAAA,EAAD,CACEgF,QAAQ,YACRrG,QAAS,SAAC3H,GACRiG,EAAS,GAAD,OAAIyO,EAAIZ,QAHpB,SAMGY,EAAIX,gC,+MCxE7B,SAASE,GAAT,GAAsC,IAAdnL,EAAa,EAAbA,IAAK5I,EAAQ,EAARA,KACrB8K,EAAK,UAAD,OAAY9K,EAAZ,QACJgU,EAAOhU,EAAKiU,cAClB,OAAO,cAACzF,EAAA,EAAD,CACLC,OAAQ,cAACnF,EAAA,EAAD,CAAQV,IAAKA,EAAKF,IAAKoC,IAC/B4D,MAAOsF,EACPlG,QAAQ,aAKZ,IAAM4G,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAI5B,SAASuK,GAAS7O,GAChB,IAAQ1E,EAAqC0E,EAArC1E,SAAUsE,EAA2BI,EAA3BJ,MAAOkP,EAAoB9O,EAApB8O,MAAUC,EAAnC,aAA6C/O,EAA7C,IAEA,OACE,6CACEgP,KAAK,WACLC,OAAQrP,IAAUkP,EAClB1U,GAAE,0BAAqB0U,GACvB,uCAA+BA,IAC3BC,GALN,aAOGnP,IAAUkP,GACT,cAAC3N,EAAA,EAAD,CAAKC,GAAI,CAAEmC,EAAG,GAAd,SACE,cAACb,EAAA,EAAD,UAAapH,SAavB,SAAS4T,GAAUJ,GACjB,MAAO,CACL1U,GAAG,cAAD,OAAgB0U,GAClB,gBAAgB,mBAAhB,OAAoCA,IA6azBK,OAraf,WACE,IAAMlP,EAAWC,cAEjB,EAA6FkF,cAArFnK,MAASqC,EAAjB,EAAiBA,YAAaU,EAA9B,EAA8BA,gBAAiBM,EAA/C,EAA+CA,cAAezD,EAA9D,EAA8DA,SAAUiD,EAAxE,EAAwEA,eAExE,EAAkCqC,IAAMC,SAAS,SAAjD,mBAAOgP,EAAP,KACA,GADA,KACoCjP,IAAMC,SAAS,KAAnD,mBAAOiP,EAAP,KAAmBC,EAAnB,KACA,EAAsClP,mBAAS,GAA/C,mBAAOmP,EAAP,KAAoBC,EAApB,KACA,EAA4CpP,mBAAS,GAArD,mBAAOqP,EAAP,KAAuBC,EAAvB,KACA,EAA0CtP,mBAAS,GAAnD,mBAAOuP,EAAP,KAAsBC,EAAtB,KACA,EAA0CxP,mBAAS,GAAnD,mBAAOyP,EAAP,KAAsBC,EAAtB,KACA,EAAwC1P,mBAAS,GAAjD,mBAAO2P,EAAP,KAAqBC,EAArB,KACA,EAA4C5P,mBAAS,IAArD,mBAAO6P,EAAP,KAAuBC,GAAvB,KAEA,GAAgD9P,mBAAS,IAAzD,qBAAO+P,GAAP,MAAyBC,GAAzB,MAEA,GAA2ChQ,mBAAS,IAApD,qBAAOiQ,GAAP,MAAwBC,GAAxB,MACA,GAAgClQ,qBAAhC,qBAAiBkL,IAAjB,aACA,GAAgClL,qBAAhC,qBAAiBgL,IAAjB,aAEA,GAAoChL,mBAAS,GAA7C,qBAAOmQ,GAAP,MAAmBC,GAAnB,MAEA,GAA0BrQ,IAAMC,SAAS,GAAzC,qBAAOR,GAAP,MAAc6Q,GAAd,MACMrR,GAAe,SAACwC,EAAO8O,GAC3BD,GAASC,IAkCX,SAASjF,GAAKC,GACZ,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,GA/BtC7M,qBAAU,WACR,GAAG1B,EAAY,CAAC,IACD+I,EADA,iDACf,wFACI,IACEC,KACA,MAAMzH,GACJC,QAAQC,MAAMF,GAJtB,2CADe,qDAQfwH,OAEC,IAIHrH,qBAAU,WACR,IAAI2R,EAQJ,OAHAA,EAAWC,aAAY,WAFrBtK,OAIC,KACI,WAELuK,cAAcF,MAEf,IAWH,IASQG,GAAW,iDAAG,wGACZxT,EAAYmJ,QAAQgG,QAAQ3O,EAAgB3B,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KADnF,uBAEZmD,EAAgByI,QAAQsK,MAAM5U,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KAFrE,OAGhB,IACEyL,KACA,MAAMzH,GACNC,QAAQmE,IAAIpE,GANE,2CAAH,qDAWbmS,GAAa,iDAAG,wGACdhT,EAAgByI,QAAQwK,SAAS9U,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KADtE,gCAGdyL,KAHc,uDAKhBxH,QAAQmE,IAAR,MALgB,iEAAH,qDASbiO,GAAY,iDAAG,iHAEblT,EAAgByI,QAAQ0K,YAAYxK,KAAK,CAAEC,KAAM/L,EAAS,KAF7C,sDAIfiE,QAAQmE,IAAR,MAJe,+DAAH,qDAQZmO,GAAI,iDAAG,iHAELpT,EAAgByI,QAAQ2K,OAAOzK,KAAK,CAAEC,KAAM/L,EAAS,KAFhD,sDAIPiE,QAAQmE,IAAR,MAJO,+DAAH,qDAUJqD,GAAS,iDAAG,mIAEetI,EAAgByI,QAAQS,cAAcC,KAAK,CAAEP,KAAM/L,EAAS,KAF3E,cAER4U,EAFQ,OAGdC,EAAkBvT,IAAK+P,MAAMC,QAAQsD,IAHvB,SAKczR,EAAgByI,QAAQ4K,UAAUxW,EAAS,IAAIsM,KAAK,CAACP,KAAM/L,EAAS,KALlF,cAKR8U,EALQ,OAMdC,EAAiBzT,IAAK+P,MAAMC,QAAQwD,IANtB,UAQc3R,EAAgByI,QAAQ6K,OAAOzW,EAAS,IAAIsM,KAAK,CAACP,KAAM/L,EAAS,KAR/E,eAQRgV,EARQ,OASdC,EAAiB3T,IAAK+P,MAAMC,QAAQ0D,IATtB,UAWSvR,EAAcmI,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KAX7E,eAWRwQ,EAXQ,OAYdC,GAAYG,GAAMtP,IAAK+P,MAAMC,QAAQd,KAZvB,UAcS/M,EAAcmI,QAAQwF,oBAAoB9E,KAAK,CAACP,KAAM/L,EAAS,KAdxE,eAcRsQ,EAdQ,OAedC,GAAYK,GAAKtP,IAAK+P,MAAMC,QAAQhB,KAE9B4E,EAAetE,GAAKJ,EAAWoE,EAAX,SAA4B,GAAI,KAC1DO,EAAgBD,GAlBF,UAoBWzR,EAAcmI,QAAQ8K,kBAAkBpK,KAAK,CAACP,KAAM/L,EAAS,KApBxE,QAoBR2W,EApBQ,OAqBdhB,GAAcrU,IAAK+P,MAAMC,QAAQqF,IArBnB,kDAwBZ1S,QAAQmE,IAAR,MAxBY,QA0BhB,IACAjF,EAAgByT,cAAc,SAAU,CAAEC,UAAW,EAAGC,QAAS,WAChE5X,MAAK,SAAC8M,GACL,IAAI+K,EAAc,EACd3B,EAAiB,GAErBpJ,EAAQxH,QAAR,iDAAgB,WAAOwS,GAAP,2EAEd5B,EAAe6B,KAAK,CAAEC,YAAaF,EAAOE,YAAa/K,OAAQ6K,EAAO9K,aAAaC,OAAQjC,KAAM8M,EAAO9K,aAAaiL,OAErHJ,EAAcC,EAAO9K,aAAaC,OAAS4K,EAC3CvB,GAAgByB,KAAK,CAAExK,KAAMuK,EAAOE,YAAaE,OAAQL,EAAalL,OAAQmL,EAAO9K,aAAaC,OAAQkL,OAAQ,IAClH5B,GAAgBD,IANF,2CAAhB,uDASAH,GAAkBD,GAGlBnR,QAAQmE,IAAIgN,GACZnR,QAAQmE,IAAIoN,OAEbpJ,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAEZ,MAAMA,GACNC,QAAQmE,IAAIpE,GAGhB,IACIb,EAAgByT,cAAc,YAAa,CAAEC,UAAW,EAAGC,QAAS,WACnE5X,MAAK,SAAC8M,GACL,IAAIsJ,EAAmB,GACvBtJ,EAAQxH,QAAR,iDAAgB,WAAOwS,GAAP,2EAEd1B,EAAiB2B,KAAK,CAAEC,YAAaF,EAAOE,YAAa/K,QAAS6K,EAAO9K,aAAaC,OAAQjC,KAAM8M,EAAO9K,aAAaiL,OAF1G,2CAAhB,uDAkBA5B,GAAoBD,GAGpBrR,QAAQmE,IAAIkN,MAEblJ,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhB,MAAMA,GACNC,QAAQmE,IAAIpE,GAtFI,0DAAH,qDAyFf,OACE,eAAC,IAAM8B,SAAP,WAEE,eAACI,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,uBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,6BAQF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACG,EAAA,EAAD,CAAKC,GAAI,CAAEqD,MAAO,QAAlB,SACE,eAACE,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,UACE,eAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAf,sBACa,cAAC,GAAD,CAAcuB,IAAI,MAAM5I,KAAK,QAD1C,+BAC0F,cAAC,GAAD,CAAc4I,IAAI,MAAM5I,KAAK,QADvH,8BACsK,cAACwO,EAAA,EAAD,CAAME,MAAM,SAASZ,QAAQ,gBAGnM,cAACrD,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,wBAEE,+BAAKoO,EAAL,gBAGJ,cAAChL,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,wBAEE,+BAAKsO,EAAL,gBAGJ,cAAClL,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,kCAEE,+BAAKkO,EAAL,WAA6BM,EAA7B,eAGJ,cAACpL,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,iBAEE,+BAAKgP,GAAL,aAMJ,eAAC5L,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,UACE,eAAC,GAAD,WACE,gDACA,cAACgM,GAAA,EAAD,CAAWnT,GAAG,eAAewO,MAAM,SAASZ,QAAQ,SAASpI,MAAOyP,EAAY7B,SAlMpE,SAAA5L,GACxB0N,EAAc1N,EAAMqD,OAAOrF,UAkMf,uBACA,uBACA,eAACuS,GAAA,EAAD,CACErR,MAAM,UACNlB,MAAOwP,EACPgD,WAAS,EACT5E,SAAUpO,GAJZ,UAME,cAACiT,GAAA,EAAD,CAAczS,MAAM,QAAQ+B,QAASmP,GAArC,mBACA,cAACuB,GAAA,EAAD,CAAczS,MAAM,UAAU+B,QAASqP,GAAvC,wBAGF,uBACA,uBACA,cAAChO,EAAA,EAAD,CACEgF,QAAQ,YACRsK,UAAW,cAAC,KAAD,IACX3Q,QAASuP,GAHX,4BAOA,uBACA,uBACA,cAAClO,EAAA,EAAD,CACEgF,QAAQ,YACRsK,UAAW,cAAC,KAAD,IACX3Q,QAASyP,GAHX,sCAOA,uBACA,0BAEF,uBACA,uBACA,eAAC,GAAD,WACE,uCACA,cAACpO,EAAA,EAAD,CACEgF,QAAQ,YACRsK,UAAW,cAAC,KAAD,IACX3Q,QAAS2E,GAHX,wBAOA,uBACA,6BAMJ,eAAC3B,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,UACE,eAAC,GAAD,WACE,+CACA,cAACgR,GAAA,EAAD,CAAqB9N,MAAM,OAAO+N,OAAQ,EAA1C,SACE,eAACC,GAAA,EAAD,CAAUrX,KAAMiV,GAAhB,UACE,cAACqC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,IACA,cAAC,KAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKH,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,cAACF,GAAA,EAAD,CAAKH,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,cAACF,GAAA,EAAD,CAAKH,QAAQ,SAASI,QAAQ,IAAIC,KAAK,oBAK7C,uBACA,cAAC,GAAD,UACE,eAAC/R,EAAA,EAAD,CAAKC,GAAI,CAAEqD,MAAO,QAAlB,UACE,cAACtD,EAAA,EAAD,CAAKC,GAAI,CAAE+R,aAAc,EAAGC,YAAa,WAAzC,SACE,eAACC,GAAA,EAAD,CAAMzT,MAAOA,GAAO4N,SAAUpO,GAAc,aAAW,sBAAvD,UACE,cAACkU,GAAA,EAAD,aAAK1K,MAAM,gBAAmBsG,GAAU,KACxC,cAACoE,GAAA,EAAD,aAAK1K,MAAM,kBAAqBsG,GAAU,UAG9C,cAACL,GAAD,CAAUjP,MAAOA,GAAOkP,MAAO,EAA/B,SACE,cAAC3G,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACE,eAACwE,GAAA,EAAD,CAAOhH,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,cAACpG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,2BAGJ,cAACC,GAAA,EAAD,UACGyH,EAAezW,KAAI,SAACkV,GAAD,OAClB,eAACpG,GAAA,EAAD,CAEElH,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IAFtD,UAIE,cAACpG,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SAAuCiG,EAAIqD,cAC3C,cAACxJ,GAAA,EAAD,UAAYmG,EAAI1H,SAChB,cAACuB,GAAA,EAAD,UAAYmG,EAAI3J,SALX2J,EAAIqD,yBAYrB,cAAClD,GAAD,CAAUjP,MAAOA,GAAOkP,MAAO,EAA/B,SACA,cAAC3G,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACI,eAACwE,GAAA,EAAD,CAAOhH,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,cAACpG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,2BAGJ,cAACC,GAAA,EAAD,UACG2H,GAAiB3W,KAAI,SAACkV,GAAD,OACpB,eAACpG,GAAA,EAAD,CAEElH,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IAFtD,UAIE,cAACpG,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SAAuCiG,EAAIqD,cAC3C,cAACxJ,GAAA,EAAD,UAAYmG,EAAI1H,SAChB,cAACuB,GAAA,EAAD,UAAYmG,EAAI3J,SALX2J,EAAIqD,iCAkB3B,cAACpN,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,qDACA,cAACgM,GAAA,EAAD,CAAWnT,GAAG,eAAewO,MAAM,SAASZ,QAAQ,SAASpI,MAAO2P,EAAa/B,SAvUpE,SAAA5L,GACzB4N,EAAe5N,EAAMqD,OAAOrF,UAuUhB,uBACA,cAACoD,EAAA,EAAD,CACEgF,QAAQ,YACRsK,UAAW,cAAC,KAAD,IACX3Q,QAAS,SAAC3H,GACRiG,EAAS,SAJb,qBASA,uBACA,uCChbDsT,OA9Df,WAEE,MAAoFnO,cAA5EnK,MAASwD,EAAjB,EAAiBA,gBAAiBG,EAAlC,EAAkCA,iBAAkBF,EAApD,EAAoDA,gBAAiB7D,EAArE,EAAqEA,SACrE,EAAoCuF,mBAAS,IAA7C,mBAAOoT,EAAP,KAAmBC,EAAnB,KACA,EAAwCrT,mBAAS,IAAjD,mBAAOsT,EAAP,KAAqBC,EAArB,KAYIC,EAAa,iDAAG,wGACdnV,EAAgBgI,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAM8G,IAAa7M,KAAK,CAACC,KAAM/L,EAAS,KADtF,uBAEd+D,EAAiB6H,QAAQsK,MAAM5U,IAAK+P,MAAMQ,MAAM8G,IAAa7M,KAAK,CAACC,KAAM/L,EAAS,KAFpE,2CAAH,qDAKbgZ,EAAe,iDAAG,wGAChBjV,EAAiB6H,QAAQqN,QAAQ3X,IAAK+P,MAAMQ,MAAMgH,IAAe/M,KAAK,CAACC,KAAM/L,EAAS,KADtE,2CAAH,qDAOnB,OAEE,eAAC,IAAM8F,SAAP,WACE,eAACI,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKC,MAAM,SAASnH,MAAM,eAAeoH,cAAY,EAAxF,sBAGA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,4DAIF,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAI6L,WAAS,EAAChJ,QAAS,EAAGiJ,eAAe,SAAxD,SACE,cAAC1I,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC+L,GAAA,EAAD,WACI,uBACA,cAAC5K,EAAA,EAAD,CAAYsF,QAAQ,KAApB,2BACA,cAACtF,EAAA,EAAD,CAAY5B,MAAM,iBAAlB,mCACA,uBACA,cAACyM,GAAA,EAAD,CAAW3E,MAAM,SAASZ,QAAQ,SAASpI,MAAO4T,EAAYhG,SAxCjD,SAAA5L,GACvB6R,EAAc7R,EAAMqD,OAAOrF,UAwCjB,uBAAM,uBACN,cAACoD,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASiS,EAAlD,4BACA,uBAAM,uBACN,cAACrG,GAAA,EAAD,CAAW3E,MAAM,sBAAsBZ,QAAQ,SAASpI,MAAO8T,EAAclG,SAxC9D,SAAA5L,GACzB+R,EAAgB/R,EAAMqD,OAAOrF,UAwCnB,uBAAM,uBACN,cAACoD,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASkS,EAAlD,8BACA,uBAAM,kC,gCCrCpB,IAJoBnG,GAAQC,GAAQoG,GAAWC,GAAUC,GAInDjG,GAAO,EAJON,GAKP,MALeC,GAKR,OALgBoG,GAKR,EALmBC,GAKhB,EAL0BC,GAKvB,EAJzB,CAAEvG,UAAQC,UAAQoG,aAAWC,YAAUC,UAOhD,SAAShG,GAAT,GAAsC,IAAdnL,EAAa,EAAbA,IAAK5I,EAAQ,EAARA,KACrB8K,EAAK,OAAD,OAAS9K,EAAT,QACJgU,EAAOhU,EAAKiU,cAAc,SAEhC,OAAO,cAACzF,EAAA,EAAD,CACLC,OAAQ,cAACnF,EAAA,EAAD,CAAQV,IAAKA,EAAKF,IAAKoC,IAC/B4D,MAAOsF,EACPlG,QAAQ,aAiGGkM,OA7Ff,WACE,IAAMjU,EAAWC,cAEjB,OACE,eAAC,WAAD,WAEE,eAACa,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,kBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,uCAKF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAAKwD,UAAU,OAAnC,SACE,eAACrD,EAAA,EAAD,WACE,cAAC6B,EAAA,EAAD,CACEgF,QAAQ,YACRrG,QAAS,SAAC3H,GACR8E,QAAQmE,IAAIjJ,EAAE6H,cAAcqB,QAAQC,WACpCgR,MAAM,kBAJV,+BAUA,uBACA,uBACA,cAAChM,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACE,eAACwE,GAAA,EAAD,CAAOhH,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,cAACpG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAWN,MAAM,QAAjB,+BACA,cAACM,GAAA,EAAD,CAAWN,MAAM,QAAjB,6BACA,cAACM,GAAA,EAAD,CAAWN,MAAM,QAAjB,wBACA,cAACM,GAAA,EAAD,SAGJ,cAACC,GAAA,EAAD,UACGwF,GAAKxU,KAAI,SAACkV,GAAD,OACR,eAACpG,GAAA,EAAD,CAEElH,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IACpDhN,QAAS,SAAC3H,GACR8E,QAAQmE,IAAI,sBACZnE,QAAQmE,IAAIjJ,EAAE6H,cAAcqB,QAAQC,WACpClD,EAAS,gBANb,UAUE,cAACsI,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,eAAC2L,GAAA,EAAD,CAAOC,UAAU,MAAMjQ,QAAS,EAAhC,UACE,cAAC,GAAD,CAActB,IAAK4L,EAAIhB,OAAQxT,KAAMwU,EAAIhB,SACzC,cAACjM,EAAA,EAAD,CAAY,aAAW,OAAOC,KAAK,QAAnC,SACE,cAAC,KAAD,CAASmH,SAAS,cAEpB,cAAC,GAAD,CAAc/F,IAAK4L,EAAIf,OAAQzT,KAAMwU,EAAIf,cAG7C,cAACpF,GAAA,EAAD,CAAWN,MAAM,QAAjB,SAA0ByG,EAAIqF,YAC9B,cAACxL,GAAA,EAAD,CAAWN,MAAM,QAAjB,SAA0ByG,EAAIsF,WAC9B,cAACzL,GAAA,EAAD,CAAWN,MAAM,QAAjB,SAA0ByG,EAAIuF,MAC9B,cAAC1L,GAAA,EAAD,CAAWN,MAAM,QAAjB,SACA,cAACjF,EAAA,EAAD,CACEgF,QAAQ,YACRsK,UAAW,cAAC,KAAD,IACX3Q,QAAS,SAAC3H,GACRiG,EAAS,gBAJb,+BAtBKyO,EAAIpH,yBC1DdgN,OAxBf,WAEE,OACE,cAAC,WAAD,UAEE,eAACvT,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,kBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,6CCyGO0P,OAtHf,WAEE,MAA+G9O,cAAvGnK,MAASqC,EAAjB,EAAiBA,YAAaI,EAA9B,EAA8BA,aAAce,EAA5C,EAA4CA,gBAAiBG,EAA7D,EAA6DA,iBAAkBF,EAA/E,EAA+EA,gBAAiB7D,EAAhG,EAAgGA,SAChG,EAAoCuF,mBAAS,IAA7C,mBAAOiP,EAAP,KAAmBC,EAAnB,KACA,EAAgClP,qBAAhC,mBAAOiL,EAAP,KAAiBC,EAAjB,KACA,EAAkClL,qBAAlC,mBAAOiM,EAAP,KAAkBd,EAAlB,KACA,EAAgCnL,qBAAhC,mBAAOmM,EAAP,KAAiBf,EAAjB,KAeA,SAASC,EAAKC,GACZ,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,GAdtC7M,qBAAU,WACR,GAAG1B,EAAY,CAAC,IACD+I,EADA,iDACf,wFACE,IACEyF,IACA,MAAMjN,GACJC,QAAQC,MAAMF,GAJpB,2CADe,qDAQfwH,OAEC,IAMH,IAIMkO,EAAiB,iDAAG,oHACD3V,EAAiB6H,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KADtE,cAClBwQ,EADkB,gBAEAzM,EAAiB6H,QAAQ2F,0BAA0BjF,KAAK,CAACP,KAAM/L,EAAS,KAFxE,cAElBwR,EAFkB,OAGlBE,EAAWd,EAAMJ,EAAWgB,GAC5BmI,EAAa/I,EAAM4D,EAAa9C,GAJd,UAKlBjP,EAAYmJ,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KAL9E,yBAMlB6C,EAAa+I,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAM8H,IAAa7N,KAAK,CAACC,KAAM/L,EAAS,KAN/E,yBAOlB+D,EAAiB6H,QAAQgO,YAAYtY,IAAK+P,MAAMQ,MAAM2C,GAAalT,IAAK+P,MAAMQ,MAAM8H,IAAa7N,KAAK,CAACC,KAAM/L,EAAS,KAPpG,4CAAH,qDAUjB6Z,EAAkB,iDAAG,wGACnBjW,EAAgBgI,QAAQgG,QAAQ/N,EAAiBvC,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KADjF,uBAEnB+D,EAAiB6H,QAAQkO,aAAaxY,IAAK+P,MAAMQ,MAAM2C,IAAa1I,KAAK,CAACC,KAAM/L,EAAS,KAFtE,2CAAH,qDAKlBkR,EAAe,iDAAG,WAAMnK,GAAN,4FACtBA,EAAMoK,iBADgB,kBAGIpN,EAAiB6H,QAAQ2F,0BAA0BjF,KAAK,CAACP,KAAM/L,EAAS,KAH5E,cAGdwR,EAHc,OAIpBd,EAAaE,EAAKtP,IAAK+P,MAAMC,QAAQE,KAJjB,SAKGzN,EAAiB6H,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KAL1E,OAKdwQ,EALc,OAMpBC,EAAYG,EAAKtP,IAAK+P,MAAMC,QAAQd,KAC9BkB,EAAWd,EAAMJ,EAAWgB,GAClCb,EAAYe,GARQ,kDAUpBzN,QAAQmE,IAAR,MAVoB,0DAAH,sDAgBf6I,EAAM,iDAAG,2HAGUlN,EAAiB6H,QAAQ6F,yBAAyBnF,KAAK,CAACP,KAAM/L,EAAS,KAHjF,cAGPwQ,EAHO,gBAIWzM,EAAiB6H,QAAQ2F,0BAA0BjF,KAAK,CAACP,KAAM/L,EAAS,KAJnF,OAIPwR,EAJO,OAKbf,EAAYG,EAAMtP,IAAK+P,MAAMC,QAAQd,KACrCE,EAAaE,EAAKtP,IAAK+P,MAAMC,QAAQE,KAC/BE,EAAWd,EAAMJ,EAAWgB,GAClCb,EAAYe,GARC,kDAUTzN,QAAQmE,IAAR,MAVS,kEAAH,qDAgBZ,OAEE,eAAC,IAAMtC,SAAP,WACE,eAACI,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKC,MAAM,SAASnH,MAAM,eAAeoH,cAAY,EAAxF,4BAGA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,wEAIF,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAI6L,WAAS,EAAChJ,QAAS,EAAGiJ,eAAe,SAAxD,SAEE,cAAC1I,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC+L,GAAA,EAAD,WACI,uBACA,cAAC5K,EAAA,EAAD,CAAYsF,QAAQ,KAApB,2BACA,uBACA,cAACuF,GAAA,EAAD,CAAW3E,MAAM,2BAA2BZ,QAAQ,SAASpI,MAAOyP,EAAY7B,SArEnE,SAAA5L,GACvB0N,EAAc1N,EAAMqD,OAAOrF,UAqEjB,uBACA,uBACA,cAACoD,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAAS4S,EAAlD,0BACA,qCACA,cAACvR,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAAS+S,EAAlD,uBACA,uBACA,uBACA,eAAChS,EAAA,EAAD,4BAA0B,uCAAU2I,KAApC,qBAAwE,uCAAUgB,QAClF,cAAC3J,EAAA,EAAD,IACA,uBACA,eAACA,EAAA,EAAD,mBAAiB,2CAAjB,SAA6C,mCAAS6J,EAAT,cAC7C,uBACA,cAACvJ,EAAA,EAAD,CAAQtB,KAAK,QAAQsG,QAAQ,YAAYrG,QAASoK,EAAlD,mCACA,uBACA,kCC5GR6C,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eA2FbsQ,OAxFf,WACE,IAAM3U,EAAWC,cAEjB,OACE,eAAC,WAAD,WAEE,eAACa,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,iBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,gCAMF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACG,EAAA,EAAD,UACE,eAACwD,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,UACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,6CACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,cACJF,IAAI,uBACJjB,QAAS,SAAC3H,GACRiG,EAAS,mBAGb,cAAC+C,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRiG,EAAS,iBAJb,uBAWJ,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,6CACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,cACJF,IAAI,oBACJjB,QAAS,SAAC3H,GACRiG,EAAS,gBAGb,cAAC+C,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRiG,EAAS,cAJb,kC,iCC1EhB,SAAS4E,GAAsB7E,GAC7B,IAAM8E,EAAG,6CAAyC9E,EAAM+E,MACxD,OAAO,mBAAGC,KAAMF,EAAKG,OAAO,SAASC,IAAI,aAAlC,SAAgDlF,EAAM+E,OAoVhD6P,OAhVf,WACE,IAAM3U,EAAWC,cAEjB,EAA6DkF,cAArDnK,MAASqC,EAAjB,EAAiBA,YAAaO,EAA9B,EAA8BA,eAAgBhD,EAA9C,EAA8CA,SAE9C,EAAsCuF,mBAASvC,EAAewH,UAA9D,mBAAOyP,EAAP,KACA,GADA,KACsC1U,mBAAS,IAA/C,mBAAO8G,EAAP,KAAoB6N,EAApB,KACA,EAAoC3U,oBAAS,GAA7C,mBAAO4U,EAAP,KAAmBC,EAAnB,KACA,EAAoC7U,mBAAS,QAA7C,mBAAO8U,EAAP,KAAmBC,EAAnB,KAGAnW,qBAAU,WACR,GAAG1B,EAAY,CAAC,IACD+I,EADA,iDACf,wFACI,IACE+O,IACA,MAAMvW,GACJC,QAAQC,MAAMF,GAJtB,2CADe,qDAQfwH,OAEC,IAGH,IAAMgP,EAAK,iDAAG,wFACZxX,EAAe4I,QAAQ4O,MAAMxa,EAAS,IAAI8L,KAAK,CAAC/G,MAAO,KAAkBgH,KAAM/L,EAAS,KACrFd,MAAK,SAAC+W,GACLhS,QAAQmE,IAAI,iBAAiB6N,GAC7BsE,OAEDnO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAPJ,2CAAH,qDAWLyW,EAAK,iDAAG,wFACZzX,EAAe4I,QAAQ6O,MAAMza,EAAS,IAAI8L,KAAK,CAAC/G,MAAO,KAAkBgH,KAAM/L,EAAS,KACrFd,MAAK,SAAC+W,GACLhS,QAAQmE,IAAI,iBAAiB6N,GAC7BsE,OAEDnO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAPJ,2CAAH,qDAWL0W,EAAK,iDAAG,wFACZ1X,EAAe4I,QAAQ8O,MAAM1a,EAAS,IAAI8L,KAAK,CAAC/G,MAAO,KAAkBgH,KAAM/L,EAAS,KACrFd,MAAK,SAAC+W,GACLhS,QAAQmE,IAAI,iBAAiB6N,GAC7BsE,OAEDnO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAPJ,2CAAH,qDAWLuW,EAAU,iDAAG,wFAEjBvX,EAAe4I,QAAQS,cAAcC,KAAK,CAACP,KAAM/L,EAAS,KACvDd,MAAK,SAACmN,GACL6N,EAAe7N,GACfpI,QAAQmE,IAAI,iBAAiBiE,GACb,IAAbA,IAEDiO,EAAc,YACdF,EAAc,YAGjBhO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAbC,2CAAH,qDAkBhB,OACE,eAAC,IAAM8B,SAAP,WACE,cAAC6U,GAAA,EAAD,CAAcC,OAAQ,CAAEC,GAAI,CAAEC,OAAQ,EAAGxR,QAAS,EAAGyR,UAAW,WAChE,cAACC,EAAA,EAAD,IAGA,eAAC9U,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,sBAUA,eAACxF,EAAA,EAAD,sCAEE,cAAC,GAAD,CACEqC,KAAM+P,OAGV,uBAEA,eAACpS,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,qCAC0B,uBAD1B,mBACgD,2CADhD,qBACqF,uBADrF,2BAE0B,wCAF1B,4BAEsE,uBACpE,mCAAS0C,EAAT,SAHF,uEAQF,cAACnG,EAAA,EAAD,CAAWC,SAAS,KAAKwD,UAAU,OAAnC,SACE,eAACG,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAG0R,WAAW,WAAvC,UACI,cAACnR,EAAA,EAAD,CACAC,MAAI,EACJrD,GAAI,GACJwU,GAAI,EACJvU,GAAI,EAJJ,SAMA,eAAC8L,GAAA,EAAD,WACE,cAAC0I,GAAA,EAAD,CACE5U,GAAI,CACF0C,gBAAiB,SAACD,GAAD,MACQ,UAAvBA,EAAME,QAAQC,KACVH,EAAME,QAAQkS,KAAK,KACnBpS,EAAME,QAAQkS,KAAK,OAL7B,SAQE,cAAC9U,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,oBACJF,IAAI,yCAGR,eAACoT,GAAA,EAAD,WACE,eAAC7U,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT+L,eAAgB,SAChByI,WAAY,WACZI,GAAI,GALR,UAQE,cAACxT,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKlH,MAAM,eAA9C,mBAGA,cAAC4B,EAAA,EAAD,CAAYsF,QAAQ,KAAKlH,MAAM,iBAA/B,uBAIF,6BACI,eAAC4B,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,YACRC,MAAM,SAHR,qBAKU,0CALV,UAKsC,uBALtC,qCASN,cAACkO,GAAA,EAAD,UACE,cAACnT,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBoO,SAAUpB,EACVtT,KAAK,QACLC,QAAS0T,EAJX,SAMGH,WAKP,cAACvQ,EAAA,EAAD,CACAC,MAAI,EACJrD,GAAI,GACJwU,GAAI,EACJvU,GAAI,EAJJ,SAMA,eAAC8L,GAAA,EAAD,WACE,cAAC0I,GAAA,EAAD,CACE5U,GAAI,CACF0C,gBAAiB,SAACD,GAAD,MACQ,UAAvBA,EAAME,QAAQC,KACVH,EAAME,QAAQkS,KAAK,KACnBpS,EAAME,QAAQkS,KAAK,OAL7B,SAQE,cAAC9U,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,kBACJF,IAAI,uCAGR,eAACoT,GAAA,EAAD,WACE,eAAC7U,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT+L,eAAgB,SAChByI,WAAY,WACZI,GAAI,GALR,UAQE,cAACxT,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKlH,MAAM,eAA9C,mBAGA,cAAC4B,EAAA,EAAD,CAAYsF,QAAQ,KAAKlH,MAAM,iBAA/B,uBAIF,6BACI,eAAC4B,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,YACRC,MAAM,SAHR,qBAKU,0CALV,UAKsC,uBALtC,qCASN,cAACkO,GAAA,EAAD,UACE,cAACnT,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBoO,SAAUpB,EACVtT,KAAK,QACLC,QAAS2T,EAJX,SAMGJ,WAKP,cAACvQ,EAAA,EAAD,CACAC,MAAI,EACJrD,GAAI,GACJwU,GAAI,EACJvU,GAAI,EAJJ,SAMA,eAAC8L,GAAA,EAAD,WACE,cAAC0I,GAAA,EAAD,CACE5U,GAAI,CACF0C,gBAAiB,SAACD,GAAD,MACQ,UAAvBA,EAAME,QAAQC,KACVH,EAAME,QAAQkS,KAAK,KACnBpS,EAAME,QAAQkS,KAAK,OAL7B,SAQE,cAAC9U,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,mBACJF,IAAI,wCAGR,eAACoT,GAAA,EAAD,WACE,eAAC7U,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT+L,eAAgB,SAChByI,WAAY,WACZI,GAAI,GALR,UAQE,cAACxT,EAAA,EAAD,CAAY8B,UAAU,KAAKwD,QAAQ,KAAKlH,MAAM,eAA9C,mBAGA,cAAC4B,EAAA,EAAD,CAAYsF,QAAQ,KAAKlH,MAAM,iBAA/B,uBAIF,6BACI,eAAC4B,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,YACRC,MAAM,SAHR,qBAKU,0CALV,UAKsC,uBALtC,qCASN,cAACkO,GAAA,EAAD,UACE,cAACnT,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBoO,SAAUpB,EACVtT,KAAK,QACLC,QAAS4T,EAJX,SAMGL,gBASb,eAACnU,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,wCASA,cAAClF,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRiG,EAAS,iBAJb,kD,mFC7TF2O,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eA8N5B,SAAS+R,GAAmBrW,GAC1B,MAAuFoF,cAA/EnK,MAAS4C,EAAjB,EAAiBA,eAAgBM,EAAjC,EAAiCA,mBAAoBtD,EAArD,EAAqDA,SAAUoD,EAA/D,EAA+DA,kBAE/D,EAAgCmC,mBAAS,IAAzC,mBAEMkW,GAFN,UAEkB,iDAAG,WAAOtc,GAAP,0FACfuc,EAAUvc,EAAEiL,OAAOuR,aAAa,WACpC1X,QAAQmE,IAAI,aAAasT,IAErBE,EAAW,IACN3E,KAAKyE,GACdzX,QAAQmE,IAAI,eAAewT,GANR,SAQb5Y,EAAe4I,QAAQgG,QAAQxO,EAAmBsY,GAAS5P,KAAK,CAACC,KAAM/L,EAAS,KARnE,OAUnBsD,EAAmBsI,QAAQ2H,MAAMqI,GAAU9P,KAAK,CAACC,KAAM/L,EAAS,KAC7Dd,MAAK,SAACqU,GACLtP,QAAQmE,IAAI,WAAWmL,GAEvBpO,EAAM0W,gBAAgB,IACtB1W,EAAM2W,kBAAkB,IACxB3W,EAAMoV,gBAEPnO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAnBG,2CAAH,uDAwBlB,OACE,eAAC,IAAM8B,SAAP,WACE,eAAC2M,GAAA,EAAD,CAAMlM,GAAI,CAAEE,QAAS,QAArB,UACE,cAACsV,GAAA,EAAD,CACEpS,UAAU,MACVpD,GAAI,CAAEqD,MAAO,KACboS,MAAO7W,EAAM6W,MACb/T,IAAI,QAEN,eAAC3B,EAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,OAAQwV,cAAe,UAA3C,UACE,eAACd,GAAA,EAAD,CAAa5U,GAAI,CAAE2V,KAAM,YAAzB,UACE,cAACrU,EAAA,EAAD,CAAY8B,UAAU,MAAMwD,QAAQ,KAAKC,MAAM,OAA/C,SACGjI,EAAMsH,OAET,eAAC5E,EAAA,EAAD,CAAYsF,QAAQ,YAAYlH,MAAM,iBAAiB0D,UAAU,MAAMyD,MAAM,OAA7E,qBACWjI,EAAM5F,MAEjB,cAACsI,EAAA,EAAD,CAAYsF,QAAQ,YAAYlH,MAAM,iBAAiB0D,UAAU,MAAMyD,MAAM,OAA7E,SACGjI,EAAMgX,iBAGX,cAAC7V,EAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,OAAQwU,WAAY,SAAUmB,GAAI,EAAGlP,GAAI,GAA7D,SACE,cAACqM,GAAA,EAAD,CAAOC,UAAU,MAAMjQ,QAAS,EAAhC,SACE,cAACpB,EAAA,EAAD,CACE,UAAShD,EAAM5F,GACf4N,QAAQ,WACRsK,UAAW,cAAC,KAAD,IACX3Q,QAAS2U,EAJX,+BAYR,0BAKN,SAASY,GAAiBlX,GACxB,MAAoDoF,cAA5CnK,MAASkD,EAAjB,EAAiBA,mBAAoBtD,EAArC,EAAqCA,SAErC,EAAwCuF,mBAAS,GAAjD,mBAAO+W,EAAP,KAAqBC,EAArB,KACA,EAAsChX,mBAAS,GAA/C,mBAAOiX,EAAP,KAAoBC,EAApB,KACA,EAAsClX,mBAAS,GAA/C,mBAAOmX,EAAP,KAAoBC,EAApB,KAEMC,EAAc,iDAAG,WAAOzd,GAAP,mFACjBuc,EAAUvc,EAAEiL,OAAOuR,aAAa,YAChCC,EAAW,IACN3E,KAAKyE,GACdzX,QAAQmE,IAAI,cAAcwT,GAC1BtY,EAAmBsI,QAAQqN,QAAQ2C,GAAU9P,KAAK,CAACC,KAAM/L,EAAS,KAC/Dd,MAAK,SAAC2d,GACL5Y,QAAQmE,IAAI,aAAayU,GACd1d,EAAEiL,OAAOuR,aAAa,WACjCxW,EAAM0W,gBAAgB,IACtB1W,EAAM2W,kBAAkB,IACxB3W,EAAMoV,gBAEPnO,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAdK,2CAAH,sDAmBd8Y,EAAY,iDAAG,WAAO3d,GAAP,mFACfuc,EAAUvc,EAAEiL,OAAOuR,aAAa,YAChCC,EAAW,IACN3E,KAAKyE,GACdzX,QAAQmE,IAAI,cAAcwT,GAC1BtY,EAAmBsI,QAAQmR,MAAMnB,GAAU9P,KAAK,CAACC,KAAM/L,EAAS,KAC7Dd,MAAK,SAAC6d,GACL9Y,QAAQmE,IAAI,WAAW2U,MAExB3Q,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAVG,2CAAH,sDAeZgZ,EAAa,iDAAG,WAAO7d,GAAP,4FAChBud,EAAc,EAEdhB,EAAUvW,EAAM5F,IAChBqc,EAAW,IACN3E,KAAKyE,GALM,SAMdpY,EAAmBsI,QAAQqR,gBAAgBjd,EAAS,GAAI4b,GAAUtP,KAAK,CAACP,KAAM/L,EAAS,KAC1Fd,MAAK,SAAC+d,GACLA,GAAkC,KAAD,IAAC,GAAI,IACtCA,EAAkB1Q,KAAKC,MAAwB,IAAlByQ,GAAyB,IACtDV,EAAgBU,GAEhBN,EADAD,GAA0BO,MAG3B7Q,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAfI,uBAiBdV,EAAmBsI,QAAQsR,eAAeld,EAAS,GAAI4b,GAAUtP,KAAK,CAACP,KAAM/L,EAAS,KACzFd,MAAK,SAACge,GACLA,GAAgC,KAAD,IAAC,GAAI,IACpCA,EAAiB3Q,KAAKC,MAAuB,IAAjB0Q,GAAwB,IACpDT,EAAeS,GACfR,GAA0BQ,EAC1BR,EAAcnQ,KAAKC,MAAoB,IAAdkQ,GAAqB,IAC9CC,EAAeD,MAEhBtQ,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MA3BI,2CAAH,sDA6DnB,OA5BAG,qBAAU,WACR,GAAGb,EAAmB,CAAC,IACRkI,EADO,iDACtB,wFACI,IACEwR,IACA,MAAMhZ,GACNC,QAAQC,MAAMF,GAJpB,2CADsB,qDAQtBwH,OAEC,IAGHrH,qBAAU,WACR,IAAI2R,EAOJ,OAHAA,EAAWC,aAAY,WAFrBiH,MAIC,KACI,WAELhH,cAAcF,MAEf,IAGD,eAAC,IAAMhQ,SAAP,WACE,eAAC2M,GAAA,EAAD,CAAMlM,GAAI,CAAEE,QAAS,QAArB,UACE,cAACsV,GAAA,EAAD,CACEpS,UAAU,MACVpD,GAAI,CAAEqD,MAAO,KACboS,MAAO7W,EAAM6W,MACb/T,IAAI,QAEN,eAAC3B,EAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,OAAQwV,cAAe,UAA3C,UACE,eAACd,GAAA,EAAD,CAAa5U,GAAI,CAAE2V,KAAM,YAAzB,UACE,cAACrU,EAAA,EAAD,CAAY8B,UAAU,MAAMwD,QAAQ,KAAKC,MAAM,OAA/C,SACGjI,EAAMsH,OAET,eAAC5E,EAAA,EAAD,CAAYsF,QAAQ,YAAYlH,MAAM,iBAAiB0D,UAAU,MAAMyD,MAAM,OAA7E,qBACWjI,EAAM5F,MAEjB,cAACsI,EAAA,EAAD,CAAYsF,QAAQ,YAAYlH,MAAM,iBAAiB0D,UAAU,MAAMyD,MAAM,OAA7E,SACGjI,EAAMgX,cAET,eAACtU,EAAA,EAAD,CACEuF,MAAM,OADR,sBAGYkP,EAHZ,SAG+B,uBAH/B,YAIYE,EAJZ,SAI8B,uBAAM,uBAClC,+CAAkBE,EAAlB,kBAGJ,cAACpW,EAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,OAAQwU,WAAY,SAAUmB,GAAI,EAAGlP,GAAI,GAA7D,SACE,eAACqM,GAAA,EAAD,CAAOC,UAAU,MAAMjQ,QAAS,EAAhC,UACA,cAACpB,EAAA,EAAD,CACI,UAAShD,EAAM5F,GACf4N,QAAQ,WACRsK,UAAW,cAAC,KAAD,IACX3Q,QAAS8V,EAJb,uBAQE,cAACzU,EAAA,EAAD,CACE,UAAShD,EAAM5F,GACf4N,QAAQ,YACRgQ,QAAS,cAAC,KAAD,IACTrW,QAASgW,EAJX,8BAYR,0BAMSM,OA5bf,WAEE,MAAoE7S,cAA5DnK,MAAS4C,EAAjB,EAAiBA,eAAgBM,EAAjC,EAAiCA,mBAAoBtD,EAArD,EAAqDA,SAErD,EAA4CuF,mBAAS,GAArD,mBAAO8X,EAAP,KAAuBC,EAAvB,KACA,EAAsC/X,mBAAS,GAA/C,mBAAoB2U,GAApB,WACA,EAAwD3U,mBAAS,IAAjE,mBAAOgY,EAAP,KAA6BC,EAA7B,KACA,EAA4CjY,mBAAS,IAArD,mBAAOkY,EAAP,KAAuB3B,EAAvB,KACA,EAAwCvW,mBAAS,IAAjD,mBAAOmY,EAAP,KAAqB7B,EAArB,KAGM8B,EAAO,iDAAG,wFACdra,EAAmBsI,QAAQyR,iBAAiB/Q,KAAK,CAACP,KAAM/L,EAAS,KAChEd,MAAK,SAACme,GACLA,GAAgC,KAAD,IAAC,GAAI,IACpCA,EAAiB9Q,KAAKC,MAAuB,IAAjB6Q,GAAwB,IACpDC,EAAkBD,GAClBpZ,QAAQmE,IAAI,kBAAkBiV,MAE/BjR,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MATA,2CAAH,qDAaP4Z,EAAc,iDAAG,wFAErB5a,EAAe4I,QAAQS,cAAcC,KAAK,CAACP,KAAM/L,EAAS,KACzDd,MAAK,SAACmN,GACL6N,EAAe7N,GACfpI,QAAQmE,IAAI,eAAeiE,GAE3B,IAAI,IAAIwR,EAAE,EAAGA,EAAExR,EAAawR,IAC1B5Z,QAAQmE,IAAI,KAAKyV,GACjB7a,EAAe4I,QAAQkS,oBAAoB9d,EAAS,GAAI6d,GAAGvR,KAAK,CAACP,KAAM/L,EAAS,KAC/Ed,MAAK,SAAC4e,GACLN,GAAwB,SAAAD,GAAoB,6BAAQA,GAAR,CAA8BO,OAC1E7Z,QAAQmE,IAAI,yBAAyB0V,GAErC9a,EAAe4I,QAAQmS,SAASD,GAAqBxR,KAAK,CAACP,KAAM/L,EAAS,KACzEd,MAAK,SAAC6e,GACL9Z,QAAQmE,IAAI,cAAc2V,GAE1BC,EAAoBF,EAAqBC,MAE1C3R,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,SAIfoI,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBC,QAAQmE,IAAI,iBAAiBiE,MAE9BD,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGdC,QAAQmE,IAAI,0BAA0BmV,GAnCjB,2CAAH,qDAuCdU,EAAY,iDAAG,wFACnB3a,EAAmBsI,QAAQsS,mBAAmBle,EAAS,IAAIsM,KAAK,CAACP,KAAM/L,EAAS,KAC/Ed,MAAK,SAACgf,GACLja,QAAQmE,IAAI,wBAAwB8V,GAEpC,IAH4B,eAGpBL,GACN5Z,QAAQmE,IAAI8V,EAAmBL,IAC/B7a,EAAe4I,QAAQmS,SAASG,EAAmBL,IAAIvR,KAAK,CAACP,KAAM/L,EAAS,KACzEd,MAAK,SAAC6e,GACL9Z,QAAQmE,IAAI,cAAc2V,GAC1BI,EAAqBD,EAAmBL,GAAIE,MAE7C3R,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,OARV6Z,EAAE,EAAGA,EAAEK,EAAmBE,OAAQP,IAAM,EAAxCA,MAYTzR,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAlBK,2CAAH,qDAsBlB,SAASga,EAAoBze,EAAIwe,GAC/B,OAAOM,MAAMN,GACZ7e,MAAK,SAACof,GAAD,OAAcA,EAASC,UAC5Brf,MAAK,SAACsf,GACL,IAAIC,EAASC,EAAUnf,EAAIif,EAAa/R,KAAM+R,EAAarC,YAAaqC,EAAaxC,OACrFF,GAAkB,SAAA2B,GAAc,6BAAQA,GAAR,CAAwBgB,OACxDxa,QAAQmE,IAAI,oBAAoBqV,MAEjCrR,OAAM,SAAClI,GACND,QAAQC,MAAMA,MAIlB,SAASia,EAAqB5e,EAAIwe,GAChC,OAAOM,MAAMN,GACZ7e,MAAK,SAACof,GAAD,OAAcA,EAASC,UAC5Brf,MAAK,SAACsf,GACL,IAAIC,EAASC,EAAUnf,EAAIif,EAAa/R,KAAM+R,EAAarC,YAAaqC,EAAaxC,OACrFH,GAAgB,SAAA4B,GAAc,6BAAQA,GAAR,CAAwBgB,OACtDxa,QAAQmE,IAAI,oBAAoBqV,MAEjCrR,OAAM,SAAClI,GACND,QAAQC,MAAMA,MAIlB,SAASwa,EAAUnf,EAAIkN,EAAM0P,EAAaH,GACxC,MAAO,CAAEzc,KAAIkN,OAAM0P,cAAaH,SAIlC,IAAMzB,EAAU,iDAAG,iHAEToD,IAFS,uBAGTC,IAHS,uBAITK,IAJS,uDAObha,QAAQmE,IAAR,MAPa,iEAAH,qDAyBhB,OAdAjE,qBAAU,WACR,GAAGnB,EAAe,CAAC,IACJwI,EADG,iDAClB,wFACI,IACE+O,IACA,MAAMvW,GACNC,QAAQC,MAAMF,GAJpB,2CADkB,qDAQlBwH,OAEC,IAID,eAAC,IAAM1F,SAAP,WACE,cAAC6U,GAAA,EAAD,CAAcC,OAAQ,CAAEC,GAAI,CAAEC,OAAQ,EAAGxR,QAAS,EAAGyR,UAAW,WAChE,cAACC,EAAA,EAAD,IAGA,eAAC9U,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,yBASA,eAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,6CACmC0T,EADnC,wBAMF,cAACnX,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACG,EAAA,EAAD,UACE,eAACwD,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,UACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,8CACC+W,EAAe9e,KAAI,SAACkV,GAAD,OAClB,cAAC2H,GAAD,CAEAjc,GAAIsU,EAAItU,GACRkN,KAAMoH,EAAIpH,KACV0P,YAAatI,EAAIsI,YACjBH,MAAOnI,EAAImI,MACXzB,WAAYA,EACZmD,aAAcA,EACd7B,gBAAiBA,EACjB4B,eAAgBA,EAChB3B,kBAAmBA,GATdjI,EAAItU,OAaX,4BAGJ,cAACuK,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,4CACCgX,EAAa/e,KAAI,SAACkV,GAAD,OAChB,cAACwI,GAAD,CAEA9c,GAAIsU,EAAItU,GACRkN,KAAMoH,EAAIpH,KACV0P,YAAatI,EAAIsI,YACjBH,MAAOnI,EAAImI,MACXzB,WAAYA,EACZmD,aAAcA,EACd7B,gBAAiBA,EACjB4B,eAAgBA,EAChB3B,kBAAmBA,GATdjI,EAAItU,OAaX,uC,WCzOhB,SAASof,GAAUxZ,GACjB,OACE,eAAC0C,EAAA,EAAD,yBAAYsF,QAAQ,QAAQlH,MAAM,iBAAiBmH,MAAM,UAAajI,GAAtE,cACG,iBACD,cAACyZ,GAAA,EAAD,CAAM3Y,MAAM,UAAUkE,KAAK,wBAAwBC,OAAO,SAA1D,2BAEQ,KACP,IAAIyU,MAAOC,cACX,QAKP,IAAMC,GAAU,CACd,CACEtW,MAAO,OACPuW,MAAO,CACL,CACEvW,MAAO,0BACPwB,IAAK,oBAEP,CACExB,MAAO,gBACPwB,IAAK,wDAIX,CACExB,MAAO,WACPuW,MAAO,CACL,CACEvW,MAAO,QACPwB,IAAK,UAEP,CACExB,MAAO,OACPwB,IAAK,YAsDEgV,OA/Cf,WACE,OACE,iCAEE,eAAC/Y,EAAA,EAAD,CACEC,SAAS,KACTwD,UAAU,SACVpD,GAAI,CACF2Y,UAAW,SAAClW,GAAD,0BAAwBA,EAAME,QAAQiW,UACjDvW,GAAI,EACJwW,GAAI,CAAC,EAAG,IANZ,UASE,cAACtV,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAGiJ,eAAe,eAA3C,SACGuM,GAAQpgB,KAAI,SAAC0gB,GAAD,OACX,eAACvV,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAGwU,GAAI,EAAtB,UACE,cAACrT,EAAA,EAAD,CAAYsF,QAAQ,KAAKlH,MAAM,eAAeoH,cAAY,EAA1D,SACGgS,EAAO5W,QAEP4W,EAAOL,MAAMrgB,KAAI,SAACsU,GAAD,OACd,cAAC3M,EAAA,EAAD,CACEC,GAAI,CACFE,QAAS,OACT6Y,SAAU,OACV9M,eAAgB,SAChBpJ,WAAY,QACZ,gCAAiC,CAC/BmW,GAAI,IAPV,SAYA,cAACX,GAAA,EAAD,CAAMzU,KAAM8I,EAAKhJ,IAAKkD,QAAQ,YAAYlH,MAAM,iBAAhD,SACGgN,EAAKxK,eAlBc4W,EAAO5W,YAyBzC,cAACkW,GAAD,CAAWpY,GAAI,CAAEqC,GAAI,WCnEvBmL,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAG5B,SAASmJ,GAAW1S,EAAUic,EAAalJ,EAAMzQ,GAC/C,MAAO,CAAEtC,WAAUic,cAAalJ,OAAMzQ,WAGxC,SAASwH,GAAsB7E,GAC7B,IAAM8E,EAAG,6CAAyC9E,EAAM+E,MACxD,OAAO,mBAAGC,KAAMF,EAAKG,OAAO,SAArB,SAA+BjF,EAAM+E,OAG9C,SAASsV,GAAcra,GACrB,OAAO,mBAAGgF,KAAMhF,EAAM+E,KAAME,OAAO,SAA5B,SAAsCjF,EAAM+E,OA6HtCuV,OAzHf,WACmBpa,cAAjB,IAaM8N,EAAO,CAEXP,GAAW,gBAAiB,mDAAiD,kGAAmG,YAChLA,GAAW,iBAAkB,oDAAkD,mGAAoG,YACnLA,GAAW,oBAAqB,4DAAuD,sGAAuG,YAC9LA,GAAW,sBAAuB,MAAO,wGAAyG,YAClJA,GAAW,cAAe,gCAAiC,gGAAiG,YAE5JA,GAAW,oBAAqB,MAAO,sGAAuG,YAC9IA,GAAW,cAAe,uCAAwC,gGAAiG,YAEnKA,GAAW,iBAAkB,8CAA+C,mGAAoG,aAgBlL,OACE,eAAC,IAAM9M,SAAP,WAEE,eAACI,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,qCASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,4CAMF,eAACzD,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACmH,GAAA,EAAD,CAAgB3D,UAAWZ,IAA3B,SACE,eAACwE,GAAA,EAAD,CAAOhH,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,cAACpG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,6BACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,kDAGJ,cAACC,GAAA,EAAD,UACGwF,EAAKxU,KAAI,SAACkV,GAAD,OACR,eAACpG,GAAA,EAAD,CAEElH,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IAFtD,UAIE,cAACpG,GAAA,EAAD,CAAW/D,UAAU,KAAKiE,MAAM,MAAhC,SACE,iCAASiG,EAAI3T,aAEf,cAACwN,GAAA,EAAD,UAAYmG,EAAIsI,cAChB,cAACzO,GAAA,EAAD,UACE,cAAC8R,GAAD,CACEtV,KAAM2J,EAAIZ,SAGd,cAACvF,GAAA,EAAD,UACE,cAAC,GAAD,CACExD,KAAM2J,EAAIrR,cAdTqR,EAAI3T,oBAsBnB,uBACA,cAACoG,EAAA,EAAD,UACE,cAACwD,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,SACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAf,SACE,eAAC,GAAD,WACE,sGACA,cAACyB,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRma,MAAM,aAJV,yBASA,uCChJVvF,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eA+DbiW,OA5Df,WACE,IAAMta,EAAWC,cAEjB,OACE,eAAC,WAAD,WAEE,eAACa,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,mBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,oCAMF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACG,EAAA,EAAD,UACE,cAACwD,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,SACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,GAAf,SACE,eAAC,GAAD,WACE,2CACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,cACJF,IAAI,uBACJjB,QAAS,SAAC3H,GACRiG,EAAS,mBAGb,cAAC+C,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRiG,EAAS,iBAJb,iCClDV2O,GAAOjL,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,aAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAiHbkW,OA9Gf,WACE,IAAMva,EAAWC,cAEjB,OACE,eAAC,WAAD,WAEE,eAACa,EAAA,EAAD,CAAWG,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,cAACrF,EAAA,EAAD,CACE8B,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,kBASA,cAACxF,EAAA,EAAD,CAAYsF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,iCAMF,cAACzD,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACG,EAAA,EAAD,UACE,eAACwD,EAAA,EAAD,CAAMyI,WAAS,EAAChJ,QAAS,EAAzB,UACE,cAACO,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,sCACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,OACJF,IAAI,sBACJjB,QAAS,SAAC3H,GACRiG,EAAS,mBAGb,cAAC+C,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRma,MAAM,aAJV,8BAWJ,cAACxP,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,yCACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,UACJF,IAAI,wBAEN,cAACI,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRma,MAAM,aAJV,8BAWJ,cAACxP,EAAA,EAAD,CAAMC,MAAI,EAACrD,GAAI,EAAf,SACE,eAAC,GAAD,WACE,sCACA,cAACJ,EAAA,EAAD,CACEqD,UAAU,MACVpD,GAAI,CACF2B,OAAQ,IACR0B,MAAO,IACPC,UAAW,CAAEnD,GAAI,IAAKC,GAAI,KAC1BR,SAAU,CAAEO,GAAI,IAAKC,GAAI,MAE3BsB,IAAI,OACJF,IAAI,wBAEN,cAACI,EAAA,EAAD,CACE6R,WAAS,EAAC7M,QAAQ,YAClBtG,KAAK,QACLC,QAAS,SAAC3H,GACRma,MAAM,aAJV,yC,oEC3DhB,GAA6BsG,aAC3B,CAACC,KAAMC,QAASD,KAAME,MAAOF,KAAMG,UAAWH,KAAMI,QAASJ,KAAMK,SAAUL,KAAMM,UACnF,CACEC,aAAgB,CAAEC,UAAWnS,0JAAYoS,aACzCC,iBAJIC,GAAR,GAAQA,OAAQhS,GAAhB,GAAgBA,SAQRiS,GAAeC,aAAkB,CACvCC,QAAS,oBACTH,YAFMC,WAKFG,GAAcC,aAAa,CAC/BC,aAAa,EACbL,cACAjS,cA+CauS,OA5Cf,WAEE,OACE,cAAC,EAAD,UACE,cAAC,KAAD,CAAaC,OAAQJ,GAArB,SACE,cAAC,IAAD,CAAoBJ,OAAQA,GAA5B,SACE,cAAC,IAAM1a,SAAP,UACA,sBAAKkH,UAAU,MAAf,UACE,cAACgO,EAAA,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAACC,GAAA,EAAD,MACxC,cAAC,IAAD,CAAOF,KAAK,cAAcC,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAACE,GAAA,EAAD,MACzC,cAAC,IAAD,CAAOH,KAAK,QAAQC,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAACG,GAAD,MACxC,cAAC,IAAD,CAAOJ,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MAVzC,IAWE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAACI,GAAD,MACnC,cAAC,IAAD,CAAOL,KAAK,OAAOC,QAAS,cAACK,GAAD,MAC5B,cAAC,IAAD,CAAON,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,GAAD,SAE1C,cAAC,GAAD,4B,UCnGNM,GAAcC,SAASC,eAAe,QAC/BC,qBAAWH,IAGnBI,OACH,cAAC,KAAD,UACE,cAAC,GAAD,Q,iCCVJ,WAEM/c,EAAagd,0BAEJhd,O,uhx2FC4Bf,SAASuO,aAAT,GAAsC,IAAdnL,EAAa,EAAbA,IAAK5I,EAAQ,EAARA,KACrB8K,EAAK,OAAD,OAAS9K,EAAT,QACJgU,EAAOhU,EAAKiU,cAClB,OAAO,4DAAC,mDAAD,CACLxF,OAAQ,4DAAC,qDAAD,CAAQ7F,IAAKA,EAAKF,IAAKoC,IAC/B4D,MAAOsF,EACPlG,QAAQ,aAIZ,SAASnD,sBAAsB7E,GAC7B,IAAM8E,EAAG,6CAAyC9E,EAAM+E,MACxD,OAAO,iEAAGC,KAAMF,EAAKG,OAAO,SAArB,SAA+BjF,EAAM+E,OAG9C,IAAM6J,KAAOjL,4DAAOC,oDAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,wIAAC,kIAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAI5B,SAAS0X,iBAEP,YAAmJ5W,qEAAnJ,sBAAQnK,MAASqC,YAAjB,cAAiBA,YAAaI,aAA9B,cAA8BA,aAAcG,eAA5C,cAA4CA,eAAgBG,gBAA5D,cAA4DA,gBAAiBG,mBAA7E,cAA6EA,mBAAoBtD,SAAjG,cAAiGA,SAAUiD,eAA3G,cAA2GA,eAAgBG,kBAA3H,cAA2HA,kBAE3H,UAAgCmC,oDAAS9C,YAAY+H,UAArD,yJAAOC,SAAP,cAAiBqX,YAAjB,cACA,WAAgCvc,oDAAS,GAAzC,0JAAOmF,SAAP,cAAiBC,YAAjB,cACA,WAAwCpF,oDAAS,GAAjD,0JAAOqF,aAAP,cAAqBC,gBAArB,cACA,WAAoCtF,oDAAS,GAA7C,0JAAOqH,WAAP,cAAmB9B,cAAnB,cACA,WAA8CvF,oDAAS,GAAvD,2JAAOwF,gBAAP,eAAwBC,mBAAxB,eACA,YAAgDzF,oDAAS,GAAzD,4JAAOwc,iBAAP,eAAyBC,oBAAzB,eACA,YAAuCzc,oDAAS,IAAhD,4JAAO0c,aAAP,eAAqBC,eAArB,eACA,YAAyC3c,oDAAS,IAAlD,4JAAO4c,cAAP,eAAsB1M,gBAAtB,eAEA,YAAkClQ,oDAAS,GAA3C,4JAAO6c,UAAP,eAAkBC,aAAlB,eAGAle,sDAAU,WACR,GAAG1B,YAAY,CAAC,IACD+I,EADA,mSACf,kNACI,IACEC,YACA,MAAMzH,GACJC,QAAQC,MAAMF,GAJtB,2CADe,qDAQfwH,OAEC,IAEH,IAAMG,UAAS,mSAAG,kNAChBlJ,YAAYmJ,QAAQC,OAAO7L,SAAS,IAAI8L,KAAK,CAACC,KAAM/L,SAAS,KAC1Dd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZ/H,QAAQmE,IAAI4D,EAAQ1H,OAAO2H,WAAWC,aAAaC,QACnDV,eAEDW,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MARA,2CAAH,qDAYTse,aAAY,uSAAG,sQACfnW,OAAS,IACbA,OAASoW,KAAY,KAAPpW,QACd1J,YAAYmJ,QAAQ4W,UAAUrW,QAAQL,KAAK,CAACC,KAAM/L,SAAS,KACxDd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZP,eAEDW,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MATG,0DAAH,yDAaZyH,UAAS,mSAAG,kNAChBhJ,YAAYmJ,QAAQS,cAAcC,KAAK,CAAEP,KAAM/L,SAAS,KACrDd,MAAK,SAAC6L,GACLC,mBAAmBD,EAAgB,MACnC9G,QAAQmE,IAAI,qBAAqB2C,MAElCqB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,YAAYmJ,QAAQa,OAAOH,KAAK,CAAEP,KAAM/L,SAAS,KAC9Cd,MAAK,SAACwL,GACLC,YAAYD,GACZzG,QAAQmE,IAAI,cAAcsC,MAE3B0B,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,YAAYmJ,QAAQc,WAAWJ,KAAK,CAAEP,KAAM/L,SAAS,KAClDd,MAAK,SAAC0L,GACLC,gBAAgBD,GAChB3G,QAAQmE,IAAI,kBAAkBwC,MAE/BwB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,YAAYmJ,QAAQe,SAASL,KAAK,CAAEP,KAAM/L,SAAS,KAChDd,MAAK,SAAC0N,GACL9B,cAAc8B,GACd3I,QAAQmE,IAAI,gBAAgBwE,MAE7BR,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,YAAYmJ,QAAQ6W,eAAenW,KAAK,CAAEP,KAAM/L,SAAS,KACtDd,MAAK,SAAC6iB,GACLC,oBAAoBD,EAAiB,MACrC9d,QAAQmE,IAAI,sBAAsB2Z,MAEnC3V,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBvB,YAAYmU,cAAc,aAAc,CAAEC,UAAW,EAAGC,QAAS,WAC9D5X,MAAK,SAAC8M,GACL,IAAI+K,EAAc,EACdkL,EAAe,GACfE,EAAgB,GACpBnW,EAAQxH,QAAR,mSAAgB,WAAOwS,GAAP,qMAiBdiL,EAAahL,KAAK,CAAEyL,QAAS1L,EAAO9K,aAAawW,QAASxL,YAAaF,EAAOE,YAAa/K,OAAQ6K,EAAO9K,aAAaC,OAAO,KAAqBjC,KAAM8M,EAAO9K,aAAahC,KAAMyY,gBAAiB3L,EAAO2L,kBAC3MT,eAAeD,GACflL,EAAcC,EAAO9K,aAAaC,OAAO,KAAsB4K,EAnBjD,KAoBNC,EAAO9K,aAAawW,QApBd,OAqBP,cArBO,OAwBP,cAxBO,8BAsBVP,EAAclL,KAAK,CAAExK,KAAMuK,EAAOE,YAAaE,OAAQL,EAAalL,OAAQmL,EAAO9K,aAAaC,OAAO,KAAqBkL,OAAQ,IAtB1H,mCAyBV8K,EAAclL,KAAK,CAAExK,KAAMuK,EAAOE,YAAaE,OAAQL,EAAalL,OAAQ,EAAGwL,OAAQL,EAAO9K,aAAaC,OAAO,OAzBxG,6BA4BVlI,QAAQmE,IAAR,WA5BU,QA8BdqN,gBAAgB0M,GA9BF,4CAAhB,uDAgCAE,aAAarW,EAAQoS,QAErBna,QAAQmE,IAAI6Z,GACZhe,QAAQmE,IAAI+Z,MAEb/V,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAzFA,2CAAH,qDAiGf,SAAS4O,WAAWtS,EAAMsiB,EAAMzW,EAAQ0W,GACtC,MAAO,CAAEviB,OAAMsiB,OAAMzW,SAAQ0W,MAG/B,OACE,6DAAC,6CAAM/c,SAAP,WAEE,6DAAC,uDAAD,CAAWO,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,4DAAC,wDAAD,CACEvD,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,mBASA,6DAAC,wDAAD,CAAYF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,UACA,4DAACyJ,aAAD,CAAcnL,IAAI,MAAM5I,KAAK,QAD7B,mBAGA,qEAbF,6BAcE,4DAAC2K,sBAAD,CACEE,KAAMO,cAKV,4DAAC,uDAAD,CAAWtE,SAAS,KAApB,SACE,4DAAC,iDAAD,CAAKI,GAAI,CAAEqD,MAAO,QAAlB,SACE,6DAAC,mDAAD,CAAM2I,WAAS,EAAChJ,QAAS,EAAzB,UACE,6DAAC,mDAAD,CAAMQ,MAAI,EAACrD,GAAI,EAAf,UACE,6DAACqN,KAAD,WACE,4FACA,6EAAKhJ,gBAAL,cAEF,qEACA,6DAACgJ,KAAD,WACE,4FACA,6DAAC,qDAAD,CACE5G,QAAQ,YACRsK,UAAW,4DAAC,uEAAD,IACX3Q,QAAS6E,UAHX,UAKGoW,iBALH,UAOA,qEATF,mBAUE,wEAEF,qEACA,6DAAChO,KAAD,WACE,sGACA,4DAAC,wDAAD,CAAWxU,GAAG,eAAewO,MAAM,SAASZ,QAAQ,WAAWpI,MAAOgd,mBACtE,qEACA,4DAAC,qDAAD,CACE5U,QAAQ,YACRsK,UAAW,4DAAC,uEAAD,IACX3Q,QAASwb,aAHX,iBAOA,qEACA,2EAIJ,6DAAC,mDAAD,CAAMvY,MAAI,EAACrD,GAAI,EAAf,UACE,6DAACqN,KAAD,WACE,4FACA,4DAAC,yCAAD,CAAqBnK,MAAM,OAAO+N,OAAQ,EAA1C,SACE,6DAAC,yCAAD,CAAUpX,KAAM4hB,cAAhB,UACE,4DAAC,yCAAD,CAAerK,gBAAgB,QAC/B,4DAAC,yCAAD,CAAOE,QAAQ,SACf,4DAAC,yCAAD,IACA,4DAAC,yCAAD,IACA,4DAAC,yCAAD,IACA,4DAAC,yCAAD,CAAKA,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,4DAAC,yCAAD,CAAKL,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,4DAAC,yCAAD,CAAKL,QAAQ,SAASI,QAAQ,IAAIC,KAAK,iBAG3C,wEAEF,qEACA,6DAACtE,KAAD,WACE,gGAAqBqO,UAArB,OACA,4DAAC,6DAAD,CAAgBzY,UAAWZ,oDAA3B,SACE,6DAAC,oDAAD,CAAOxC,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,4DAAC,wDAAD,UACE,6DAAC,uDAAD,WACE,4DAAC,wDAAD,mBACA,4DAAC,wDAAD,qBACA,4DAAC,wDAAD,qBACA,4DAAC,wDAAD,sBAGJ,4DAAC,wDAAD,UACGqO,aAAatjB,KAAI,SAACkV,GAAD,OAChB,6DAAC,uDAAD,CACEtN,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IADtD,UAGE,4DAAC,wDAAD,CAAWnK,UAAU,KAAKiE,MAAM,MAAhC,SACGiG,EAAI6O,UAEP,4DAAC,wDAAD,UAAY7O,EAAIqD,cAChB,4DAAC,wDAAD,UAAYrD,EAAI1H,SAChB,4DAAC,wDAAD,UAAY0H,EAAI3J,oCAe3BiX,sC,ogGCvSf,SAAS/N,aAAT,GAAsC,IAAdnL,EAAa,EAAbA,IAAK5I,EAAQ,EAARA,KACrB8K,EAAK,OAAD,OAAS9K,EAAT,QACJgU,EAAOhU,EAAKiU,cAClB,OAAO,4DAAC,mDAAD,CACLxF,OAAQ,4DAAC,qDAAD,CAAQ7F,IAAKA,EAAKF,IAAKoC,IAC/B4D,MAAOsF,EACPlG,QAAQ,aAIZ,SAASnD,sBAAsB7E,GAC7B,IAAM8E,EAAG,6CAAyC9E,EAAM+E,MACxD,OAAO,iEAAGC,KAAMF,EAAKG,OAAO,SAArB,SAA+BjF,EAAM+E,OAG9C,IAAM6J,KAAOjL,4DAAOC,oDAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,wIAAC,kIAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBzB,UAAW,SACX7B,MAAO+C,EAAME,QAAQM,KAAKC,eAI5B,SAAS2X,kBAEP,YAAmJ7W,qEAAnJ,sBAAQnK,MAASqC,YAAjB,cAAiBA,YAAaI,aAA9B,cAA8BA,aAAcG,eAA5C,cAA4CA,eAAgBG,gBAA5D,cAA4DA,gBAAiBG,mBAA7E,cAA6EA,mBAAoBtD,SAAjG,cAAiGA,SAAUiD,eAA3G,cAA2GA,eAAgBG,kBAA3H,cAA2HA,kBAE3H,UAAkCmC,oDAAS1C,aAAa2H,UAAxD,yJAAOS,UAAP,cAAkB6X,aAAlB,cACA,WAAkCvd,oDAAS,GAA3C,0JAAO2F,UAAP,cAAkBC,aAAlB,cACA,WAA0C5F,oDAAS,GAAnD,0JAAO6F,cAAP,cAAsBC,iBAAtB,cACA,WAAsC9F,oDAAS,GAA/C,0JAAOwH,YAAP,cAAoBgW,eAApB,cACA,WAAgDxd,oDAAS,GAAzD,2JAAO+F,iBAAP,eAAyBC,oBAAzB,eACA,YAAkDhG,oDAAS,GAA3D,4JAAOyd,kBAAP,eAA0BC,qBAA1B,eACA,YAAyC1d,oDAAS,IAAlD,4JAAO2d,cAAP,eAAsBC,gBAAtB,eACA,YAA2C5d,oDAAS,IAApD,4JAAO6d,eAAP,eAAuBC,iBAAvB,eAEA,YAAoC9d,oDAAS,GAA7C,4JAAO+d,WAAP,eAAmBC,cAAnB,eAGApf,sDAAU,WACR,GAAGtB,aAAa,CAAC,IACF2I,EADC,mSAChB,kNACI,IACEE,aACA,MAAM1H,GACJC,QAAQC,MAAMF,GAJtB,2CADgB,qDAQhBwH,OAEC,IAEH,IAAMqB,WAAU,mSAAG,kNACjBhK,aAAa+I,QAAQkB,UAAU9M,SAAS,IAAI8L,KAAK,CAACC,KAAM/L,SAAS,KAC9Dd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZ/H,QAAQmE,IAAI4D,EAAQ1H,OAAO2H,WAAWC,aAAaC,QACnDT,gBAEDU,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MARC,2CAAH,qDAYVwf,cAAa,uSAAG,sQAChBrX,OAAS,IACbA,OAASoW,KAAKpW,OAAO,KAAD,IAAC,GAAI,KACzBtJ,aAAa+I,QAAQ4W,UAAUrW,QAAQL,KAAK,CAACC,KAAM/L,SAAS,KACzDd,MAAK,SAAC8M,GACL/H,QAAQmE,IAAI4D,GACZN,gBAEDU,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MATI,0DAAH,yDAab0H,WAAU,mSAAG,kNACjB7I,aAAa+I,QAAQS,cAAcC,KAAK,CAAEP,KAAM/L,SAAS,KACtDd,MAAK,SAACoM,GACLA,GAAoC,KAAD,IAAC,GAAI,IACxCA,EAAmBiB,KAAKC,MAAyB,IAAnBlB,GAA0B,IACxDC,oBAAoBD,GACpBrH,QAAQmE,IAAI,sBAAsBkD,MAEnCc,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,aAAa+I,QAAQa,OAAOH,KAAK,CAAEP,KAAM/L,SAAS,KAC/Cd,MAAK,SAACgM,GACLC,aAAaD,GACbjH,QAAQmE,IAAI,eAAe8C,MAE5BkB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,aAAa+I,QAAQc,WAAWJ,KAAK,CAAEP,KAAM/L,SAAS,KACnDd,MAAK,SAACkM,GACLC,iBAAiBD,GACjBnH,QAAQmE,IAAI,mBAAmBgD,MAEhCgB,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,aAAa+I,QAAQe,SAASL,KAAK,CAAEP,KAAM/L,SAAS,KACjDd,MAAK,SAAC6N,GACLgW,eAAehW,GACf9I,QAAQmE,IAAI,iBAAiB2E,MAE9BX,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,aAAa+I,QAAQ6W,eAAenW,KAAK,CAAEP,KAAM/L,SAAS,KACvDd,MAAK,SAAC8jB,GACLC,qBAAqBD,EAAkB,KAAD,IAAC,GAAI,KAC3C/e,QAAQmE,IAAI,uBAAuB4a,MAEpC5W,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MAGhBnB,aAAa+T,cAAc,aAAc,CAAEC,UAAW,EAAGC,QAAS,WAC/D5X,MAAK,SAAC8M,GACL,IAAI+K,EAAc,EACdmM,EAAgB,GAChBE,EAAiB,GACrBpX,EAAQxH,QAAR,mSAAgB,WAAOwS,GAAP,qMAiBdkM,EAAcjM,KAAK,CAAEyL,QAAS1L,EAAO9K,aAAawW,QAASxL,YAAaF,EAAOE,YAAa/K,OAAQ6K,EAAO9K,aAAaC,OAApB,SAA2B,GAAI,IAAIjC,KAAM8M,EAAO9K,aAAahC,KAAMyY,gBAAiB3L,EAAO2L,kBAC/LQ,gBAAgBD,GAChBnM,EAAcC,EAAO9K,aAAaC,OAApB,SAA2B,GAAI,IAAK4K,EAnBpC,KAoBNC,EAAO9K,aAAawW,QApBd,OAqBP,cArBO,OAwBP,cAxBO,8BAsBVU,EAAenM,KAAK,CAAExK,KAAMuK,EAAOE,YAAaE,OAAQL,EAAalL,OAAQmL,EAAO9K,aAAaC,OAApB,SAA2B,GAAI,IAAIkL,OAAQ,IAtB9G,mCAyBV+L,EAAenM,KAAK,CAAExK,KAAMuK,EAAOE,YAAaE,OAAQL,EAAalL,OAAQ,EAAGwL,OAAQL,EAAO9K,aAAaC,OAApB,SAA2B,GAAI,MAzB7G,6BA4BVlI,QAAQmE,IAAR,WA5BU,QA8Bdib,iBAAiBD,GA9BH,4CAAhB,uDAgCAG,cAAcvX,EAAQoS,QAEtBna,QAAQmE,IAAI8a,GACZjf,QAAQmE,IAAIgb,MAEbhX,OAAM,SAACpI,GACNC,QAAQmE,IAAIpE,MA3FC,2CAAH,qDAmGhB,SAAS4O,WAAWtS,EAAMsiB,EAAMzW,EAAQ0W,GACtC,MAAO,CAAEviB,OAAMsiB,OAAMzW,SAAQ0W,MAG/B,OACE,6DAAC,6CAAM/c,SAAP,WAEE,6DAAC,uDAAD,CAAWO,gBAAc,EAACF,SAAS,KAAKwD,UAAU,OAAOpD,GAAI,CAAE0G,GAAI,EAAGC,GAAI,GAA1E,UACE,4DAAC,wDAAD,CACEvD,UAAU,KACVwD,QAAQ,KACRC,MAAM,SACNnH,MAAM,eACNoH,cAAY,EALd,mBASA,6DAAC,wDAAD,CAAYF,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,UACA,4DAACyJ,aAAD,CAAcnL,IAAI,OAAO5I,KAAK,SAD9B,oBAGA,6DAAC,wDAAD,CAAY8N,QAAQ,KAAKC,MAAM,SAASnH,MAAM,iBAAiB0D,UAAU,IAAzE,UACA,qEADA,6BAEA,4DAACK,sBAAD,CACEE,KAAMe,kBAMV,4DAAC,uDAAD,CAAW9E,SAAS,KAApB,SACE,4DAAC,iDAAD,CAAKI,GAAI,CAAEqD,MAAO,QAAlB,SACE,6DAAC,mDAAD,CAAM2I,WAAS,EAAChJ,QAAS,EAAzB,UACE,6DAAC,mDAAD,CAAMQ,MAAI,EAACrD,GAAI,EAAf,UACE,6DAACqN,KAAD,WACE,4FACA,6EAAKzI,iBAAL,eAEF,qEACA,6DAACyI,KAAD,WACE,4FACA,6DAAC,qDAAD,CACE5G,QAAQ,YACRsK,UAAW,4DAAC,uEAAD,IACX3Q,QAAS+F,WAHX,UAKGmW,kBALH,WAOA,qEATF,kBAUE,wEAEF,qEACA,6DAACjP,KAAD,WACE,sGACA,4DAAC,wDAAD,CAAWxU,GAAG,eAAewO,MAAM,SAASZ,QAAQ,WAAWpI,MAAOie,oBACtE,qEACA,4DAAC,qDAAD,CACE7V,QAAQ,YACRsK,UAAW,4DAAC,uEAAD,IACX3Q,QAAS0c,cAHX,iBAOA,qEACA,2EAIJ,6DAAC,mDAAD,CAAMzZ,MAAI,EAACrD,GAAI,EAAf,UACE,6DAACqN,KAAD,WACE,4FACA,4DAAC,yCAAD,CAAqBnK,MAAM,OAAO+N,OAAQ,EAA1C,SACE,6DAAC,yCAAD,CAAUpX,KAAM6iB,eAAhB,UACE,4DAAC,yCAAD,CAAetL,gBAAgB,QAC/B,4DAAC,yCAAD,CAAOE,QAAQ,SACf,4DAAC,yCAAD,IACA,4DAAC,yCAAD,IACA,4DAAC,yCAAD,IACA,4DAAC,yCAAD,CAAKA,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,4DAAC,yCAAD,CAAKL,QAAQ,SAASI,QAAQ,IAAIC,KAAK,YACvC,4DAAC,yCAAD,CAAKL,QAAQ,SAASI,QAAQ,IAAIC,KAAK,iBAG3C,wEAEF,qEACA,6DAACtE,KAAD,WACE,gGAAqBuP,WAArB,OACA,4DAAC,6DAAD,CAAgB3Z,UAAWZ,oDAA3B,SACE,6DAAC,oDAAD,CAAOxC,GAAI,CAAEqN,SAAU,KAAO,aAAW,eAAzC,UACE,4DAAC,wDAAD,UACE,6DAAC,uDAAD,WACE,4DAAC,wDAAD,mBACA,4DAAC,wDAAD,qBACA,4DAAC,wDAAD,qBACA,4DAAC,wDAAD,sBAGJ,4DAAC,wDAAD,UACGsP,cAAcvkB,KAAI,SAACkV,GAAD,OACjB,6DAAC,uDAAD,CACEtN,GAAI,CAAE,mCAAoC,CAAEuN,OAAQ,IADtD,UAGE,4DAAC,wDAAD,CAAWnK,UAAU,KAAKiE,MAAM,MAAhC,SACGiG,EAAI6O,UAEP,4DAAC,wDAAD,UAAY7O,EAAIqD,cAChB,4DAAC,wDAAD,UAAYrD,EAAI1H,SAChB,4DAAC,wDAAD,UAAY0H,EAAI3J,oCAe3BkX,uC,oNC3Uf,oBAKe7W,IAFA,kBAAMkZ,qBAAW5e,O","file":"static/js/main.b5ab0343.chunk.js","sourcesContent":["var map = {\n\t\"./af-ZA.js\": [\n\t\t1319,\n\t\t28\n\t],\n\t\"./ar-SA.js\": [\n\t\t1320,\n\t\t29\n\t],\n\t\"./ca-ES.js\": [\n\t\t1321,\n\t\t30\n\t],\n\t\"./cs-CZ.js\": [\n\t\t1322,\n\t\t31\n\t],\n\t\"./da-DK.js\": [\n\t\t1323,\n\t\t32\n\t],\n\t\"./de-DE.js\": [\n\t\t1324,\n\t\t33\n\t],\n\t\"./el-GR.js\": [\n\t\t1325,\n\t\t34\n\t],\n\t\"./en-US.js\": [\n\t\t1326,\n\t\t35\n\t],\n\t\"./es-ES.js\": [\n\t\t1327,\n\t\t36\n\t],\n\t\"./fi-FI.js\": [\n\t\t1328,\n\t\t37\n\t],\n\t\"./fr-FR.js\": [\n\t\t1329,\n\t\t38\n\t],\n\t\"./he-IL.js\": [\n\t\t1330,\n\t\t39\n\t],\n\t\"./hu-HU.js\": [\n\t\t1331,\n\t\t40\n\t],\n\t\"./id-ID.js\": [\n\t\t1332,\n\t\t41\n\t],\n\t\"./it-IT.js\": [\n\t\t1333,\n\t\t42\n\t],\n\t\"./ja-JP.js\": [\n\t\t1334,\n\t\t43\n\t],\n\t\"./ko-KR.js\": [\n\t\t1335,\n\t\t44\n\t],\n\t\"./nl-NL.js\": [\n\t\t1336,\n\t\t45\n\t],\n\t\"./no-NO.js\": [\n\t\t1337,\n\t\t46\n\t],\n\t\"./pl-PL.js\": [\n\t\t1338,\n\t\t47\n\t],\n\t\"./pseudo.js\": [\n\t\t1339,\n\t\t48\n\t],\n\t\"./pt-BR.js\": [\n\t\t1340,\n\t\t49\n\t],\n\t\"./pt-PT.js\": [\n\t\t1341,\n\t\t50\n\t],\n\t\"./ro-RO.js\": [\n\t\t1342,\n\t\t51\n\t],\n\t\"./ru-RU.js\": [\n\t\t1343,\n\t\t52\n\t],\n\t\"./sr-SP.js\": [\n\t\t1344,\n\t\t53\n\t],\n\t\"./sv-SE.js\": [\n\t\t1345,\n\t\t54\n\t],\n\t\"./sw-TZ.js\": [\n\t\t1346,\n\t\t55\n\t],\n\t\"./tr-TR.js\": [\n\t\t1347,\n\t\t56\n\t],\n\t\"./uk-UA.js\": [\n\t\t1348,\n\t\t57\n\t],\n\t\"./vi-VN.js\": [\n\t\t1349,\n\t\t58\n\t],\n\t\"./zh-CN.js\": [\n\t\t1350,\n\t\t59\n\t],\n\t\"./zh-TW.js\": [\n\t\t1351,\n\t\t60\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1280;\nmodule.exports = webpackAsyncContext;","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport EthContext from \"./EthContext\";\r\nimport { reducer, actions, initialState } from \"./state\";\r\nimport Erc20_Ayg from \"../../contracts/Erc20_Ayg.json\";\r\nimport Erc20_Nayg from \"../../contracts/Erc20_Nayg.json\";\r\nimport Erc721_Nftayg from \"../../contracts/Erc721_Nftayg.json\";\r\nimport Staking from \"../../contracts/Staking.json\";\r\nimport StakingNFT from \"../../contracts/StakingNFT.json\";\r\nimport EthVaultMintAyg from \"../../contracts/EthVaultMintAyg.json\";\r\nimport LPToken from \"../../contracts/LPToken.json\";\r\nimport PoolSwapStake from \"../../contracts/PoolSwapStake.json\";\r\n\r\nfunction EthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const init = useCallback(\r\n    async (artifactAyg, artifactNayg, artifactNftayg, artifactStaking, artifactStakingNFT, artifactVault, artifactLPToken, artifactPoolSwap) => {\r\n      if (artifactAyg) {\r\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\r\n        const accounts = await web3.eth.requestAccounts();\r\n        const networkID = await web3.eth.net.getId();\r\n\r\n        const abiAyg = artifactAyg.abi;\r\n        const abiNayg = artifactNayg.abi;\r\n        const abiNftayg = artifactNftayg.abi;\r\n        const abiStaking = artifactStaking.abi; \r\n        const abiStakingNFT = artifactStakingNFT.abi; \r\n        const abiVault = artifactVault.abi; \r\n        const abiLPToken = artifactLPToken.abi;\r\n        const abiPoolSwap = artifactPoolSwap.abi;\r\n\r\n        let addressAyg, contractAyg;\r\n        let addressNayg, contractNayg;\r\n        let addressNftayg, contractNftayg;\r\n        let addressStaking, contractStaking;\r\n        let addressStakingNFT, contractStakingNFT;\r\n        let addressVault, contractVault;\r\n        let addressLPToken, contractLPToken;\r\n        let addressPoolSwap, contractPoolSwap;\r\n\r\n        try {\r\n          addressAyg = Erc20_Ayg.networks[networkID].address;\r\n          contractAyg = new web3.eth.Contract(abiAyg, addressAyg);\r\n\r\n          addressNayg = Erc20_Nayg.networks[networkID].address;\r\n          contractNayg = new web3.eth.Contract(abiNayg, addressNayg);\r\n\r\n          addressNftayg = Erc721_Nftayg.networks[networkID].address;\r\n          contractNftayg = new web3.eth.Contract(abiNftayg, addressNftayg);\r\n\r\n          addressStaking = Staking.networks[networkID].address;\r\n          contractStaking = new web3.eth.Contract(abiStaking, addressStaking);\r\n\r\n          addressStakingNFT = StakingNFT.networks[networkID].address;\r\n          contractStakingNFT = new web3.eth.Contract(abiStakingNFT, addressStakingNFT);\r\n\r\n          addressVault = EthVaultMintAyg.networks[networkID].address;\r\n          contractVault = new web3.eth.Contract(abiVault, addressVault);\r\n\r\n          addressLPToken = LPToken.networks[networkID].address;\r\n          contractLPToken = new web3.eth.Contract(abiLPToken, addressLPToken);\r\n\r\n          addressPoolSwap = PoolSwapStake.networks[networkID].address;\r\n          contractPoolSwap = new web3.eth.Contract(abiPoolSwap, addressPoolSwap);\r\n          } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n        dispatch({\r\n          type: actions.init,\r\n          data: { web3, accounts, networkID, \r\n                  artifactAyg, contractAyg, addressAyg, \r\n                  artifactNayg, contractNayg, addressNayg, \r\n                  artifactNftayg, contractNftayg, addressNftayg, \r\n                  artifactStaking, contractStaking, addressStaking, \r\n                  artifactStakingNFT, contractStakingNFT, addressStakingNFT, \r\n                  artifactVault, contractVault, addressVault, \r\n                  artifactLPToken, contractLPToken, addressLPToken, \r\n                  artifactPoolSwap, contractPoolSwap, addressPoolSwap,                \r\n                }\r\n        });\r\n      }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    const tryInit = async () => {\r\n      try {\r\n        const artifactAyg = require(\"../../contracts/Erc20_Ayg.json\");\r\n        const artifactNayg = require(\"../../contracts/Erc20_Nayg.json\");\r\n        const artifactNftayg = require(\"../../contracts/Erc721_Nftayg.json\");\r\n        const artifactStaking = require(\"../../contracts/Staking.json\");\r\n        const artifactStakingNFT = require(\"../../contracts/StakingNFT.json\");\r\n        const artifactVault = require(\"../../contracts/EthVaultMintAyg.json\");\r\n        const artifactLPToken = require(\"../../contracts/LPToken.json\");\r\n        const artifactPoolSwap = require(\"../../contracts/PoolSwapStake.json\");\r\n        init(artifactAyg, artifactNayg, artifactNftayg, artifactStaking, artifactStakingNFT, artifactVault, artifactLPToken, artifactPoolSwap);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    tryInit();\r\n  }, [init]);\r\n\r\n  useEffect(() => {\r\n    const events = [\"chainChanged\", \"accountsChanged\"];\r\n    const handleChange = () => {\r\n      init(state.artifact);\r\n    };\r\n\r\n    events.forEach(e => window.ethereum.on(e, handleChange));\r\n    return () => {\r\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\r\n    };\r\n  }, [init, state.artifact]);\r\n\r\n  return (\r\n    <EthContext.Provider value={{\r\n      state,\r\n      dispatch\r\n    }}>\r\n      {children}\r\n    </EthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default EthProvider;\r\n","export default __webpack_public_path__ + \"static/media/logoH.aab54e3f.png\";","import React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Logo from \"./../assets/logoH.png\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { ConnectButton } from '@rainbow-me/rainbowkit';\r\n\r\n\r\nconst pages = ['Dashboard', 'Token', 'Vault&Swap', 'Stake', 'Pool', 'NFT'];\r\nconst settings = ['My staking', 'My NFT'];\r\n\r\nconst ResponsiveAppBar = (props) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <AppBar position=\"static\" color=\"primary\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n            <img src={Logo} alt=\"AYG Labs !\" height='60px' />\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <img src={Logo} alt=\"AYG Labs !\" height='60px' />\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={(e) => {\r\n                  console.log(e.currentTarget.dataset.buttonKey);\r\n                  navigate('/'+e.currentTarget.dataset.buttonKey);\r\n\r\n                }}\r\n                data-button-key={page}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n            <Button size=\"medium\">\r\n              <ConnectButton />\r\n            </Button>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\" onClick={handleOpenUserMenu} sx={{ p: 2 }}>\r\n              <Avatar>\r\n                <AccountCircleIcon />\r\n              </Avatar>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponsiveAppBar;\r\n","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#999',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <br />\r\n      <Box\r\n        component=\"img\"\r\n        sx={{\r\n          height: 600,\r\n          width: 1500,\r\n          maxHeight: { xs: 200, md: 600 },\r\n          maxWidth: { xs: 500, md: 1500 },\r\n        }}\r\n        alt=\"Staking NFT\"\r\n        src=\"./../dashboard.jpg\"\r\n        onClick={(e) => {\r\n          navigate('/NFT/Staking');\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <Grid item xs={2}>\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            height: 200,\r\n            width: 800,\r\n            maxHeight: { xs: 100, md: 200 },\r\n            maxWidth: { xs: 400, md: 800 },\r\n          }}\r\n          alt=\"AYG NFT Collection\"\r\n          src=\"./../ayg-nft_ban800x200.png\"\r\n          onClick={(e) => {\r\n            navigate('/NFT');\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","// Import NPM\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n// Import SC & Web3\r\nimport useEth from \"./../contexts/EthContext/useEth\";\r\n\r\n// Import UI\r\nimport { styled } from '@mui/material/styles';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport IconFaucet from '@mui/icons-material/CleanHands';\r\nimport IconGraph from '@mui/icons-material/Analytics';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction DrawLinkAHrefExplorer(props) {\r\n  const url = `https://kovan.etherscan.io/address/${props.addr}`;\r\n  return <a href={url} target=\"_blank\" rel=\"noreferrer\">{props.addr}</a>\r\n}\r\n\r\nfunction Token() {\r\n\r\n  const { state: { contractAyg, contractNayg, accounts } } = useEth();\r\n\r\nconsole.log(contractNayg._address);\r\n  // AYG\r\n  const [addr_AYG, setAddr_AYG] = useState(contractAyg._address);\r\n  const [name_AYG, setName_AYG] = useState(0);\r\n  const [decimals_AYG, setDecimals_AYG] = useState(0);\r\n  const [symbol_AYG, setSymbol_AYG] = useState(0);\r\n  const [totalsupply_AYG, setTotalSupply_AYG] = useState(0);\r\n\r\n  // NAYG\r\n  const [addr_NAYG, setAddr_NAYG] = useState(contractNayg._address);\r\n  const [name_NAYG, setName_NAYG] = useState(0);\r\n  const [decimals_NAYG, setDecimals_NAYG] = useState(0);\r\n  const [symbol_NAYG, setSymbol_NAYG] = useState(0);\r\n  const [totalsupply_NAYG, setTotalSupply_NAYG] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(contractAyg && contractNayg){\r\n    async function fetchData(){\r\n        try {\r\n          updateAYG();\r\n          updateNAYG();\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n\r\n    const faucetAYG = async () => {\r\n      contractAyg.methods.faucet(accounts[0]).send({from: accounts[0]})\r\n        .then((results) => {\r\n          console.log(results);\r\n          console.log(results.events.MintSupply.returnValues.amount);\r\n          updateAYG();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    const updateAYG = async () => {\r\n      contractAyg.methods.totalSupply().call({ from: accounts[0] })\r\n        .then((totalsupply_AYG) => {\r\n          totalsupply_AYG = totalsupply_AYG/10**18;\r\n          totalsupply_AYG = Math.round(totalsupply_AYG * 100) / 100;\r\n          setTotalSupply_AYG(totalsupply_AYG);\r\n          console.log(\"totalsupply_AYG = \"+totalsupply_AYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractAyg.methods.name().call({ from: accounts[0] })\r\n        .then((name_AYG) => {\r\n          setName_AYG(name_AYG);\r\n          console.log(\"name_AYG = \"+name_AYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractAyg.methods.decimals().call({ from: accounts[0] })\r\n        .then((decimals_AYG) => {\r\n          setDecimals_AYG(decimals_AYG);\r\n          console.log(\"decimals_AYG = \"+decimals_AYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractAyg.methods.symbol().call({ from: accounts[0] })\r\n        .then((symbol_AYG) => {\r\n          setSymbol_AYG(symbol_AYG);\r\n          console.log(\"symbol_AYG = \"+symbol_AYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const faucetNAYG = async () => {\r\n      contractNayg.methods.getFaucet(accounts[0]).send({from: accounts[0]})\r\n        .then((results) => {\r\n          console.log(results);\r\n          console.log(results.events.MintSupply.returnValues.amount);\r\n          updateNAYG();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    const updateNAYG = async () => {\r\n      contractNayg.methods.totalSupply().call({ from: accounts[0] })\r\n        .then((totalsupply_NAYG) => {\r\n          totalsupply_NAYG = totalsupply_NAYG/10**18;\r\n          totalsupply_NAYG = Math.round(totalsupply_NAYG * 100) / 100;\r\n          setTotalSupply_NAYG(totalsupply_NAYG);\r\n          console.log(\"totalsupply_NAYG = \"+totalsupply_NAYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractNayg.methods.name().call({ from: accounts[0] })\r\n        .then((name_NAYG) => {\r\n          setName_NAYG(name_NAYG);\r\n          console.log(\"name_NAYG = \"+name_NAYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractNayg.methods.decimals().call({ from: accounts[0] })\r\n        .then((decimals_NAYG) => {\r\n          setDecimals_NAYG(decimals_NAYG);\r\n          console.log(\"decimals_NAYG = \"+decimals_NAYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      contractNayg.methods.symbol().call({ from: accounts[0] })\r\n        .then((symbol_NAYG) => {\r\n          setSymbol_AYG(symbol_NAYG);\r\n          console.log(\"symbol_NAYG = \"+symbol_NAYG);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"Token\">\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          TOKEN\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          ADMIN\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\" component=\"main\">\r\n        <Box>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Symbol</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Decimals</TableCell>\r\n                  <TableCell>TotalSupply</TableCell>\r\n                  <TableCell>Address</TableCell>\r\n                  <TableCell>Manage</TableCell>\r\n                  <TableCell>Faucet</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Chip avatar={<Avatar alt=\"AYG\" src=\"./ico_ayg.png\" />} label=\"AYG\" variant=\"outlined\" />\r\n                    </TableCell>\r\n                    <TableCell>{name_AYG}</TableCell>\r\n                    <TableCell>{decimals_AYG}</TableCell>\r\n                    <TableCell>{totalsupply_AYG}</TableCell>\r\n                    <TableCell>\r\n                      <DrawLinkAHrefExplorer\r\n                        addr={addr_AYG}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label=\"more\"\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                          navigate('/TokenManage/AYG');\r\n                        }}\r\n                      >\r\n                        <IconGraph\r\n                          fontSize=\"inherit\"\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label=\"more\"\r\n                        size=\"large\"\r\n                        onClick={faucetAYG}\r\n                      >\r\n                        <IconFaucet\r\n                          fontSize=\"inherit\"\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Chip avatar={<Avatar alt=\"NAYG\" src=\"./ico_nayg.png\" />} label=\"NAYG\" variant=\"outlined\" />\r\n                    </TableCell>\r\n                    <TableCell>{name_NAYG}</TableCell>\r\n                    <TableCell>{decimals_NAYG}</TableCell>\r\n                    <TableCell>{totalsupply_NAYG}</TableCell>\r\n                    <TableCell>\r\n                      <DrawLinkAHrefExplorer\r\n                        addr={addr_NAYG}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label=\"more\"\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                          navigate('/TokenManage/nAYG');\r\n                        }}\r\n                      >\r\n                        <IconGraph\r\n                          fontSize=\"inherit\"\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label=\"more\"\r\n                        size=\"large\"\r\n                        onClick={faucetNAYG}\r\n                      >\r\n                        <IconFaucet\r\n                          fontSize=\"inherit\"\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n\r\n        </Box>\r\n      </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Token;\r\n","import React, { useState } from 'react';\r\nimport { providers, ethers } from 'ethers';\r\nimport { SwapWidget } from '@uniswap/widgets';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport '@uniswap/widgets/dist/fonts.css';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst infuraId = process.env.INFURA_ID;\r\nconst jsonRpcEndpoint = `https://mainnet.infura.io/v3/${infuraId}`;\r\nconst jsonRpcProvider = new providers.JsonRpcProvider(jsonRpcEndpoint);\r\nconst provider = new ethers.providers.Web3Provider(jsonRpcProvider);\r\n\r\nconst theme: Theme = {\r\n  accent: '#1976d2',\r\n}\r\n\r\nexport default function Uniswap() {\r\n\r\n  const [account, setAccount] = useState({\r\n    address: '',\r\n    provider: provider,\r\n  })\r\n\r\n\r\n  async function connectWallet() {\r\n    const ethereumProvider = await detectEthereumProvider();\r\n\r\n    if (ethereumProvider) {\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      })\r\n\r\n      const address = accounts[0];\r\n      setAccount({\r\n        address: address,\r\n        provider: ethereumProvider\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxwidth=\"sx\">\r\n      <Box marginTop={4} marginBottom={5}>\r\n        <Button size=\"large\" variant=\"contained\" onClick={connectWallet}>Use Uniswap Liquidity</Button>\r\n      </Box>\r\n      <Box >\r\n        <div className=\"Uniswap\">\r\n          <SwapWidget \r\n          provider={account.provider}\r\n          JsonRpcEndpoint={jsonRpcEndpoint}\r\n          theme={theme}\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Card from '@mui/material/Card';\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\nimport Uniswap from \"./Uniswap\";\r\n\r\n\r\nfunction Swap() {\r\n\r\n  const { state: { contractAyg, contractNayg, contractVault, contractPoolSwap, addressPoolSwap, accounts } } = useEth();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputVault, setInputVault ] = useState();\r\n  const [inputAygSwap, setInputAygSwap] = useState(\"\");\r\n  const [inputNaygSwap, setInputNaygSwap] = useState(\"\");\r\n  const [estAygSwap, setEstAygSwap] = useState();\r\n  const [estNaygSwap, setEstNaygSwap] = useState();\r\n  const [tradingFees, setTradingFees] = useState();\r\n  const [tradingFeesN, setTradingFeesN] = useState();\r\n  const [ethPrice, setEthPrice ] = useState();\r\n  const [aygPrice, setAygPrice ] = useState();\r\n  const [naygPrice, setNaygPrice] = useState();\r\n  const [konstant, setKonstant] = useState();\r\n  \r\n\r\n  useEffect(() => {\r\n    if(contractAyg){\r\n    async function fetchData(){\r\n      try {\r\n        update(); \r\n      } catch(err) {\r\n          console.error(err)\r\n      }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  function web2(x) {\r\n    return Number.parseFloat(x).toFixed(2);\r\n  }\r\n\r\n  const handleInputAyg = event => {\r\n    setInputAygSwap(event.target.value);\r\n  }\r\n\r\n  const handleInputNayg = event => {\r\n    setInputNaygSwap(event.target.value);\r\n  }\r\n\r\n\r\n  const handlePriceFeed = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const ethPrice = await contractVault.methods.getLatestPriceEth().call({from: accounts[0]});\r\n      setEthPrice(web2(Web3.utils.fromWei(ethPrice)));\r\n      const naygPrice = await contractPoolSwap.methods.getLatestPriceLinkProxy().call({from: accounts[0]});\r\n      setNaygPrice(web2(Web3.utils.fromWei(naygPrice)));\r\n      const aygPrice = await contractPoolSwap.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n      setAygPrice(web2(Web3.utils.fromWei(aygPrice)));\r\n      const konstant = web2((aygPrice / naygPrice));\r\n      setKonstant(konstant);\r\n      const estAygSwap = inputAygSwap * konstant;\r\n      setEstAygSwap(web2(estAygSwap));\r\n      setTradingFees(web2(estAygSwap * 0.03))\r\n      const estNaygSwap = inputNaygSwap / konstant;\r\n      setEstNaygSwap(web2(estNaygSwap));\r\n      setTradingFeesN(web2(estNaygSwap * 0.03))\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n//============================================== SWAP =================================================\r\n  \r\n\r\n  const handleSwapAYG = async () => {\r\n    await contractAyg.methods.approve(addressPoolSwap, Web3.utils.toWei(inputAygSwap)).send({from: accounts[0]});\r\n    await contractPoolSwap.methods.swapPoolAyg(Web3.utils.toWei(inputAygSwap)).send({from: accounts[0]});\r\n  }\r\n\r\n  const handleSwapNAYG = async () => {\r\n    await contractNayg.methods.approve(addressPoolSwap, Web3.utils.toWei(inputNaygSwap)).send({from: accounts[0]});\r\n    await contractPoolSwap.methods.swapPoolNayg(Web3.utils.toWei(inputNaygSwap)).send({from: accounts[0]});\r\n  }\r\n\r\n//============================================= VAULT ================================================\r\n\r\n\r\nconst handleInputVault = event => {\r\n  setInputVault(event.target.value);\r\n}\r\n\r\nconst handleVaultMint = async event => {\r\n  event.preventDefault();\r\n  try {\r\n    const amount = Web3.utils.toWei(inputVault);\r\n    await contractVault.methods.vaultDeposit(amount.toString()).send({from: accounts[0], value: amount});\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nconst handleVaultBurn = async event => {\r\n  event.preventDefault();\r\n  try {\r\n    const amount = Web3.utils.toWei(inputVault);\r\n    const receipt = await contractVault.methods.vaultWithdraw(amount.toString()).send({from: accounts[0]});\r\n    console.log(receipt);\r\n  } catch(err) {\r\n    console.log(err)\r\n  }\r\n  }\r\n\r\n// const handlePriceFeed = async event => {\r\n//   event.preventDefault();\r\n//   try {\r\n//     const ethPrice = await contractVault.methods.getLatestPriceEth().call({from: accounts[0]});\r\n//     setEthPrice(web2(Web3.utils.fromWei(ethPrice)));\r\n//     const aygPrice = await contractVault.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n//     setAygPrice(web2(Web3.utils.fromWei(aygPrice)));\r\n//   } catch(err) {\r\n//     console.log(err)\r\n//   }\r\n// }\r\n\r\n//============================================= UPDATE =================================================\r\n\r\n  const update = async () => {\r\n    try {\r\n\r\n    const aygPrice = await contractPoolSwap.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n    const naygPrice = await contractPoolSwap.methods.getLatestPriceLinkProxy().call({from: accounts[0]});\r\n    setAygPrice(web2((Web3.utils.fromWei(aygPrice))));\r\n    setNaygPrice(web2(Web3.utils.fromWei(naygPrice)));\r\n    const konstant = web2((aygPrice / naygPrice));\r\n    setKonstant(konstant);\r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }\r\n\r\n//================================================ UI ======================================================\r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      <Container disableGutters maxWidth=\"xl\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\r\n            VAULT & SWAP\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">Provide ETH as collateral to mint AYG </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">Swap on our protocol between AYG and NAYG</Typography>\r\n        <br />\r\n        <Grid item xs={12} container spacing={8} justifyContent=\"center\">\r\n          <Grid item xs={4}>\r\n            <Card item xs={3} marginTop={5}>\r\n              <br />\r\n              <Typography variant=\"h4\">ETH VAULT</Typography>\r\n              <Typography variant=\"h6\" align=\"center\" color=\"text.secondary\" component=\"p\">Mint AYG by providing ETH as collateral</Typography>\r\n              <br />\r\n              <TextField label=\"Amount\" variant=\"filled\" value={inputVault} onChange={handleInputVault}/>\r\n              <br />\r\n              <br />\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleVaultMint}>Mint AYG</Button>\r\n              <span> </span>\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleVaultBurn}>Burn AYG</Button>\r\n              <br />\r\n              <br />\r\n              <Typography>Price of ETH: {ethPrice} $</Typography>\r\n              <Typography>Price of AYG: {aygPrice} $</Typography>\r\n              <br />\r\n              <Typography>Collateral needed to mint AYG: <strong>200%</strong></Typography>\r\n              <br />\r\n              <Typography>For 1 ETH, you will get: {web2(ethPrice / aygPrice /2)} AYG</Typography>\r\n              <Typography>For 1 AYG, you will get back: {web2(aygPrice / ethPrice *2)} ETH</Typography>\r\n              <br />\r\n              <Button size=\"large\" variant=\"contained\" onClick={handlePriceFeed}>Get latest mint / burn rate</Button>\r\n              <br />\r\n              <br />\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Card >\r\n              <br />\r\n                <Typography variant=\"h4\">Swap AYG and NAYG</Typography>\r\n                <br />\r\n                <TextField label=\"Enter AYG amount\" variant=\"filled\" value={inputAygSwap} onChange={handleInputAyg}/>\r\n                <br />\r\n                <br />\r\n                <Typography >You will get {web2(estAygSwap - tradingFees)} NAYG</Typography>\r\n                <Typography >Trading fees {tradingFees} NAYG</Typography>\r\n                <br />\r\n                <Button size=\"large\" variant=\"contained\"onClick={handlePriceFeed}> Estimation </Button>\r\n                <span> </span>\r\n                <Button size=\"large\" variant=\"contained\"onClick={handleSwapAYG}> SWAP AYG </Button>\r\n                <br />\r\n                <br />\r\n                <TextField label=\"Enter NAYG amount\" variant=\"filled\" value={inputNaygSwap} onChange={handleInputNayg}/>\r\n                <br />\r\n                <br />\r\n                <Typography >You will get {web2(estNaygSwap - tradingFeesN)} AYG</Typography>\r\n                <Typography >Trading fees {tradingFeesN} AYG</Typography>\r\n                <br />\r\n                <Button size=\"large\" variant=\"contained\"onClick={handlePriceFeed}> Estimation </Button>\r\n                <span> </span>\r\n                <Button size=\"large\" variant=\"contained\" onClick={handleSwapNAYG}> SWAP NAYG </Button>\r\n                <br />\r\n                <br />         \r\n            </Card >\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Card item xs={3} marginTop={5}>\r\n              <br />\r\n              <Typography variant=\"h4\">Swap ETH for AYG</Typography>\r\n              <Uniswap />\r\n              <br />\r\n            </Card>\r\n            <br />\r\n          </Grid>\r\n        </Grid>      \r\n      </Container>\r\n\r\n    </React.Fragment>\r\n\r\n);}\r\n\r\nexport default Swap;","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction createData(token1, token2, apy, totalStaked, link, click) {\r\n  return { token1, token2, apy, totalStaked, link, click };\r\n}\r\n\r\nconst rows = [\r\n  createData('ayg', 'ayg', 0, 0, '/StakeManage/AYG', 'Stake AYG'),\r\n  createData('LP Token', 'ayg', 0, 0, '/StakeManage/LP', 'Stake LP token'),\r\n];\r\n\r\nfunction DrawIcoToken({ alt, code }) {\r\n  const href= `ico_${code}.png`;\r\n  const CODE = code.toUpperCase();\r\n//  return <Avatar alt={alt} src={href} />;\r\n  return <Chip\r\n    avatar={<Avatar alt={alt} src={href} />}\r\n    label={CODE}\r\n    variant=\"outlined\"\r\n  />\r\n}\r\n\r\nfunction Stake() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          STAKE\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Stake to earn token !\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Box>\r\n          <FormControlLabel\r\n            value=\"bottom\"\r\n            control={<Switch color=\"primary\" />}\r\n            label=\"Only STAKED\"\r\n            labelPlacement=\"bottom\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Stake</TableCell>\r\n                  <TableCell>Staked</TableCell>\r\n                  <TableCell>Earn</TableCell>\r\n                  <TableCell>Earned</TableCell>\r\n                  <TableCell>APY&nbsp;(%)</TableCell>\r\n                  <TableCell>Liquidity&nbsp;($)</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {rows.map((row) => (\r\n                  <TableRow\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <DrawIcoToken alt={row.token1} code={row.token1} />\r\n                    </TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <DrawIcoToken alt={row.token2} code={row.token2} />\r\n                    </TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0 %</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={(e) => {\r\n                          navigate(`${row.link}`);\r\n                        }}\r\n                      >\r\n                        {row.click}\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n        </Box>\r\n      </Container>\r\n\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default Stake;\r\n","// Import NPM\r\nimport React, { useEffect, useState } from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Web3 from \"web3\";\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Button from '@mui/material/Button';\r\nimport IconApprove from '@mui/icons-material/AssignmentTurnedIn';\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\n// Import Recharts UI\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nfunction DrawIcoToken({ alt, code }) {\r\n  const href= `../ico_${code}.png`;\r\n  const CODE = code.toUpperCase();\r\n  return <Chip\r\n    avatar={<Avatar alt={alt} src={href} />}\r\n    label={CODE}\r\n    variant=\"outlined\"\r\n  />\r\n}\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction StakeManage() {\r\n  const navigate = useNavigate();\r\n\r\n  const { state: { contractAyg, contractStaking, contractVault, accounts, addressStaking } } = useEth();\r\n\r\n  const [alignment, setAlignment] = React.useState('stake');\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [inputValue2, setInputValue2] = useState(0);\r\n  const [totalSupplyAYG, setTotalSupplyAYG] = useState(0);\r\n  const [yourSupplyAYG, setYourSupplyAYG] = useState(0);\r\n  const [yourEarnedAYG, setYourEarnedAYG] = useState(0);\r\n  const [poolUsdValue, setPoolUsdValue] = useState(0);\r\n  const [moveStakingAYG, setDataStakingAYG] = useState([]);\r\n//  const [nbStakAYG, setNbStakAYG] = useState(0);\r\n  const [moveUnstakingAYG, setDataUnstakingAYG] = useState([]);\r\n//  const [nbUnstakAYG, setNbUnstakAYG] = useState(0);\r\n  const [graphStakingAYG, setDataGraphAYG] = useState([]);\r\n  const [aygPrice, setAygPrice] = useState();\r\n  const [ethPrice, setEthPrice] = useState();\r\n\r\n  const [yourAprAYG, setYourAprAyg] = useState(0);\r\n  \r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if(contractAyg){\r\n    async function fetchData(){\r\n        try {\r\n          updateAYG(); \r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n\r\n//  const [counter, setCounter] = useState(0)\r\n  useEffect(() => {\r\n    let interval\r\n    const updateCounter = () => {\r\n      //setCounter(currentValue => currentValue + 1)\r\n      updateAYG();\r\n    }\r\n    interval = setInterval(() => {\r\n      updateCounter()\r\n    }, 10000)\r\n    return () => {\r\n      // Clear the interval when component is unmounted\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  function web2(x) {\r\n    return Number.parseFloat(x).toFixed(2);\r\n  }\r\n\r\n\r\n// =================================== STAKING SC CALL =======================================\r\n\r\n\r\n  // staking/unstaking amount enterered by the user\r\n  const handleInputChange = event => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  const handleInputChange2 = event => {\r\n    setInputValue2(event.target.value);\r\n  }\r\n\r\n  // Calling the stakeAyg function on the Staking smart contract\r\n    const handleStake = async () => {\r\n      await contractAyg.methods.approve(addressStaking, Web3.utils.toWei(inputValue)).send({from: accounts[0]});\r\n      await contractStaking.methods.stake(Web3.utils.toWei(inputValue)).send({from: accounts[0]})\r\n        try{\r\n          updateAYG();   \r\n        } catch(err) {\r\n          console.log(err);\r\n        };\r\n    }\r\n\r\n  // Calling the unstakingAyg function to unstake the token on the Staking contract\r\n  const handleUnstake = async () => {\r\n    await contractStaking.methods.withdraw(Web3.utils.toWei(inputValue)).send({from: accounts[0]});\r\n    try {\r\n    await updateAYG();    \r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }\r\n\r\n  const getRewardAYG = async () => {\r\n    try {\r\n    await contractStaking.methods.getReward().send({ from: accounts[0] });\r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }\r\n\r\n  const exit = async () => {\r\n    try {\r\n    await contractStaking.methods.exit().send({ from: accounts[0] })\r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }\r\n\r\n//============================= UPDATE STATE ====================================\r\n\r\n  const updateAYG = async () => {\r\n    try {\r\n      const totalSupplyAYG = await contractStaking.methods.totalSupply().call({ from: accounts[0] });\r\n      setTotalSupplyAYG(Web3.utils.fromWei(totalSupplyAYG));\r\n\r\n      const yourSupplyAYG = await contractStaking.methods.balanceOf(accounts[0]).call({from: accounts[0]});\r\n      setYourSupplyAYG(Web3.utils.fromWei(yourSupplyAYG));\r\n\r\n      const yourEarnedAYG = await contractStaking.methods.earned(accounts[0]).call({from: accounts[0]});\r\n      setYourEarnedAYG(Web3.utils.fromWei(yourEarnedAYG));\r\n\r\n      const aygPrice = await contractVault.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n      setAygPrice(web2((Web3.utils.fromWei(aygPrice))));\r\n\r\n      const ethPrice = await contractVault.methods.getLatestPriceEth().call({from: accounts[0]});\r\n      setEthPrice(web2(Web3.utils.fromWei(ethPrice)));\r\n\r\n      const poolUsdValue = web2(aygPrice * totalSupplyAYG / 10**36);\r\n      setPoolUsdValue(poolUsdValue);\r\n\r\n      const yourAprAgy = await contractVault.methods.getMyStakingApr().call({from: accounts[0]});\r\n      setYourAprAyg(Web3.utils.fromWei(yourAprAgy));\r\n\r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n    try {\r\n    contractStaking.getPastEvents('Staked', { fromBlock: 0, toBlock: 'latest' })\r\n    .then((results) => {\r\n      let supplyTotal = 0;\r\n      let moveStakingAYG = [];\r\n//        let graphTokenAYG = [];\r\n      results.forEach(async (result) => {\r\n\r\n        moveStakingAYG.push({ blockNumber: result.blockNumber, amount: result.returnValues.amount, addr: result.returnValues.user });\r\n\r\n        supplyTotal = result.returnValues.amount + supplyTotal;\r\n        graphStakingAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: result.returnValues.amount, reward: 0  });\r\n        setDataGraphAYG(graphStakingAYG);\r\n\r\n      })\r\n      setDataStakingAYG(moveStakingAYG);\r\n//        setNbStakAYG(results.length);\r\n\r\n      console.log(moveStakingAYG)\r\n      console.log(graphStakingAYG)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  \r\n  try {\r\n      contractStaking.getPastEvents('Withdrawn', { fromBlock: 0, toBlock: 'latest' })\r\n      .then((results) => {\r\n        let moveUnstakingAYG = [];\r\n        results.forEach(async (result) => {\r\n\r\n          moveUnstakingAYG.push({ blockNumber: result.blockNumber, amount: -result.returnValues.amount, addr: result.returnValues.user });\r\n/*\r\n          supplyTotal = result.returnValues.amount/1000000000000000000 + supplyTotal;\r\n          switch (result.returnValues.methode) {\r\n            case 'getFaucet':\r\n              graphTokenAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: result.returnValues.amount/1000000000000000000, reward: 0  });\r\n              break;\r\n            case 'getReward':\r\n              graphTokenAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: 0, reward: result.returnValues.amount/1000000000000000000  });\r\n              break;\r\n            default:\r\n              console.log(`Sorry !`);\r\n          }\r\n          setDataGraphAYG(graphTokenAYG);\r\n*/\r\n        })\r\n        setDataUnstakingAYG(moveUnstakingAYG);\r\n//        setNbUnstakAYG(results.length);\r\n\r\n        console.log(moveUnstakingAYG)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  \r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          STAKE AYG\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Informations\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n{/*================================================= STAKING DATA ============================================================ */}    \r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ width: '100%' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              Stake&nbsp;<DrawIcoToken alt=\"ayg\" code=\"ayg\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Earn&nbsp;<DrawIcoToken alt=\"ayg\" code=\"ayg\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;APR&nbsp;<Chip label=\"0.00 %\" variant=\"outlined\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                You STAKED\r\n                <h2>{yourSupplyAYG} $AYG</h2>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                You EARNED\r\n                <h2>{yourEarnedAYG} $AYG</h2>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                Total STAKING Supply\r\n                <h2>{totalSupplyAYG}$AYG or {poolUsdValue} USD</h2>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                APR\r\n                <h2>{yourAprAYG} %</h2>\r\n              </Item>\r\n            </Grid>\r\n\r\n {/*============================================= SC FRONT INTERACTION ========================================================= */}\r\n           \r\n            <Grid item xs={3}>\r\n              <Item>\r\n                <h3>STAKE YOUR AYG</h3> \r\n                <TextField id=\"filled-basic\" label=\"Amount\" variant=\"filled\" value={inputValue} onChange={handleInputChange}/>\r\n                <br />\r\n                <br />\r\n                <ToggleButtonGroup\r\n                  color=\"primary\"\r\n                  value={alignment}\r\n                  exclusive\r\n                  onChange={handleChange}\r\n                >\r\n                  <ToggleButton value=\"stake\" onClick={handleStake}>STAKE</ToggleButton>\r\n                  <ToggleButton value=\"unstake\" onClick={handleUnstake}>UNSTAKE</ToggleButton>\r\n\r\n                </ToggleButtonGroup>\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconApprove />}\r\n                  onClick={getRewardAYG}\r\n                >\r\n                  getReward ONLY\r\n                </Button>\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconApprove />}\r\n                  onClick={exit}\r\n                >\r\n                  getReward & unStakingAll\r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Item>\r\n              <br />\r\n              <br />\r\n              <Item>\r\n                <h3>TOOLS</h3>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconApprove />}\r\n                  onClick={updateAYG}  \r\n                >\r\n                  update_AYG\r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n\r\n {/*============================================= GRAPH ========================================================= */}\r\n\r\n            <Grid item xs={6}>\r\n              <Item>\r\n                <h3>GRAPH STAKING</h3>\r\n                <ResponsiveContainer width='100%' aspect={4.0/1.0}>\r\n                  <BarChart data={graphStakingAYG}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"supply\" stackId=\"a\" fill=\"#8884d8\" />\r\n                    <Bar dataKey=\"faucet\" stackId=\"a\" fill=\"#82ca9d\" />\r\n                    <Bar dataKey=\"reward\" stackId=\"a\" fill=\"#df99a1\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <Box sx={{ width: '100%' }}>\r\n                  <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"Staking - Unstaking\">\r\n                      <Tab label=\"Last Staking\" {...a11yProps(0)} />\r\n                      <Tab label=\"Last Unstaking\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                  </Box>\r\n                  <TabPanel value={value} index={0}>\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>Block#</TableCell>\r\n                            <TableCell>Amount</TableCell>\r\n                            <TableCell>Address</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {moveStakingAYG.map((row) => (\r\n                            <TableRow\r\n                              key={row.blockNumber}\r\n                              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                              <TableCell component=\"th\" scope=\"row\">{row.blockNumber}</TableCell>\r\n                              <TableCell>{row.amount}</TableCell>\r\n                              <TableCell>{row.addr}</TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                  <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>Block#</TableCell>\r\n                            <TableCell>Amount</TableCell>\r\n                            <TableCell>Address</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {moveUnstakingAYG.map((row) => (\r\n                            <TableRow\r\n                              key={row.blockNumber}\r\n                              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                              <TableCell component=\"th\" scope=\"row\">{row.blockNumber}</TableCell>\r\n                              <TableCell>{row.amount}</TableCell>\r\n                              <TableCell>{row.addr}</TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                </Box>\r\n              </Item>\r\n            </Grid>\r\n\r\n {/*============================================= GRAPH ========================================================= */}\r\n\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                <h3>STACKING SIMULATION</h3>\r\n                <TextField id=\"filled-basic\" label=\"Amount\" variant=\"filled\" value={inputValue2} onChange={handleInputChange2}/>\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<LaunchIcon />}\r\n                  onClick={(e) => {\r\n                    navigate('/NFT');\r\n                  }}\r\n                >\r\n                  Get NFT\r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default StakeManage;","import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Card from '@mui/material/Card';\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\n\r\nfunction StakeManageLP() {\r\n\r\n  const { state: { contractLPToken, contractPoolSwap, addressPoolSwap, accounts } } = useEth();\r\n  const [inputStake, setInputStake] = useState(\"\");\r\n  const [inputStakeId, setInputStakeId] = useState(\"\");\r\n\r\n  const handleInputStake = event => {\r\n    setInputStake(event.target.value);\r\n  }\r\n\r\n  const handleInputStakeId = event => {\r\n    setInputStakeId(event.target.value);\r\n  }\r\n\r\n//============================================ STAKE ==================================================\r\n\r\nconst handleStakeLP = async () => {\r\n  await contractLPToken.methods.approve(addressPoolSwap, Web3.utils.toWei(inputStake)).send({from: accounts[0]});\r\n  await contractPoolSwap.methods.stake(Web3.utils.toWei(inputStake)).send({from: accounts[0]});\r\n}\r\n\r\nconst handleUnstakeLP = async () => {\r\n  await contractPoolSwap.methods.unstake(Web3.utils.toWei(inputStakeId)).send({from: accounts[0]});\r\n}\r\n\r\n\r\n//================================================ UI ======================================================\r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\r\n            STAKE LP\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">   \r\n            Stake your LP token to earn staking rewards\r\n        </Typography>\r\n      </Container>\r\n      <Grid item xs={12} container spacing={4} justifyContent=\"center\">\r\n        <Grid item xs={4}>\r\n          <Card>\r\n              <br />\r\n              <Typography variant=\"h4\">Stake your LP</Typography>\r\n              <Typography color=\"text.secondary\">And earn 155 000% APR</Typography>\r\n              <br />\r\n              <TextField label=\"Amount\" variant=\"filled\" value={inputStake} onChange={handleInputStake}/>\r\n              <br /><br />\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleStakeLP}>Stake LP Token</Button>\r\n              <br /><br />\r\n              <TextField label=\"Enter your stake ID\" variant=\"filled\" value={inputStakeId} onChange={handleInputStakeId}/>\r\n              <br /><br />\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleUnstakeLP}>Unstake LP Token</Button>\r\n              <br /><br />\r\n          </Card>\r\n        </Grid>\r\n      </Grid>      \r\n      \r\n    </React.Fragment>\r\n\r\n);}\r\n\r\nexport default StakeManageLP;","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport IconAdd from '@mui/icons-material/Add';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction createData(token1, token2, poolValue, volume24, apr) {\r\n  return { token1, token2, poolValue, volume24, apr };\r\n}\r\n\r\nconst rows = [\r\n  createData('AYG', 'NAYG', 0, 0, 0),\r\n];\r\n\r\nfunction DrawIcoToken({ alt, code }) {\r\n  const href= `ico_${code}.png`;\r\n  const CODE = code.toUpperCase()+\" (50%)\";\r\n//  return <Avatar alt={alt} src={href} />;\r\n  return <Chip\r\n    avatar={<Avatar alt={alt} src={href} />}\r\n    label={CODE}\r\n    variant=\"outlined\"\r\n  />\r\n}\r\n\r\nfunction Pool() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          POOL\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Nos POOLS de rendement\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={(e) => {\r\n              console.log(e.currentTarget.dataset.buttonKey);\r\n              alert(\"Coming Soon !\");\r\n//              navigate('/PoolAdd');\r\n            }}\r\n          >\r\n            Créer une POOL\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Pair</TableCell>\r\n                  <TableCell align=\"right\">Pool value&nbsp;($)</TableCell>\r\n                  <TableCell align=\"right\">Volume&nbsp;(24h)</TableCell>\r\n                  <TableCell align=\"right\">APR&nbsp;(%)</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow\r\n                    key={row.name}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    onClick={(e) => {\r\n                      console.log(\"Detected Row Click\");\r\n                      console.log(e.currentTarget.dataset.buttonKey);\r\n                      navigate('/PoolManage');\r\n                    }}\r\n        \r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <DrawIcoToken alt={row.token1} code={row.token1} />\r\n                        <IconButton aria-label=\"more\" size=\"small\">\r\n                          <IconAdd fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        <DrawIcoToken alt={row.token2} code={row.token2} />\r\n                      </Stack>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.poolValue}</TableCell>\r\n                    <TableCell align=\"right\">{row.volume24}</TableCell>\r\n                    <TableCell align=\"right\">{row.apr}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      startIcon={<IconAdd />}\r\n                      onClick={(e) => {\r\n                        navigate('/PoolManage');\r\n                      }}\r\n                    >\r\n                      Add liquidity\r\n                    </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default Pool;\r\n","import * as React from 'react';\n\n\nimport Container from '@mui/material/Container';\n\nimport Typography from '@mui/material/Typography';\n\n\n\nfunction PoolAdd() {\n\n  return (\n    <React.Fragment>\n      {/* Head */}\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n        >\n          POOL\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\n          Ajouter une nouvelle POOL\n        </Typography>\n      </Container>\n      {/* End Head */}\n    </React.Fragment>    \n  );\n}\n\nexport default PoolAdd;\n","import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Card from '@mui/material/Card';\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\n\r\nfunction Pool() {\r\n\r\n  const { state: { contractAyg, contractNayg, contractLPToken, contractPoolSwap, addressPoolSwap, accounts } } = useEth();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [aygPrice, setAygPrice] = useState();\r\n  const [naygPrice, setNaygPrice] = useState();\r\n  const [konstant, setKonstant] = useState();\r\n\r\n  useEffect(() => {\r\n    if(contractAyg){\r\n    async function fetchData(){\r\n      try {\r\n        update(); \r\n      } catch(err) {\r\n          console.error(err)\r\n      }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  function web2(x) {\r\n    return Number.parseFloat(x).toFixed(2);\r\n  }\r\n\r\n  const handleInputValue = event => {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  const handleDepositPool = async () => {\r\n    const aygPrice = await contractPoolSwap.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n    const naygPrice = await contractPoolSwap.methods.getLatestPriceLinkProxy().call({from: accounts[0]});\r\n    const konstant = web2((aygPrice / naygPrice));\r\n    const naygAmount = web2((inputValue * konstant));\r\n    await contractAyg.methods.approve(addressPoolSwap, Web3.utils.toWei(inputValue)).send({from: accounts[0]});\r\n    await contractNayg.methods.approve(addressPoolSwap, Web3.utils.toWei(naygAmount)).send({from: accounts[0]});\r\n    await contractPoolSwap.methods.depositPool(Web3.utils.toWei(inputValue), Web3.utils.toWei(naygAmount)).send({from: accounts[0]});\r\n  }\r\n\r\n  const handleWithdrawPool = async () => {\r\n    await contractLPToken.methods.approve(addressPoolSwap, Web3.utils.toWei(inputValue)).send({from: accounts[0]});\r\n    await contractPoolSwap.methods.withdrawPool(Web3.utils.toWei(inputValue)).send({from: accounts[0]});\r\n  }\r\n\r\n  const handlePriceFeed = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const naygPrice = await contractPoolSwap.methods.getLatestPriceLinkProxy().call({from: accounts[0]});\r\n      setNaygPrice(web2(Web3.utils.fromWei(naygPrice)));\r\n      const aygPrice = await contractPoolSwap.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n      setAygPrice(web2(Web3.utils.fromWei(aygPrice)));\r\n      const konstant = web2((aygPrice / naygPrice));\r\n      setKonstant(konstant);\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n//============================================= UPDATE =================================================\r\n\r\n  const update = async () => {\r\n    try {\r\n\r\n    const aygPrice = await contractPoolSwap.methods.getLatestPriceBnbProxy().call({from: accounts[0]});\r\n    const naygPrice = await contractPoolSwap.methods.getLatestPriceLinkProxy().call({from: accounts[0]});\r\n    setAygPrice(web2((Web3.utils.fromWei(aygPrice))));\r\n    setNaygPrice(web2(Web3.utils.fromWei(naygPrice)));\r\n    const konstant = web2((aygPrice / naygPrice));\r\n    setKonstant(konstant);\r\n    } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }\r\n\r\n//================================================ UI ======================================================\r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\r\n             LIQUIDITY POOL\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n            Provide liquidity to our protocol and earn trading fees     \r\n        </Typography>\r\n      </Container>\r\n      <Grid item xs={12} container spacing={4} justifyContent=\"center\">\r\n  \r\n        <Grid item xs={6}>\r\n          <Card>\r\n              <br />\r\n              <Typography variant=\"h4\">AYG/NAYG Pool</Typography>\r\n              <br />\r\n              <TextField label=\"Enter the amount to pool\" variant=\"filled\" value={inputValue} onChange={handleInputValue}/>\r\n              <br />\r\n              <br />\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleDepositPool}>Deposit pool</Button>\r\n              <span> </span>\r\n              <Button size=\"large\" variant=\"contained\" onClick={handleWithdrawPool}>Withdraw </Button>\r\n              <br />\r\n              <br />\r\n              <Typography>Price of AYG: <strong>${aygPrice}</strong> / Price of NAYG: <strong>${naygPrice}</strong></Typography>\r\n              <Typography></Typography>\r\n              <br />\r\n              <Typography>Pool <strong>1 AYG</strong> with <strong>{konstant} NAYG</strong></Typography>\r\n              <br />            \r\n              <Button size=\"large\" variant=\"contained\" onClick={handlePriceFeed}>Get latest pool ratio</Button>\r\n              <br />\r\n              <br />\r\n          </Card>          \r\n        </Grid>\r\n      </Grid>      \r\n      \r\n    </React.Fragment>\r\n\r\n);}\r\n\r\nexport default Pool;","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction NFTmint() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          NFT\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Are you ready ?\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Item>\r\n                <h2>Staking NFT</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 300,\r\n                    width: 400,\r\n                    maxHeight: { xs: 100, md: 300 },\r\n                    maxWidth: { xs: 133, md: 400 },\r\n                  }}\r\n                  alt=\"Staking NFT\"\r\n                  src=\"./../pic_staking.gif\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Staking');\r\n                  }}\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Staking');\r\n                  }}\r\n                >\r\n                  Go !\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Item>\r\n                <h2>Minting NFT</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 300,\r\n                    width: 400,\r\n                    maxHeight: { xs: 100, md: 300 },\r\n                    maxWidth: { xs: 133, md: 400 },\r\n                  }}\r\n                  alt=\"Minting NFT\"\r\n                  src=\"./../pic_mint.gif\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Mint');\r\n                  }}\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Mint');\r\n                  }}\r\n                >\r\n                  Go !\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default NFTmint;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport GlobalStyles from '@mui/material/GlobalStyles';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\nfunction DrawLinkAHrefExplorer(props) {\r\n  const url = `https://kovan.etherscan.io/address/${props.addr}`;\r\n  return <a href={url} target=\"_blank\" rel=\"noreferrer\">{props.addr}</a>\r\n}\r\n\r\n\r\nfunction NFTmint() {\r\n  const navigate = useNavigate();\r\n\r\n  const { state: { contractAyg, contractNftayg, accounts } } = useEth();\r\n\r\n  const [addr_NFTAYG, setAddr_NFTAYG] = useState(contractNftayg._address);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [mintButton, setMintButton] = useState(false);\r\n  const [mintStatus, setMintStatus] = useState(\"MINT\");\r\n\r\n\r\n  useEffect(() => {\r\n    if(contractAyg){\r\n    async function fetchData(){\r\n        try {\r\n          updateData();\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  \r\n  const mint1 = async () => {\r\n    contractNftayg.methods.mint1(accounts[0]).send({value: 1000000000000000, from: accounts[0]})\r\n      .then((handleStake) => {\r\n        console.log(\"handleStake = \"+handleStake);\r\n        updateData();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const mint2 = async () => {\r\n    contractNftayg.methods.mint2(accounts[0]).send({value: 2000000000000000, from: accounts[0]})\r\n      .then((handleStake) => {\r\n        console.log(\"handleStake = \"+handleStake);\r\n        updateData();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const mint3 = async () => {\r\n    contractNftayg.methods.mint3(accounts[0]).send({value: 3000000000000000, from: accounts[0]})\r\n      .then((handleStake) => {\r\n        console.log(\"handleStake = \"+handleStake);\r\n        updateData();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const updateData = async () => {\r\n\r\n    contractNftayg.methods.totalSupply().call({from: accounts[0]})\r\n      .then((totalSupply) => {\r\n        setTotalSupply(totalSupply);\r\n        console.log(\"totalSupply = \"+totalSupply);\r\n        if(totalSupply==20)\r\n        {\r\n          setMintStatus(\"SOLD OUT\");\r\n          setMintButton(\"true\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\r\n      <CssBaseline />\r\n\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          NFT Mint\r\n        </Typography>\r\n\r\n        <Typography>\r\n          CONTRACT ERC721&nbsp;:&nbsp;\r\n          <DrawLinkAHrefExplorer\r\n            addr={addr_NFTAYG}\r\n          />\r\n        </Typography>\r\n        <br />\r\n\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Grace au staking de NFTs<br />vous obtenez du <strong>$nAYG</strong> en récompense.<br />\r\n          La supply totale est de <strong>20</strong> NFTs tout type confondu.<br />\r\n          <strong>{totalSupply}/20</strong> NFTs ont été déjà minté par les utilisateurs !\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={2} alignItems=\"flex-end\">\r\n            <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n          >\r\n            <Card>\r\n              <CardContent\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                    theme.palette.mode === 'light'\r\n                      ? theme.palette.grey[200]\r\n                      : theme.palette.grey[700],\r\n                }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 700,\r\n                    width: 500,\r\n                    maxHeight: { xs: 233, md: 350 },\r\n                    maxWidth: { xs: 166, md: 250 },\r\n                  }}\r\n                  alt=\"Captain Alyra NFT\"\r\n                  src=\"./../ayg-nft_captain-alyra_ban.png\"\r\n                />\r\n              </CardContent>\r\n              <CardContent>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'baseline',\r\n                    mb: 2,\r\n                  }}\r\n                >\r\n                  <Typography component=\"h2\" variant=\"h3\" color=\"text.primary\">\r\n                    0.001\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    /$kETH\r\n                  </Typography>\r\n                </Box>\r\n                <ul>\r\n                    <Typography\r\n                      component=\"li\"\r\n                      variant=\"subtitle1\"\r\n                      align=\"center\"\r\n                    >\r\n                      Obtenez <strong>+10%</strong> $nAYG <br />avec le staking de ce NFT.\r\n                    </Typography>\r\n                </ul>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  disabled={mintButton}\r\n                  size=\"large\"\r\n                  onClick={mint1}\r\n                >\r\n                  {mintStatus}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n            <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n          >\r\n            <Card>\r\n              <CardContent\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                    theme.palette.mode === 'light'\r\n                      ? theme.palette.grey[200]\r\n                      : theme.palette.grey[700],\r\n                }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 700,\r\n                    width: 500,\r\n                    maxHeight: { xs: 233, md: 350 },\r\n                    maxWidth: { xs: 166, md: 250 },\r\n                  }}\r\n                  alt=\"Super Alyra NFT\"\r\n                  src=\"./../ayg-nft_super-alyra_ban.png\"\r\n                />\r\n              </CardContent>\r\n              <CardContent>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'baseline',\r\n                    mb: 2,\r\n                  }}\r\n                >\r\n                  <Typography component=\"h2\" variant=\"h3\" color=\"text.primary\">\r\n                    0.002\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    /$kETH\r\n                  </Typography>\r\n                </Box>\r\n                <ul>\r\n                    <Typography\r\n                      component=\"li\"\r\n                      variant=\"subtitle1\"\r\n                      align=\"center\"\r\n                    >\r\n                      Obtenez <strong>+30%</strong> $nAYG <br />avec le staking de ce NFT.\r\n                    </Typography>\r\n                </ul>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  disabled={mintButton}\r\n                  size=\"large\"\r\n                  onClick={mint2}\r\n                >\r\n                  {mintStatus}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n            <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n          >\r\n            <Card>\r\n              <CardContent\r\n                sx={{\r\n                  backgroundColor: (theme) =>\r\n                    theme.palette.mode === 'light'\r\n                      ? theme.palette.grey[200]\r\n                      : theme.palette.grey[700],\r\n                }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 700,\r\n                    width: 500,\r\n                    maxHeight: { xs: 233, md: 350 },\r\n                    maxWidth: { xs: 166, md: 250 },\r\n                  }}\r\n                  alt=\"Wonder Alyra NFT\"\r\n                  src=\"./../ayg-nft_wonder-alyra_ban.png\"\r\n                />\r\n              </CardContent>\r\n              <CardContent>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'baseline',\r\n                    mb: 2,\r\n                  }}\r\n                >\r\n                  <Typography component=\"h2\" variant=\"h3\" color=\"text.primary\">\r\n                    0.003\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    /$kETH\r\n                  </Typography>\r\n                </Box>\r\n                <ul>\r\n                    <Typography\r\n                      component=\"li\"\r\n                      variant=\"subtitle1\"\r\n                      align=\"center\"\r\n                    >\r\n                      Obtenez <strong>+50%</strong> $nAYG <br />avec le staking de ce NFT.\r\n                    </Typography>\r\n                </ul>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  disabled={mintButton}\r\n                  size=\"large\"\r\n                  onClick={mint3}\r\n                >\r\n                  {mintStatus}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Foot */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h4\"\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          Commencer le staking NFT ?\r\n        </Typography>\r\n        <Button\r\n          fullWidth variant=\"contained\"\r\n          size=\"large\"\r\n          onClick={(e) => {\r\n            navigate('/NFT/Staking');\r\n          }}\r\n        >\r\n          Let's go to make more money !\r\n        </Button>\r\n      </Container>\r\n      {/* End Foot */}\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NFTmint;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport GlobalStyles from '@mui/material/GlobalStyles';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\n\r\nimport useEth from \"../contexts/EthContext/useEth\";\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#DDD',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\nfunction NFTstaking() {\r\n\r\n  const { state: { contractNftayg, contractStakingNFT, accounts } } = useEth();\r\n\r\n  const [rewardsPerHour, setRewardsPerHour] = useState(0);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [tokenUnstakedByOwner, setTokenUnstakedByOwner] = useState([]);\r\n  const [rowUnstakedNFT, setRowUnstakedNFT] = useState([]);\r\n  const [rowStakedNFT, setRowStakedNFT] = useState([]);\r\n\r\n  \r\n  const getData = async () => {\r\n    contractStakingNFT.methods.rewardsPerHour().call({from: accounts[0]})\r\n    .then((rewardsPerHour) => {\r\n      rewardsPerHour = rewardsPerHour/10**18;\r\n      rewardsPerHour = Math.round(rewardsPerHour * 100) / 100;\r\n      setRewardsPerHour(rewardsPerHour);\r\n      console.log(\"rewardsPerHour=\"+rewardsPerHour);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }  \r\n\r\n  const getUnstakedNFT = async () => {\r\n\r\n    contractNftayg.methods.totalSupply().call({from: accounts[0]})\r\n    .then((totalSupply) => {\r\n      setTotalSupply(totalSupply);\r\n      console.log(\"totalSupply=\"+totalSupply);\r\n    \r\n      for(let i=0; i<totalSupply; i++) {\r\n        console.log(\"i=\"+i);\r\n        contractNftayg.methods.tokenOfOwnerByIndex(accounts[0], i).call({from: accounts[0]})\r\n        .then((tokenOfOwnerByIndex) => {\r\n          setTokenUnstakedByOwner(tokenUnstakedByOwner => [...tokenUnstakedByOwner, tokenOfOwnerByIndex]);\r\n          console.log(\"tokenOfOwnerByIndex = \"+tokenOfOwnerByIndex);\r\n\r\n          contractNftayg.methods.tokenURI(tokenOfOwnerByIndex).call({from: accounts[0]})\r\n          .then((tokenURI) => {\r\n            console.log(\"tokenURI = \"+tokenURI);\r\n\r\n            getDataFromTokenURI(tokenOfOwnerByIndex, tokenURI);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n          \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      }\r\n      console.log(\"totalSupply = \"+totalSupply);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n    console.log(\"tokenUnstakedByOwner = \"+tokenUnstakedByOwner);\r\n  }\r\n\r\n\r\n  const getStakedNFT = async () => {\r\n    contractStakingNFT.methods.tokenStakedByOwner(accounts[0]).call({from: accounts[0]})\r\n    .then((tokenStakedByOwner) => {\r\n      console.log(\"tokenStakedByOwner = \"+tokenStakedByOwner);\r\n\r\n      for(let i=0; i<tokenStakedByOwner.length; i++) {\r\n        console.log(tokenStakedByOwner[i]);\r\n        contractNftayg.methods.tokenURI(tokenStakedByOwner[i]).call({from: accounts[0]})\r\n          .then((tokenURI) => {\r\n            console.log(\"tokenURI = \"+tokenURI);\r\n            getDataFromTokenURI2(tokenStakedByOwner[i], tokenURI);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function getDataFromTokenURI(id, tokenURI) {\r\n    return fetch(tokenURI)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      let newNFT = createNFT(id, responseJson.name, responseJson.description, responseJson.image);\r\n      setRowUnstakedNFT(rowUnstakedNFT => [...rowUnstakedNFT, newNFT]);\r\n      console.log(\"rowUnstakedNFT = \"+rowUnstakedNFT);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  function getDataFromTokenURI2(id, tokenURI) {\r\n    return fetch(tokenURI)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      let newNFT = createNFT(id, responseJson.name, responseJson.description, responseJson.image);\r\n      setRowStakedNFT(rowUnstakedNFT => [...rowUnstakedNFT, newNFT]);\r\n      console.log(\"rowUnstakedNFT = \"+rowUnstakedNFT);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  function createNFT(id, name, description, image) {\r\n    return { id, name, description, image };\r\n  }\r\n\r\n \r\n  const updateData = async () => {\r\n    try {\r\n      await getData();\r\n      await getUnstakedNFT();\r\n      await getStakedNFT();\r\n\r\n      } catch(err) {\r\n        console.log(err);\r\n    };\r\n  }  \r\n\r\n  useEffect(() => {\r\n    if(contractNftayg){\r\n    async function fetchData(){\r\n        try {\r\n          updateData();\r\n        } catch(err) {\r\n          console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\r\n      <CssBaseline />\r\n\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          NFT Staking\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          Les reward de staking sont de : {rewardsPerHour} $nAYG / heure.\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Item>\r\n                <h1>NFT unstaked</h1>\r\n                {rowUnstakedNFT.map((row) => (\r\n                  <DrawBoxUnstakedNFT\r\n                  key={row.id}\r\n                  id={row.id}\r\n                  name={row.name}\r\n                  description={row.description}\r\n                  image={row.image}\r\n                  updateData={updateData}\r\n                  rowStakedNFT={rowStakedNFT}\r\n                  setRowStakedNFT={setRowStakedNFT}\r\n                  rowUnstakedNFT={rowUnstakedNFT}\r\n                  setRowUnstakedNFT={setRowUnstakedNFT}\r\n                  >\r\n                  </DrawBoxUnstakedNFT>\r\n                ))}\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Item>\r\n                <h1>NFT staked</h1>\r\n                {rowStakedNFT.map((row) => (\r\n                  <DrawBoxStakedNFT\r\n                  key={row.id}\r\n                  id={row.id}\r\n                  name={row.name}\r\n                  description={row.description}\r\n                  image={row.image}\r\n                  updateData={updateData}\r\n                  rowStakedNFT={rowStakedNFT}\r\n                  setRowStakedNFT={setRowStakedNFT}\r\n                  rowUnstakedNFT={rowUnstakedNFT}\r\n                  setRowUnstakedNFT={setRowUnstakedNFT}\r\n                  >\r\n                  </DrawBoxStakedNFT>\r\n                ))}\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nfunction DrawBoxUnstakedNFT(props) {\r\n  const { state: { contractNftayg, contractStakingNFT, accounts, addressStakingNFT } } = useEth();\r\n\r\n  const [tokenIds, setTokenIds] = useState([]);\r\n    \r\n  const doStakingNFT = async (e) => {\r\n    let tokenId = e.target.getAttribute(\"data-id\");\r\n    console.log(\"tokenId = \"+tokenId);\r\n\r\n    let tokenIds = [];\r\n    tokenIds.push(tokenId);\r\n    console.log(\"tokenIds2 = \"+tokenIds);\r\n\r\n    await contractNftayg.methods.approve(addressStakingNFT, tokenId).send({from: accounts[0]});\r\n\r\n    contractStakingNFT.methods.Stake(tokenIds).send({from: accounts[0]})\r\n      .then((Stake) => {\r\n        console.log(\"Stake = \"+Stake);\r\n\r\n        props.setRowStakedNFT([]);\r\n        props.setRowUnstakedNFT([]);\r\n        props.updateData();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card sx={{ display: 'flex' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ width: 300 }}\r\n          image={props.image}\r\n          alt=\"NFT\"\r\n        />\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent sx={{ flex: '1 0 auto' }}>\r\n            <Typography component=\"div\" variant=\"h5\" align=\"left\">\r\n              {props.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" align=\"left\">\r\n              NFT ID #{props.id}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" align=\"left\">\r\n              {props.description}\r\n            </Typography>\r\n          </CardContent>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button\r\n                data-id={props.id}\r\n                variant=\"outlined\"\r\n                startIcon={<UploadIcon />}\r\n                onClick={doStakingNFT}\r\n              >\r\n                Staking\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction DrawBoxStakedNFT(props) {\r\n  const { state: { contractStakingNFT, accounts } } = useEth();\r\n\r\n  const [earnedReward, setEarnedReward] = useState(0);\r\n  const [earnedBonus, setEarnedBonus] = useState(0);\r\n  const [earnedTotal, setEarnedTotal] = useState(0);\r\n  \r\n  const doUnstakingNFT = async (e) => {\r\n    let tokenId = e.target.getAttribute(\"data-id\");\r\n    let tokenIds = [];\r\n    tokenIds.push(tokenId);\r\n    console.log(\"tokenIds = \"+tokenIds);\r\n    contractStakingNFT.methods.unstake(tokenIds).send({from: accounts[0]})\r\n      .then((Unstake) => {\r\n        console.log(\"Unstake = \"+Unstake);\r\n        const id = e.target.getAttribute(\"data-id\")\r\n        props.setRowStakedNFT([]);\r\n        props.setRowUnstakedNFT([]);\r\n        props.updateData();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  const claimRewards = async (e) => {\r\n    let tokenId = e.target.getAttribute(\"data-id\");\r\n    let tokenIds = [];\r\n    tokenIds.push(tokenId);\r\n    console.log(\"tokenIds = \"+tokenIds);\r\n    contractStakingNFT.methods.claim(tokenIds).send({from: accounts[0]})\r\n      .then((claim) => {\r\n        console.log(\"claim = \"+claim);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  const updateRewards = async (e) => {\r\n    let earnedTotal = 0;\r\n    //let tokenId = e.target.getAttribute(\"data-id\");\r\n    let tokenId = props.id;\r\n    let tokenIds = [];\r\n    tokenIds.push(tokenId);\r\n    await contractStakingNFT.methods.getRewardAmount(accounts[0], tokenIds).call({from: accounts[0]})\r\n      .then((getRewardAmount) => {\r\n        getRewardAmount = getRewardAmount/10**18;\r\n        getRewardAmount = Math.round(getRewardAmount * 100) / 100;\r\n        setEarnedReward(getRewardAmount);\r\n        earnedTotal = earnedTotal+getRewardAmount;\r\n        setEarnedTotal(earnedTotal);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    await contractStakingNFT.methods.getBonusAmount(accounts[0], tokenIds).call({from: accounts[0]})\r\n      .then((getBonusAmount) => {\r\n        getBonusAmount = getBonusAmount/10**18;\r\n        getBonusAmount = Math.round(getBonusAmount * 100) / 100;\r\n        setEarnedBonus(getBonusAmount);\r\n        earnedTotal = earnedTotal+getBonusAmount;\r\n        earnedTotal = Math.round(earnedTotal * 100) / 100;\r\n        setEarnedTotal(earnedTotal);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(contractStakingNFT){\r\n    async function fetchData(){\r\n        try {\r\n          updateRewards();\r\n        } catch(err) {\r\n          console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  \r\n  useEffect(() => {\r\n    let interval\r\n    const updateCounter = () => {\r\n      updateRewards();\r\n    }\r\n    interval = setInterval(() => {\r\n      updateCounter()\r\n    }, 10000)\r\n    return () => {\r\n      // Clear the interval when component is unmounted\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card sx={{ display: 'flex' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ width: 300 }}\r\n          image={props.image}\r\n          alt=\"NFT\"\r\n        />\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent sx={{ flex: '1 0 auto' }}>\r\n            <Typography component=\"div\" variant=\"h5\" align=\"left\">\r\n              {props.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" align=\"left\">\r\n              NFT ID #{props.id}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" align=\"left\">\r\n              {props.description}\r\n            </Typography>\r\n            <Typography\r\n              align=\"left\"\r\n              >\r\n              Reward : {earnedReward} $nAYG<br />\r\n              Bonus  : {earnedBonus} $nAYG<br /><br />\r\n              <strong>TOTAL  : {earnedTotal} $nAYG</strong>\r\n            </Typography>\r\n          </CardContent>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\r\n            <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n                data-id={props.id}\r\n                variant=\"outlined\"\r\n                startIcon={<DownloadIcon />}\r\n                onClick={doUnstakingNFT}\r\n              >\r\n                Unstaking\r\n              </Button>\r\n              <Button\r\n                data-id={props.id}\r\n                variant=\"contained\"\r\n                endIcon={<AttachMoneyIcon />}\r\n                onClick={claimRewards}\r\n              >\r\n                Claim\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default NFTstaking;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Container from '@mui/material/Container';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'AYG-Labs © '}\r\n      <Link color=\"inherit\" href=\"https://www.alyra.fr/\" target=\"_blank\">\r\n        Promo Ropsten\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst footers = [\r\n  {\r\n    title: 'DApp',\r\n    links: [\r\n      {\r\n        title: 'Smarts Contracts & Docs',\r\n        url: '/SmartsContracts',\r\n      },\r\n      {\r\n        title: 'GitHub Readme',\r\n        url: 'https://github.com/bad4token/Projet4_AYG-Labs_DeFi',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'AYG-Labs',\r\n    links: [\r\n      {\r\n        title: 'About',\r\n        url: '/About',\r\n      },\r\n      {\r\n        title: 'Team',\r\n        url: '/Team',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      {/* Footer */}\r\n      <Container\r\n        maxWidth=\"md\"\r\n        component=\"footer\"\r\n        sx={{\r\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n          mt: 8,\r\n          py: [3, 6],\r\n        }}\r\n      >\r\n        <Grid container spacing={4} justifyContent=\"space-evenly\">\r\n          {footers.map((footer) => (\r\n            <Grid item xs={6} sm={3} key={footer.title}>\r\n              <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\r\n                {footer.title}\r\n              </Typography>\r\n                {footer.links.map((link) => (\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'center',\r\n                        typography: 'body1',\r\n                        '& > :not(style) + :not(style)': {\r\n                          ml: 2,\r\n                        },\r\n                      }}\r\n//                      onClick={preventDefault}\r\n                    >\r\n                    <Link href={link.url} variant=\"subtitle1\" color=\"text.secondary\">\r\n                      {link.title}\r\n                    </Link>\r\n                  </Box>\r\n                ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n      {/* End footer */}\r\n    </footer >\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\n\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n// Import SC & Web3\r\nimport useEth from \"./../contexts/EthContext/useEth\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction createData(contract, description, link, address) {\r\n  return { contract, description, link, address };\r\n}\r\n\r\nfunction DrawLinkAHrefExplorer(props) {\r\n  const url = `https://kovan.etherscan.io/address/${props.addr}`;\r\n  return <a href={url} target='_blank'>{props.addr}</a>\r\n}\r\n\r\nfunction DrawLinkAHref(props) {\r\n  return <a href={props.addr} target='_blank'>{props.addr}</a>\r\n}\r\n\r\n\r\nfunction SmartsContracts() {\r\n  const navigate = useNavigate();\r\n\r\n//  const { state: { contractAyg, contractNayg, contractNftayg, contractStaking, contractStakingNFT, contractVault, contractLPToken, contractPoolSwap } } = useEth();\r\n/*\r\n  let addressAyg, contractAyg;\r\n  let addressNayg, contractNayg;\r\n  let addressNftayg, contractNftayg;\r\n  let addressStaking, contractStaking;\r\n  let addressStakingNFT, contractStakingNFT;\r\n  let addressVault, contractVault;\r\n  let addressLPToken, contractLPToken;\r\n  let addressPoolSwap, contractPoolSwap;\r\n*/\r\n  const rows = [\r\n\r\n    createData('Erc20_AYG.sol', \"Création ERC20 avec faucet pour le token $AYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC20_Ayg.sol\", \"0x000...\"),\r\n    createData('Erc20_NAYG.sol', \"Création ERC20 avec faucet pour le token $nAYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC20_Nayg.sol\", \"0x000...\"),\r\n    createData('Erc721_NFTAYG.sol', \"Création ERC721 pour la collection de 3 modèles NFT\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC721_Nftayg.sol\", \"0x000...\"),\r\n    createData('EthVaultMintAyg.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/EthVaultMintAyg.sol\", \"0x000...\"),\r\n    createData('LPToken.sol', \"Contrat de Liquidity provider\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/LPToken.sol\", \"0x000...\"),\r\n//    createData('Pausable.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/Pausable.sol\", frfrfrf._address),\r\n    createData('PoolSwapStake.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/PoolSwapStake.sol\", \"0x000...\"),\r\n    createData('Staking.sol', \"Contrat de staking pour l'ERC20 $AYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/Staking.sol\", \"0x000...\"),\r\n//    createData('StakingLocked.sol', \"Contrat de staking pour l'ERC20 $AYG avec option de locking !\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/StakingLocked.sol\", contractStakingLocked._address),\r\n    createData('StakingNFT.sol', \"Contrat de staking NFT pour l'ER721 $NFTAYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/StakingNFT.sol\", \"0x000...\"),\r\n\r\n/*\r\n    createData('Erc20_AYG.sol', \"Création ERC20 avec faucet pour le token $AYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC20_Ayg.sol\", contractAyg._address),\r\n    createData('Erc20_NAYG.sol', \"Création ERC20 avec faucet pour le token $nAYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC20_Nayg.sol\", contractNayg._address),\r\n    createData('Erc721_NFTAYG.sol', \"Création ERC721 pour la collection de 3 modèles NFT\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/ERC721_Nftayg.sol\", contractNftayg._address),\r\n    createData('EthVaultMintAyg.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/EthVaultMintAyg.sol\", contractVault._address),\r\n    createData('LPToken.sol', \"Contrat de Liquidity provider\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/LPToken.sol\", contractLPToken._address),\r\n//    createData('Pausable.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/Pausable.sol\", frfrfrf._address),\r\n    createData('PoolSwapStake.sol', \"...\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/PoolSwapStake.sol\", contractPoolSwap._address),\r\n    createData('Staking.sol', \"Contrat de staking pour l'ERC20 $AYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/Staking.sol\", contractStaking._address),\r\n//    createData('StakingLocked.sol', \"Contrat de staking pour l'ERC20 $AYG avec option de locking !\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/StakingLocked.sol\", contractStakingLocked._address),\r\n    createData('StakingNFT.sol', \"Contrat de staking NFT pour l'ER721 $NFTAYG\", \"https://github.com/bad4token/Projet4_AYG-Labs_DeFi/blob/develop/truffle/contracts/StakingNFT.sol\", contractStakingNFT._address),\r\n*/\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          Smarts Contracts & Docs\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          ...need more informations ?\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Smart Contract</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>File .SOL</TableCell>\r\n                <TableCell>Address deploy (Testnet Kovan)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.contract}\r\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <strong>{row.contract}</strong>\r\n                  </TableCell>\r\n                  <TableCell>{row.description}</TableCell>\r\n                  <TableCell>\r\n                    <DrawLinkAHref\r\n                      addr={row.link}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <DrawLinkAHrefExplorer\r\n                      addr={row.address}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <br />\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>\r\n                <h2>Pour plus d'informations vous pouvez consulter le Github du projet !</h2>\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    alert('Github !');\r\n                  }}\r\n                >\r\n                  view Github\r\n                </Button>\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default SmartsContracts;\r\n\r\n","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction About() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          ABOUT\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n          ... Why this Dapp ?\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>\r\n                <h2>Projet #4</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 300,\r\n                    width: 400,\r\n                    maxHeight: { xs: 100, md: 300 },\r\n                    maxWidth: { xs: 133, md: 400 },\r\n                  }}\r\n                  alt=\"Staking NFT\"\r\n                  src=\"./../pic_staking.gif\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Staking');\r\n                  }}\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Staking');\r\n                  }}\r\n                >\r\n                  Go !\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default About;\r\n\r\n","import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nfunction Team() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          TEAM\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n        i am what i am !\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <Item>\r\n                <h2>Alex</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 200,\r\n                    width: 200,\r\n                    maxHeight: { xs: 100, md: 150 },\r\n                    maxWidth: { xs: 100, md: 150 },\r\n                  }}\r\n                  alt=\"Alex\"\r\n                  src=\"./../team_user1.png\"\r\n                  onClick={(e) => {\r\n                    navigate('/NFT/Staking');\r\n                  }}\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    alert('Github !');\r\n                  }}\r\n                >\r\n                  view Github\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Item>\r\n                <h2>Yannick</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 200,\r\n                    width: 200,\r\n                    maxHeight: { xs: 100, md: 150 },\r\n                    maxWidth: { xs: 100, md: 150 },\r\n                  }}\r\n                  alt=\"Yannick\"\r\n                  src=\"./../team_user2.png\"\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    alert('Github !');\r\n                  }}\r\n                >\r\n                  view Github\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Item>\r\n                <h2>Greg</h2>\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    height: 200,\r\n                    width: 200,\r\n                    maxHeight: { xs: 100, md: 150 },\r\n                    maxWidth: { xs: 100, md: 150 },\r\n                  }}\r\n                  alt=\"Greg\"\r\n                  src=\"./../team_user3.png\"\r\n                />\r\n                <Button\r\n                  fullWidth variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={(e) => {\r\n                    alert('Github !');\r\n                  }}\r\n                >\r\n                  view Github\r\n                </Button>\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default Team;","// Import NPM\r\nimport React from 'react';\r\nimport {Routes, Route} from 'react-router-dom';\r\n\r\n// Import SC & Web3\r\nimport { EthProvider } from \"./contexts/EthContext\";\r\n\r\n// Import ASSETS\r\nimport './App.css';\r\n\r\n// Import UI\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\n// Import COMPONENTS\r\nimport ResponsiveAppBar from \"./components/ResponsiveAppBar\";\r\n\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Token from \"./components/Token\";\r\nimport TokenManageAYG from \"./components/TokenManageAYG\";\r\nimport TokenManageNAYG from \"./components/TokenManageNAYG\";\r\nimport Swap from \"./components/Swap\";\r\nimport Stake from \"./components/Stake\";\r\nimport StakeManageAYG from \"./components/StakeManageAYG\";\r\nimport StakeManageLP from \"./components/StakeManageLP\";\r\nimport Pool from \"./components/Pool\";\r\nimport PoolAdd from \"./components/PoolAdd\";\r\nimport PoolManage from \"./components/PoolManage\";\r\nimport NFT from \"./components/NFT\";\r\nimport NFTmint from \"./components/NFTmint\";\r\nimport NFTstaking from \"./components/NFTstaking\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport SmartsContracts from \"./components/SmartsContracts\";\r\nimport About from \"./components/About\";\r\nimport Team from \"./components/Team\";\r\n\r\n//Connect Button import\r\nimport '@rainbow-me/rainbowkit/dist/index.css';\r\nimport {\r\n  getDefaultWallets,\r\n  RainbowKitProvider,\r\n} from '@rainbow-me/rainbowkit';\r\nimport {\r\n  chain,\r\n  configureChains,\r\n  createClient,\r\n  WagmiConfig,\r\n} from 'wagmi';\r\nimport { alchemyProvider } from 'wagmi/providers/alchemy';\r\nimport { publicProvider } from 'wagmi/providers/public';\r\n\r\n\r\n//Connect Button\r\nconst { chains, provider } = configureChains(\r\n  [chain.mainnet, chain.kovan, chain.localhost, chain.polygon, chain.optimism, chain.arbitrum],\r\n  [\r\n    alchemyProvider({ alchemyId: process.env.ALCHEMY_ID }),\r\n    publicProvider()\r\n  ]\r\n);\r\n\r\nconst { connectors } = getDefaultWallets({\r\n  appName: 'My RainbowKit App',\r\n  chains\r\n});\r\n\r\nconst wagmiClient = createClient({\r\n  autoConnect: true,\r\n  connectors,\r\n  provider\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <EthProvider>\r\n      <WagmiConfig client={wagmiClient}>\r\n        <RainbowKitProvider chains={chains}>\r\n          <React.Fragment>\r\n          <div className=\"App\">\r\n            <CssBaseline />\r\n            <ResponsiveAppBar></ResponsiveAppBar>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Dashboard />} />\r\n              <Route path=\"/Dashboard\" element={<Dashboard />} />\r\n              <Route path=\"/Token\" element={<Token /> }/>\r\n              <Route path=\"/TokenManage/AYG\" element={<TokenManageAYG />} />\r\n              <Route path=\"/Vault&Swap\" element={<Swap />} />\r\n              <Route path=\"/TokenManage/nAYG\" element={<TokenManageNAYG />} />\r\n              <Route path=\"/Swap\" element={<Swap />} />\r\n              <Route path=\"/Stake\" element={<Stake />} />\r\n              <Route path=\"/StakeManage/AYG\" element={<StakeManageAYG/>} />\r\n              <Route path=\"/StakeManage/LP\" element={<StakeManageLP/>} />\"\r\n              <Route path=\"/Pool\" element={<Pool />} />\r\n              <Route path=\"/PoolAdd\" element={<PoolAdd />} />\r\n              <Route path=\"/PoolManage\" element={<PoolManage />} />\r\n              <Route path=\"/NFT\" element={<NFT />} />\r\n              <Route path=\"/NFT/Mint\" element={<NFTmint />} />\r\n              <Route path=\"/NFT/Staking\" element={<NFTstaking />} />\r\n              <Route path=\"/Team\" element={<Team />} />\r\n              <Route path=\"/About\" element={<About />} />\r\n              <Route path=\"/SmartsContracts\" element={<SmartsContracts />} />\r\n            </Routes>\r\n            <Footer> </Footer>\r\n            </div>\r\n          </React.Fragment>\r\n        </RainbowKitProvider>\r\n      </WagmiConfig>\r\n\r\n    </EthProvider>\r\n  );\r\n\r\n//  }\r\n\r\n}\r\n\r\nexport default App;","import {createRoot} from 'react-dom/client';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\n// 👇️ wrap App in Router\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n","import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","// Import NPM\r\nimport React, { useEffect, useState, PureComponent } from 'react';\r\n\r\n// Import SC & Web3\r\nimport useEth from \"./../contexts/EthContext/useEth\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Button from '@mui/material/Button';\r\nimport IconFaucet from '@mui/icons-material/CleanHands';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n\r\n// Import Recharts UI\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nfunction DrawIcoToken({ alt, code }) {\r\n  const href= `ico_${code}.png`;\r\n  const CODE = code.toUpperCase();\r\n  return <Chip\r\n    avatar={<Avatar alt={alt} src={href} />}\r\n    label={CODE}\r\n    variant=\"outlined\"\r\n  />\r\n}\r\n\r\nfunction DrawLinkAHrefExplorer(props) {\r\n  const url = `https://kovan.etherscan.io/address/${props.addr}`;\r\n  return <a href={url} target='_blank'>{props.addr}</a>\r\n}\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nfunction TokenManageAYG() {\r\n\r\n  const { state: { contractAyg, contractNayg, contractNftayg, contractStaking, contractStakingNFT, accounts, addressStaking, addressStakingNFT } } = useEth();\r\n\r\n  const [addr_AYG, setAddr_AYG] = useState(contractAyg._address);\r\n  const [name_AYG, setName_AYG] = useState(0);\r\n  const [decimals_AYG, setDecimals_AYG] = useState(0);\r\n  const [symbol_AYG, setSymbol_AYG] = useState(0);\r\n  const [totalsupply_AYG, setTotalSupply_AYG] = useState(0);\r\n  const [amountFaucet_AYG, setAmountFaucet_AYG] = useState(0);\r\n  const [moveTokenAYG, setDataMoveAYG] = useState([]);\r\n  const [graphTokenAYG, setDataGraphAYG] = useState([]);\r\n\r\n  const [nbMoveAYG, setNbMoveAYG] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    if(contractAyg){\r\n    async function fetchData(){\r\n        try {\r\n          updateAYG();\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const faucetAYG = async () => {\r\n    contractAyg.methods.faucet(accounts[0]).send({from: accounts[0]})\r\n      .then((results) => {\r\n        console.log(results);\r\n        console.log(results.events.MintSupply.returnValues.amount);\r\n        updateAYG();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n \r\n  const setFaucetAYG = async () => {\r\n    let amount = 2000; // ETH (test)\r\n    amount = eval(amount*1000000000000000000);\r\n    contractAyg.methods.setFaucet(amount).send({from: accounts[0]})\r\n      .then((results) => {\r\n        console.log(results);\r\n        updateAYG();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });    \r\n  }\r\n  \r\n  const updateAYG = async () => {\r\n    contractAyg.methods.totalSupply().call({ from: accounts[0] })\r\n      .then((totalsupply_AYG) => {\r\n        setTotalSupply_AYG(totalsupply_AYG/1000000000000000000);\r\n        console.log(\"totalsupply_AYG = \"+totalsupply_AYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractAyg.methods.name().call({ from: accounts[0] })\r\n      .then((name_AYG) => {\r\n        setName_AYG(name_AYG);\r\n        console.log(\"name_AYG = \"+name_AYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractAyg.methods.decimals().call({ from: accounts[0] })\r\n      .then((decimals_AYG) => {\r\n        setDecimals_AYG(decimals_AYG);\r\n        console.log(\"decimals_AYG = \"+decimals_AYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractAyg.methods.symbol().call({ from: accounts[0] })\r\n      .then((symbol_AYG) => {\r\n        setSymbol_AYG(symbol_AYG);\r\n        console.log(\"symbol_AYG = \"+symbol_AYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractAyg.methods.amountFaucet().call({ from: accounts[0] })\r\n      .then((amountFaucet_AYG) => {\r\n        setAmountFaucet_AYG(amountFaucet_AYG/1000000000000000000);\r\n        console.log(\"amountFaucet_AYG = \"+amountFaucet_AYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractAyg.getPastEvents('MintSupply', { fromBlock: 0, toBlock: 'latest' })\r\n      .then((results) => {\r\n        let supplyTotal = 0;\r\n        let moveTokenAYG = [];\r\n        let graphTokenAYG = [];\r\n        results.forEach(async (result) => {\r\n/*\r\n          const getTimeByBlock = async(txHash) => {\r\n            const blockN = resultawait web3.eth.getTransaction(txHash)\r\n            const blockData = await web3.eth.getBlock(blockN.blockNumber)\r\n          \r\n            return blockData.timestamp\r\n          }\r\n*/\r\n/*\r\n          contract_Erc20_AYG.getBlock(result.blockNumber)\r\n          .then((blockData) => {\r\n            console.log(blockData.timestamp);\r\n          }\r\n*/\r\n\r\n\r\n          moveTokenAYG.push({ methode: result.returnValues.methode, blockNumber: result.blockNumber, amount: result.returnValues.amount/1000000000000000000, addr: result.returnValues.addr, transactionHash: result.transactionHash });\r\n          setDataMoveAYG(moveTokenAYG);\r\n          supplyTotal = result.returnValues.amount/1000000000000000000 + supplyTotal;\r\n          switch (result.returnValues.methode) {\r\n            case 'getFaucet':\r\n              graphTokenAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: result.returnValues.amount/1000000000000000000, reward: 0  });\r\n              break;\r\n            case 'getReward':\r\n              graphTokenAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: 0, reward: result.returnValues.amount/1000000000000000000  });\r\n              break;\r\n            default:\r\n              console.log(`Sorry !`);\r\n          }\r\n          setDataGraphAYG(graphTokenAYG);\r\n        })\r\n        setNbMoveAYG(results.length);\r\n\r\n        console.log(moveTokenAYG)\r\n        console.log(graphTokenAYG)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  function createData(type, date, amount, to) {\r\n    return { type, date, amount, to };\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          TOKEN\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n        <DrawIcoToken alt=\"ayg\" code=\"ayg\" />&nbsp;AYG Token\r\n        </Typography>\r\n        <br />CONTRACT&nbsp;ERC20&nbsp;:&nbsp;\r\n        <DrawLinkAHrefExplorer\r\n          addr={addr_AYG}\r\n        />\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ width: '100%' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                <h3>TOTAL SUPPLY</h3>\r\n                <h1>{totalsupply_AYG} $AYG</h1>\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>CLAIM FAUCET</h3>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconFaucet />}\r\n                  onClick={faucetAYG}\r\n                >\r\n                  {amountFaucet_AYG} AYG \r\n                </Button>\r\n                <br />claim limited x1\r\n                <br />\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>SET FAUCET (onlyOwner)</h3>\r\n                <TextField id=\"faucetAmount\" label=\"amount\" variant=\"outlined\" value={amountFaucet_AYG} />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconFaucet />}\r\n                  onClick={setFaucetAYG}\r\n                >\r\n                  SET \r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={9}>\r\n              <Item>\r\n                <h3>GRAPH SUPPLY</h3>\r\n                <ResponsiveContainer width='100%' aspect={4.0/1.0}>\r\n                  <BarChart data={graphTokenAYG}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"supply\" stackId=\"a\" fill=\"#8884d8\" />\r\n                    <Bar dataKey=\"faucet\" stackId=\"a\" fill=\"#82ca9d\" />\r\n                    <Bar dataKey=\"reward\" stackId=\"a\" fill=\"#df99a1\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n                <br />\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>LAST MOUVEMENT ({nbMoveAYG})</h3>\r\n                <TableContainer component={Paper}>\r\n                  <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Block#</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>To</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {moveTokenAYG.map((row) => (\r\n                        <TableRow\r\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.methode}\r\n                          </TableCell>\r\n                          <TableCell>{row.blockNumber}</TableCell>\r\n                          <TableCell>{row.amount}</TableCell>\r\n                          <TableCell>{row.addr}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default TokenManageAYG;\r\n","// Import NPM\r\nimport React, { useEffect, useState, PureComponent } from 'react';\r\n\r\n// Import SC & Web3\r\nimport useEth from \"./../contexts/EthContext/useEth\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Chip from '@mui/material/Chip';\r\nimport Button from '@mui/material/Button';\r\nimport IconFaucet from '@mui/icons-material/CleanHands';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n\r\n// Import Recharts UI\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nfunction DrawIcoToken({ alt, code }) {\r\n  const href= `ico_${code}.png`;\r\n  const CODE = code.toUpperCase();\r\n  return <Chip\r\n    avatar={<Avatar alt={alt} src={href} />}\r\n    label={CODE}\r\n    variant=\"outlined\"\r\n  />\r\n}\r\n\r\nfunction DrawLinkAHrefExplorer(props) {\r\n  const url = `https://kovan.etherscan.io/address/${props.addr}`;\r\n  return <a href={url} target='_blank'>{props.addr}</a>\r\n}\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nfunction TokenManageNAYG() {\r\n\r\n  const { state: { contractAyg, contractNayg, contractNftayg, contractStaking, contractStakingNFT, accounts, addressStaking, addressStakingNFT } } = useEth();\r\n\r\n  const [addr_NAYG, setAddr_NAYG] = useState(contractNayg._address);\r\n  const [name_NAYG, setName_NAYG] = useState(0);\r\n  const [decimals_NAYG, setDecimals_NAYG] = useState(0);\r\n  const [symbol_NAYG, setSymbol_NAYG] = useState(0);\r\n  const [totalsupply_NAYG, setTotalSupply_NAYG] = useState(0);\r\n  const [amountFaucet_NAYG, setAmountFaucet_NAYG] = useState(0);\r\n  const [moveTokenNAYG, setDataMoveNAYG] = useState([]);\r\n  const [graphTokenNAYG, setDataGraphNAYG] = useState([]);\r\n\r\n  const [nbMoveNAYG, setNbMoveNAYG] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    if(contractNayg){\r\n    async function fetchData(){\r\n        try {\r\n          updateNAYG();\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const faucetNAYG = async () => {\r\n    contractNayg.methods.getFaucet(accounts[0]).send({from: accounts[0]})\r\n      .then((results) => {\r\n        console.log(results);\r\n        console.log(results.events.MintSupply.returnValues.amount);\r\n        updateNAYG();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n \r\n  const setFaucetNAYG = async () => {\r\n    let amount = 2000; // ETH (test)\r\n    amount = eval(amount*10**18);\r\n    contractNayg.methods.setFaucet(amount).send({from: accounts[0]})\r\n      .then((results) => {\r\n        console.log(results);\r\n        updateNAYG();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });    \r\n  }\r\n  \r\n  const updateNAYG = async () => {\r\n    contractNayg.methods.totalSupply().call({ from: accounts[0] })\r\n      .then((totalsupply_NAYG) => {\r\n        totalsupply_NAYG = totalsupply_NAYG/10**18;\r\n        totalsupply_NAYG = Math.round(totalsupply_NAYG * 100) / 100;\r\n        setTotalSupply_NAYG(totalsupply_NAYG);\r\n        console.log(\"totalsupply_NAYG = \"+totalsupply_NAYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractNayg.methods.name().call({ from: accounts[0] })\r\n      .then((name_NAYG) => {\r\n        setName_NAYG(name_NAYG);\r\n        console.log(\"name_NAYG = \"+name_NAYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractNayg.methods.decimals().call({ from: accounts[0] })\r\n      .then((decimals_NAYG) => {\r\n        setDecimals_NAYG(decimals_NAYG);\r\n        console.log(\"decimals_NAYG = \"+decimals_NAYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractNayg.methods.symbol().call({ from: accounts[0] })\r\n      .then((symbol_NAYG) => {\r\n        setSymbol_NAYG(symbol_NAYG);\r\n        console.log(\"symbol_NAYG = \"+symbol_NAYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractNayg.methods.amountFaucet().call({ from: accounts[0] })\r\n      .then((amountFaucet_NAYG) => {\r\n        setAmountFaucet_NAYG(amountFaucet_NAYG/10**18);\r\n        console.log(\"amountFaucet_NAYG = \"+amountFaucet_NAYG);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    contractNayg.getPastEvents('MintSupply', { fromBlock: 0, toBlock: 'latest' })\r\n      .then((results) => {\r\n        let supplyTotal = 0;\r\n        let moveTokenNAYG = [];\r\n        let graphTokenNAYG = [];\r\n        results.forEach(async (result) => {\r\n/*\r\n          const getTimeByBlock = async(txHash) => {\r\n            const blockN = resultawait web3.eth.getTransaction(txHash)\r\n            const blockData = await web3.eth.getBlock(blockN.blockNumber)\r\n          \r\n            return blockData.timestamp\r\n          }\r\n*/\r\n/*\r\n          contract_Erc20_NAYG.getBlock(result.blockNumber)\r\n          .then((blockData) => {\r\n            console.log(blockData.timestamp);\r\n          }\r\n*/\r\n\r\n\r\n          moveTokenNAYG.push({ methode: result.returnValues.methode, blockNumber: result.blockNumber, amount: result.returnValues.amount/10**18, addr: result.returnValues.addr, transactionHash: result.transactionHash });\r\n          setDataMoveNAYG(moveTokenNAYG);\r\n          supplyTotal = result.returnValues.amount/10**18 + supplyTotal;\r\n          switch (result.returnValues.methode) {\r\n            case 'getFaucet':\r\n              graphTokenNAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: result.returnValues.amount/10**18, reward: 0  });\r\n              break;\r\n            case 'getReward':\r\n              graphTokenNAYG.push({ name: result.blockNumber, supply: supplyTotal, faucet: 0, reward: result.returnValues.amount/10**18  });\r\n              break;\r\n            default:\r\n              console.log(`Sorry !`);\r\n          }\r\n          setDataGraphNAYG(graphTokenNAYG);\r\n        })\r\n        setNbMoveNAYG(results.length);\r\n\r\n        console.log(moveTokenNAYG)\r\n        console.log(graphTokenNAYG)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  function createData(type, date, amount, to) {\r\n    return { type, date, amount, to };\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {/* Head */}\r\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          TOKEN\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n        <DrawIcoToken alt=\"nayg\" code=\"nayg\" />&nbsp;NAYG Token\r\n        </Typography>\r\n        <Typography variant=\"h7\" align=\"center\" color=\"text.secondary\" component=\"p\">\r\n        <br />CONTRACT&nbsp;ERC20&nbsp;:&nbsp;\r\n        <DrawLinkAHrefExplorer\r\n          addr={addr_NAYG}\r\n        />\r\n        </Typography>\r\n      </Container>\r\n      {/* End Head */}\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ width: '100%' }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <Item>\r\n                <h3>TOTAL SUPPLY</h3>\r\n                <h1>{totalsupply_NAYG} $nAYG</h1>\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>CLAIM FAUCET</h3>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconFaucet />}\r\n                  onClick={faucetNAYG}\r\n                >\r\n                  {amountFaucet_NAYG} NAYG \r\n                </Button>\r\n                <br />claim unlimited\r\n                <br />\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>SET FAUCET (onlyOwner)</h3>\r\n                <TextField id=\"faucetAmount\" label=\"amount\" variant=\"outlined\" value={amountFaucet_NAYG} />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<IconFaucet />}\r\n                  onClick={setFaucetNAYG}\r\n                >\r\n                  SET \r\n                </Button>\r\n                <br />\r\n                <br />\r\n              </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={9}>\r\n              <Item>\r\n                <h3>GRAPH SUPPLY</h3>\r\n                <ResponsiveContainer width='100%' aspect={4.0/1.0}>\r\n                  <BarChart data={graphTokenNAYG}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"supply\" stackId=\"a\" fill=\"#8884d8\" />\r\n                    <Bar dataKey=\"faucet\" stackId=\"b\" fill=\"#82ca9d\" />\r\n                    <Bar dataKey=\"reward\" stackId=\"c\" fill=\"#df99a1\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n                <br />\r\n              </Item>\r\n              <br />\r\n              <Item>\r\n                <h3>LAST MOUVEMENT ({nbMoveNAYG})</h3>\r\n                <TableContainer component={Paper}>\r\n                  <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Block#</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>To</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {moveTokenNAYG.map((row) => (\r\n                        <TableRow\r\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.methode}\r\n                          </TableCell>\r\n                          <TableCell>{row.blockNumber}</TableCell>\r\n                          <TableCell>{row.amount}</TableCell>\r\n                          <TableCell>{row.addr}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default TokenManageNAYG;\r\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n"],"sourceRoot":""}